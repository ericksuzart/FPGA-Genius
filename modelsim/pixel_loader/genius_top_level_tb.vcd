$date
	Thu Jul 13 02:53:19 2023
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module Genius_top_level_tb $end
$var reg 1 ! CLOCK_50 $end
$var reg 1 " CLOCK_25 $end
$var reg 1 # SW6 $end
$var reg 1 $ SW5 $end
$var reg 1 % SW4 $end
$var reg 1 & SW3 $end
$var reg 1 ' SW2 $end
$var reg 1 ( SW1 $end
$var reg 1 ) SW0 $end
$var reg 1 * SW7 $end
$var wire 1 + VGA_HS $end
$var wire 1 , VGA_VS $end
$var wire 1 - VGA_BLANK_N $end
$var wire 1 . VGA_CLK $end
$var wire 1 / c1 $end
$var wire 1 0 VGA_B [7] $end
$var wire 1 1 VGA_B [6] $end
$var wire 1 2 VGA_B [5] $end
$var wire 1 3 VGA_B [4] $end
$var wire 1 4 VGA_B [3] $end
$var wire 1 5 VGA_B [2] $end
$var wire 1 6 VGA_B [1] $end
$var wire 1 7 VGA_B [0] $end
$var wire 1 8 VGA_G [7] $end
$var wire 1 9 VGA_G [6] $end
$var wire 1 : VGA_G [5] $end
$var wire 1 ; VGA_G [4] $end
$var wire 1 < VGA_G [3] $end
$var wire 1 = VGA_G [2] $end
$var wire 1 > VGA_G [1] $end
$var wire 1 ? VGA_G [0] $end
$var wire 1 @ VGA_R [7] $end
$var wire 1 A VGA_R [6] $end
$var wire 1 B VGA_R [5] $end
$var wire 1 C VGA_R [4] $end
$var wire 1 D VGA_R [3] $end
$var wire 1 E VGA_R [2] $end
$var wire 1 F VGA_R [1] $end
$var wire 1 G VGA_R [0] $end

$scope module dut $end
$var wire 1 H CLOCK_50 $end
$var wire 1 I CLOCK_25 $end
$var wire 1 J SW6 $end
$var wire 1 K SW5 $end
$var wire 1 L SW4 $end
$var wire 1 M SW3 $end
$var wire 1 N SW2 $end
$var wire 1 O SW1 $end
$var wire 1 P SW0 $end
$var wire 1 Q SW7 $end
$var wire 1 + VGA_HS $end
$var wire 1 , VGA_VS $end
$var wire 1 - VGA_BLANK_N $end
$var wire 1 . VGA_CLK $end
$var wire 1 / c1 $end
$var wire 1 0 VGA_B [7] $end
$var wire 1 1 VGA_B [6] $end
$var wire 1 2 VGA_B [5] $end
$var wire 1 3 VGA_B [4] $end
$var wire 1 4 VGA_B [3] $end
$var wire 1 5 VGA_B [2] $end
$var wire 1 6 VGA_B [1] $end
$var wire 1 7 VGA_B [0] $end
$var wire 1 8 VGA_G [7] $end
$var wire 1 9 VGA_G [6] $end
$var wire 1 : VGA_G [5] $end
$var wire 1 ; VGA_G [4] $end
$var wire 1 < VGA_G [3] $end
$var wire 1 = VGA_G [2] $end
$var wire 1 > VGA_G [1] $end
$var wire 1 ? VGA_G [0] $end
$var wire 1 @ VGA_R [7] $end
$var wire 1 A VGA_R [6] $end
$var wire 1 B VGA_R [5] $end
$var wire 1 C VGA_R [4] $end
$var wire 1 D VGA_R [3] $end
$var wire 1 E VGA_R [2] $end
$var wire 1 F VGA_R [1] $end
$var wire 1 G VGA_R [0] $end
$var wire 1 R SYNTHESIZED_WIRE_0 $end
$var wire 1 S SYNTHESIZED_WIRE_1 [23] $end
$var wire 1 T SYNTHESIZED_WIRE_1 [22] $end
$var wire 1 U SYNTHESIZED_WIRE_1 [21] $end
$var wire 1 V SYNTHESIZED_WIRE_1 [20] $end
$var wire 1 W SYNTHESIZED_WIRE_1 [19] $end
$var wire 1 X SYNTHESIZED_WIRE_1 [18] $end
$var wire 1 Y SYNTHESIZED_WIRE_1 [17] $end
$var wire 1 Z SYNTHESIZED_WIRE_1 [16] $end
$var wire 1 [ SYNTHESIZED_WIRE_1 [15] $end
$var wire 1 \ SYNTHESIZED_WIRE_1 [14] $end
$var wire 1 ] SYNTHESIZED_WIRE_1 [13] $end
$var wire 1 ^ SYNTHESIZED_WIRE_1 [12] $end
$var wire 1 _ SYNTHESIZED_WIRE_1 [11] $end
$var wire 1 ` SYNTHESIZED_WIRE_1 [10] $end
$var wire 1 a SYNTHESIZED_WIRE_1 [9] $end
$var wire 1 b SYNTHESIZED_WIRE_1 [8] $end
$var wire 1 c SYNTHESIZED_WIRE_1 [7] $end
$var wire 1 d SYNTHESIZED_WIRE_1 [6] $end
$var wire 1 e SYNTHESIZED_WIRE_1 [5] $end
$var wire 1 f SYNTHESIZED_WIRE_1 [4] $end
$var wire 1 g SYNTHESIZED_WIRE_1 [3] $end
$var wire 1 h SYNTHESIZED_WIRE_1 [2] $end
$var wire 1 i SYNTHESIZED_WIRE_1 [1] $end
$var wire 1 j SYNTHESIZED_WIRE_1 [0] $end
$var wire 1 k SYNTHESIZED_WIRE_2 [47] $end
$var wire 1 l SYNTHESIZED_WIRE_2 [46] $end
$var wire 1 m SYNTHESIZED_WIRE_2 [45] $end
$var wire 1 n SYNTHESIZED_WIRE_2 [44] $end
$var wire 1 o SYNTHESIZED_WIRE_2 [43] $end
$var wire 1 p SYNTHESIZED_WIRE_2 [42] $end
$var wire 1 q SYNTHESIZED_WIRE_2 [41] $end
$var wire 1 r SYNTHESIZED_WIRE_2 [40] $end
$var wire 1 s SYNTHESIZED_WIRE_2 [39] $end
$var wire 1 t SYNTHESIZED_WIRE_2 [38] $end
$var wire 1 u SYNTHESIZED_WIRE_2 [37] $end
$var wire 1 v SYNTHESIZED_WIRE_2 [36] $end
$var wire 1 w SYNTHESIZED_WIRE_2 [35] $end
$var wire 1 x SYNTHESIZED_WIRE_2 [34] $end
$var wire 1 y SYNTHESIZED_WIRE_2 [33] $end
$var wire 1 z SYNTHESIZED_WIRE_2 [32] $end
$var wire 1 { SYNTHESIZED_WIRE_2 [31] $end
$var wire 1 | SYNTHESIZED_WIRE_2 [30] $end
$var wire 1 } SYNTHESIZED_WIRE_2 [29] $end
$var wire 1 ~ SYNTHESIZED_WIRE_2 [28] $end
$var wire 1 !! SYNTHESIZED_WIRE_2 [27] $end
$var wire 1 "! SYNTHESIZED_WIRE_2 [26] $end
$var wire 1 #! SYNTHESIZED_WIRE_2 [25] $end
$var wire 1 $! SYNTHESIZED_WIRE_2 [24] $end
$var wire 1 %! SYNTHESIZED_WIRE_2 [23] $end
$var wire 1 &! SYNTHESIZED_WIRE_2 [22] $end
$var wire 1 '! SYNTHESIZED_WIRE_2 [21] $end
$var wire 1 (! SYNTHESIZED_WIRE_2 [20] $end
$var wire 1 )! SYNTHESIZED_WIRE_2 [19] $end
$var wire 1 *! SYNTHESIZED_WIRE_2 [18] $end
$var wire 1 +! SYNTHESIZED_WIRE_2 [17] $end
$var wire 1 ,! SYNTHESIZED_WIRE_2 [16] $end
$var wire 1 -! SYNTHESIZED_WIRE_2 [15] $end
$var wire 1 .! SYNTHESIZED_WIRE_2 [14] $end
$var wire 1 /! SYNTHESIZED_WIRE_2 [13] $end
$var wire 1 0! SYNTHESIZED_WIRE_2 [12] $end
$var wire 1 1! SYNTHESIZED_WIRE_2 [11] $end
$var wire 1 2! SYNTHESIZED_WIRE_2 [10] $end
$var wire 1 3! SYNTHESIZED_WIRE_2 [9] $end
$var wire 1 4! SYNTHESIZED_WIRE_2 [8] $end
$var wire 1 5! SYNTHESIZED_WIRE_2 [7] $end
$var wire 1 6! SYNTHESIZED_WIRE_2 [6] $end
$var wire 1 7! SYNTHESIZED_WIRE_2 [5] $end
$var wire 1 8! SYNTHESIZED_WIRE_2 [4] $end
$var wire 1 9! SYNTHESIZED_WIRE_2 [3] $end
$var wire 1 :! SYNTHESIZED_WIRE_2 [2] $end
$var wire 1 ;! SYNTHESIZED_WIRE_2 [1] $end
$var wire 1 <! SYNTHESIZED_WIRE_2 [0] $end
$var wire 1 =! SYNTHESIZED_WIRE_3 [7] $end
$var wire 1 >! SYNTHESIZED_WIRE_3 [6] $end
$var wire 1 ?! SYNTHESIZED_WIRE_3 [5] $end
$var wire 1 @! SYNTHESIZED_WIRE_3 [4] $end
$var wire 1 A! SYNTHESIZED_WIRE_3 [3] $end
$var wire 1 B! SYNTHESIZED_WIRE_3 [2] $end
$var wire 1 C! SYNTHESIZED_WIRE_3 [1] $end
$var wire 1 D! SYNTHESIZED_WIRE_3 [0] $end
$var wire 1 E! SYNTHESIZED_WIRE_4 $end
$var wire 1 F! SYNTHESIZED_WIRE_5 [15] $end
$var wire 1 G! SYNTHESIZED_WIRE_5 [14] $end
$var wire 1 H! SYNTHESIZED_WIRE_5 [13] $end
$var wire 1 I! SYNTHESIZED_WIRE_5 [12] $end
$var wire 1 J! SYNTHESIZED_WIRE_5 [11] $end
$var wire 1 K! SYNTHESIZED_WIRE_5 [10] $end
$var wire 1 L! SYNTHESIZED_WIRE_5 [9] $end
$var wire 1 M! SYNTHESIZED_WIRE_5 [8] $end
$var wire 1 N! SYNTHESIZED_WIRE_5 [7] $end
$var wire 1 O! SYNTHESIZED_WIRE_5 [6] $end
$var wire 1 P! SYNTHESIZED_WIRE_5 [5] $end
$var wire 1 Q! SYNTHESIZED_WIRE_5 [4] $end
$var wire 1 R! SYNTHESIZED_WIRE_5 [3] $end
$var wire 1 S! SYNTHESIZED_WIRE_5 [2] $end
$var wire 1 T! SYNTHESIZED_WIRE_5 [1] $end
$var wire 1 U! SYNTHESIZED_WIRE_5 [0] $end
$var wire 1 V! SYNTHESIZED_WIRE_6 [2] $end
$var wire 1 W! SYNTHESIZED_WIRE_6 [1] $end
$var wire 1 X! SYNTHESIZED_WIRE_6 [0] $end
$var wire 1 Y! GDFX_TEMP_SIGNAL_0 [6] $end
$var wire 1 Z! GDFX_TEMP_SIGNAL_0 [5] $end
$var wire 1 [! GDFX_TEMP_SIGNAL_0 [4] $end
$var wire 1 \! GDFX_TEMP_SIGNAL_0 [3] $end
$var wire 1 ]! GDFX_TEMP_SIGNAL_0 [2] $end
$var wire 1 ^! GDFX_TEMP_SIGNAL_0 [1] $end
$var wire 1 _! GDFX_TEMP_SIGNAL_0 [0] $end

$scope module b2v_inst $end
$var parameter 32 `! H_DISP $end
$var parameter 32 a! H_FPORCH $end
$var parameter 32 b! H_SYNC $end
$var parameter 32 c! H_BPORCH $end
$var parameter 32 d! V_DISP $end
$var parameter 32 e! V_FPORCH $end
$var parameter 32 f! V_SYNC $end
$var parameter 32 g! V_BPORCH $end
$var parameter 32 h! H_OFF $end
$var parameter 32 i! V_OFF $end
$var parameter 32 j! H_PIXELS $end
$var parameter 32 k! V_LINES $end
$var parameter 32 l! BACKGROUND_HS $end
$var parameter 32 m! BACKGROUND_VS $end
$var parameter 32 n! BACKGROUND_X $end
$var parameter 32 o! BACKGROUND_Y $end
$var parameter 32 p! BLUE_HS $end
$var parameter 32 q! BLUE_VS $end
$var parameter 32 r! BLUE_X $end
$var parameter 32 s! BLUE_Y $end
$var parameter 32 t! GREEN_HS $end
$var parameter 32 u! GREEN_VS $end
$var parameter 32 v! GREEN_X $end
$var parameter 32 w! GREEN_Y $end
$var parameter 32 x! RED_HS $end
$var parameter 32 y! RED_VS $end
$var parameter 32 z! RED_X $end
$var parameter 32 {! RED_Y $end
$var parameter 32 |! YELLOW_HS $end
$var parameter 32 }! YELLOW_VS $end
$var parameter 32 ~! YELLOW_X $end
$var parameter 32 !" YELLOW_Y $end
$var parameter 32 "" LOSE_HS $end
$var parameter 32 #" LOSE_VS $end
$var parameter 32 $" LOSE_X $end
$var parameter 32 %" LOSE_Y $end
$var parameter 32 &" WIN_HS $end
$var parameter 32 '" WIN_VS $end
$var parameter 32 (" WIN_X $end
$var parameter 32 )" WIN_Y $end
$var parameter 32 *" PWR_HS $end
$var parameter 32 +" PWR_VS $end
$var parameter 32 ," PWR_X $end
$var parameter 32 -" PWR_Y $end
$var wire 1 R VGA_CLK $end
$var wire 1 Q RESET $end
$var wire 1 S RGB [23] $end
$var wire 1 T RGB [22] $end
$var wire 1 U RGB [21] $end
$var wire 1 V RGB [20] $end
$var wire 1 W RGB [19] $end
$var wire 1 X RGB [18] $end
$var wire 1 Y RGB [17] $end
$var wire 1 Z RGB [16] $end
$var wire 1 [ RGB [15] $end
$var wire 1 \ RGB [14] $end
$var wire 1 ] RGB [13] $end
$var wire 1 ^ RGB [12] $end
$var wire 1 _ RGB [11] $end
$var wire 1 ` RGB [10] $end
$var wire 1 a RGB [9] $end
$var wire 1 b RGB [8] $end
$var wire 1 c RGB [7] $end
$var wire 1 d RGB [6] $end
$var wire 1 e RGB [5] $end
$var wire 1 f RGB [4] $end
$var wire 1 g RGB [3] $end
$var wire 1 h RGB [2] $end
$var wire 1 i RGB [1] $end
$var wire 1 j RGB [0] $end
$var wire 1 + VGA_HS $end
$var wire 1 , VGA_VS $end
$var wire 1 - VGA_BLANK_N $end
$var wire 1 @ VGA_R [7] $end
$var wire 1 A VGA_R [6] $end
$var wire 1 B VGA_R [5] $end
$var wire 1 C VGA_R [4] $end
$var wire 1 D VGA_R [3] $end
$var wire 1 E VGA_R [2] $end
$var wire 1 F VGA_R [1] $end
$var wire 1 G VGA_R [0] $end
$var wire 1 8 VGA_G [7] $end
$var wire 1 9 VGA_G [6] $end
$var wire 1 : VGA_G [5] $end
$var wire 1 ; VGA_G [4] $end
$var wire 1 < VGA_G [3] $end
$var wire 1 = VGA_G [2] $end
$var wire 1 > VGA_G [1] $end
$var wire 1 ? VGA_G [0] $end
$var wire 1 0 VGA_B [7] $end
$var wire 1 1 VGA_B [6] $end
$var wire 1 2 VGA_B [5] $end
$var wire 1 3 VGA_B [4] $end
$var wire 1 4 VGA_B [3] $end
$var wire 1 5 VGA_B [2] $end
$var wire 1 6 VGA_B [1] $end
$var wire 1 7 VGA_B [0] $end
$var wire 1 Y! SPRITES_FLAGS [6] $end
$var wire 1 Z! SPRITES_FLAGS [5] $end
$var wire 1 [! SPRITES_FLAGS [4] $end
$var wire 1 \! SPRITES_FLAGS [3] $end
$var wire 1 ]! SPRITES_FLAGS [2] $end
$var wire 1 ^! SPRITES_FLAGS [1] $end
$var wire 1 _! SPRITES_FLAGS [0] $end
$var wire 1 =! SPRITES_EN [7] $end
$var wire 1 >! SPRITES_EN [6] $end
$var wire 1 ?! SPRITES_EN [5] $end
$var wire 1 @! SPRITES_EN [4] $end
$var wire 1 A! SPRITES_EN [3] $end
$var wire 1 B! SPRITES_EN [2] $end
$var wire 1 C! SPRITES_EN [1] $end
$var wire 1 D! SPRITES_EN [0] $end
$var reg 10 ." h_c [9:0] $end
$var reg 10 /" v_c [9:0] $end
$var wire 1 0" X [9] $end
$var wire 1 1" X [8] $end
$var wire 1 2" X [7] $end
$var wire 1 3" X [6] $end
$var wire 1 4" X [5] $end
$var wire 1 5" X [4] $end
$var wire 1 6" X [3] $end
$var wire 1 7" X [2] $end
$var wire 1 8" X [1] $end
$var wire 1 9" X [0] $end
$var wire 1 :" Y [9] $end
$var wire 1 ;" Y [8] $end
$var wire 1 <" Y [7] $end
$var wire 1 =" Y [6] $end
$var wire 1 >" Y [5] $end
$var wire 1 ?" Y [4] $end
$var wire 1 @" Y [3] $end
$var wire 1 A" Y [2] $end
$var wire 1 B" Y [1] $end
$var wire 1 C" Y [0] $end
$var wire 1 D" DISP_EN $end
$var wire 1 E" BACKGROUND_EN $end
$var wire 1 F" BLUE_EN $end
$var wire 1 G" GREEN_EN $end
$var wire 1 H" RED_EN $end
$var wire 1 I" YELLOW_EN $end
$var wire 1 J" LOSE_EN $end
$var wire 1 K" WIN_EN $end
$var wire 1 L" PWR_EN $end
$upscope $end

$scope module b2v_inst1 $end
$var wire 1 M" inclk0 $end
$var wire 1 N" c0 $end
$var wire 1 O" c1 $end
$var wire 1 P" sub_wire0 [4] $end
$var wire 1 Q" sub_wire0 [3] $end
$var wire 1 R" sub_wire0 [2] $end
$var wire 1 S" sub_wire0 [1] $end
$var wire 1 T" sub_wire0 [0] $end
$var wire 1 U" sub_wire1 $end
$var wire 1 V" sub_wire2 $end
$var wire 1 W" sub_wire3 $end
$var wire 1 X" sub_wire4 [1] $end
$var wire 1 Y" sub_wire4 [0] $end
$var wire 1 Z" sub_wire5_bv [0] $end
$var wire 1 [" sub_wire5 [0] $end

$scope module altpll_component $end
$var wire 1 X" inclk [1] $end
$var wire 1 Y" inclk [0] $end
$var wire 1 \" fbin $end
$var wire 1 ]" pllena $end
$var wire 1 ^" clkswitch $end
$var wire 1 _" areset $end
$var wire 1 `" pfdena $end
$var wire 1 a" clkena [5] $end
$var wire 1 b" clkena [4] $end
$var wire 1 c" clkena [3] $end
$var wire 1 d" clkena [2] $end
$var wire 1 e" clkena [1] $end
$var wire 1 f" clkena [0] $end
$var wire 1 g" extclkena [3] $end
$var wire 1 h" extclkena [2] $end
$var wire 1 i" extclkena [1] $end
$var wire 1 j" extclkena [0] $end
$var wire 1 k" scanclk $end
$var wire 1 l" scanclkena $end
$var wire 1 m" scanaclr $end
$var wire 1 n" scanread $end
$var wire 1 o" scanwrite $end
$var wire 1 p" scandata $end
$var wire 1 q" comparator $end
$var wire 1 r" phasecounterselect [3] $end
$var wire 1 s" phasecounterselect [2] $end
$var wire 1 t" phasecounterselect [1] $end
$var wire 1 u" phasecounterselect [0] $end
$var wire 1 v" phaseupdown $end
$var wire 1 w" phasestep $end
$var wire 1 x" configupdate $end
$var wire 1 y" fbmimicbidir $end
$var wire 1 P" clk [4] $end
$var wire 1 Q" clk [3] $end
$var wire 1 R" clk [2] $end
$var wire 1 S" clk [1] $end
$var wire 1 T" clk [0] $end
$var wire 1 z" extclk [3] $end
$var wire 1 {" extclk [2] $end
$var wire 1 |" extclk [1] $end
$var wire 1 }" extclk [0] $end
$var wire 1 ~" clkbad [1] $end
$var wire 1 !# clkbad [0] $end
$var wire 1 "# enable0 $end
$var wire 1 ## enable1 $end
$var wire 1 $# activeclock $end
$var wire 1 %# clkloss $end
$var wire 1 &# locked $end
$var wire 1 '# scandataout $end
$var wire 1 (# scandone $end
$var wire 1 )# sclkout0 $end
$var wire 1 *# sclkout1 $end
$var wire 1 +# phasedone $end
$var wire 1 ,# vcooverrange $end
$var wire 1 -# vcounderrange $end
$var wire 1 .# fbout $end
$var wire 1 /# fref $end
$var wire 1 0# icdrclk $end
$var wire 1 1# locked_tmp $end
$var wire 1 2# clk_tmp [6] $end
$var wire 1 3# clk_tmp [5] $end
$var wire 1 4# clk_tmp [4] $end
$var wire 1 5# clk_tmp [3] $end
$var wire 1 6# clk_tmp [2] $end
$var wire 1 7# clk_tmp [1] $end
$var wire 1 8# clk_tmp [0] $end
$var wire 1 9# fbin_wire $end
$var wire 1 :# pllena_wire $end
$var wire 1 ;# clkswitch_wire $end
$var wire 1 <# areset_wire $end
$var wire 1 =# pfdena_wire $end
$var wire 1 ># scanclk_wire $end
$var wire 1 ?# scanaclr_wire $end
$var wire 1 @# scanread_wire $end
$var wire 1 A# scanwrite_wire $end
$var wire 1 B# scandata_wire $end
$var wire 1 C# clkena_wire [5] $end
$var wire 1 D# clkena_wire [4] $end
$var wire 1 E# clkena_wire [3] $end
$var wire 1 F# clkena_wire [2] $end
$var wire 1 G# clkena_wire [1] $end
$var wire 1 H# clkena_wire [0] $end
$var wire 1 I# extclkena_wire [3] $end
$var wire 1 J# extclkena_wire [2] $end
$var wire 1 K# extclkena_wire [1] $end
$var wire 1 L# extclkena_wire [0] $end
$var wire 1 M# clk_wire [9] $end
$var wire 1 N# clk_wire [8] $end
$var wire 1 O# clk_wire [7] $end
$var wire 1 P# clk_wire [6] $end
$var wire 1 Q# clk_wire [5] $end
$var wire 1 R# clk_wire [4] $end
$var wire 1 S# clk_wire [3] $end
$var wire 1 T# clk_wire [2] $end
$var wire 1 U# clk_wire [1] $end
$var wire 1 V# clk_wire [0] $end
$var wire 1 W# extclk_wire [3] $end
$var wire 1 X# extclk_wire [2] $end
$var wire 1 Y# extclk_wire [1] $end
$var wire 1 Z# extclk_wire [0] $end
$var wire 1 [# clkbad_wire [1] $end
$var wire 1 \# clkbad_wire [0] $end
$var wire 1 ]# activeclock_wire $end
$var wire 1 ^# clkloss_wire $end
$var wire 1 _# scandataout_wire $end
$var wire 1 `# scandone_wire $end
$var wire 1 a# sclkout0_wire $end
$var wire 1 b# sclkout1_wire $end
$var wire 1 c# locked_wire $end
$var wire 1 d# configupdate_wire $end
$var wire 1 e# phasecounterselect_wire [3] $end
$var wire 1 f# phasecounterselect_wire [2] $end
$var wire 1 g# phasecounterselect_wire [1] $end
$var wire 1 h# phasecounterselect_wire [0] $end
$var wire 1 i# phasestep_wire $end
$var wire 1 j# phaseupdown_wire $end
$var wire 1 k# scanclkena_wire $end
$var wire 1 l# phasedone_wire $end
$var wire 1 m# vcooverrange_wire $end
$var wire 1 n# vcounderrange_wire $end
$var wire 1 o# fbout_wire $end
$var wire 1 p# iobuf_o $end
$var wire 1 q# stratix3_fbin $end
$var wire 1 r# oe_wire $end
$var wire 1 s# pll_lock_sync $end
$var wire 1 t# fref_wire $end
$var wire 1 u# icdrclk_wire $end

$scope begin CYCLONEIII_ALTPLL $end

$scope module M5 $end
$var wire 1 X" inclk [1] $end
$var wire 1 Y" inclk [0] $end
$var wire 1 9# fbin $end
$var wire 1 o# fbout $end
$var wire 1 ;# clkswitch $end
$var wire 1 <# areset $end
$var wire 1 =# pfdena $end
$var wire 1 p" scandata $end
$var wire 1 k" scanclk $end
$var wire 1 k# scanclkena $end
$var wire 1 d# configupdate $end
$var wire 1 R# clk [4] $end
$var wire 1 S# clk [3] $end
$var wire 1 T# clk [2] $end
$var wire 1 U# clk [1] $end
$var wire 1 V# clk [0] $end
$var wire 1 f# phasecounterselect [2] $end
$var wire 1 g# phasecounterselect [1] $end
$var wire 1 h# phasecounterselect [0] $end
$var wire 1 j# phaseupdown $end
$var wire 1 i# phasestep $end
$var wire 1 [# clkbad [1] $end
$var wire 1 \# clkbad [0] $end
$var wire 1 ]# activeclock $end
$var wire 1 1# locked $end
$var wire 1 _# scandataout $end
$var wire 1 `# scandone $end
$var wire 1 l# phasedone $end
$var wire 1 m# vcooverrange $end
$var wire 1 n# vcounderrange $end
$var wire 32 v# i_vco_min $end
$var wire 32 w# i_vco_max $end
$var wire 32 x# i_vco_center $end
$var wire 32 y# i_pfd_min $end
$var wire 32 z# i_pfd_max $end
$var wire 32 {# c_ph_val [0] $end
$var wire 32 |# c_ph_val [1] $end
$var wire 32 }# c_ph_val [2] $end
$var wire 32 ~# c_ph_val [3] $end
$var wire 32 !$ c_ph_val [4] $end
$var wire 32 "$ c_ph_val_tmp [0] $end
$var wire 32 #$ c_ph_val_tmp [1] $end
$var wire 32 $$ c_ph_val_tmp [2] $end
$var wire 32 %$ c_ph_val_tmp [3] $end
$var wire 32 &$ c_ph_val_tmp [4] $end
$var wire 32 '$ c_high_val [0] $end
$var wire 32 ($ c_high_val [1] $end
$var wire 32 )$ c_high_val [2] $end
$var wire 32 *$ c_high_val [3] $end
$var wire 32 +$ c_high_val [4] $end
$var wire 32 ,$ c_low_val [0] $end
$var wire 32 -$ c_low_val [1] $end
$var wire 32 .$ c_low_val [2] $end
$var wire 32 /$ c_low_val [3] $end
$var wire 32 0$ c_low_val [4] $end
$var wire 32 1$ c_initial_val [0] $end
$var wire 32 2$ c_initial_val [1] $end
$var wire 32 3$ c_initial_val [2] $end
$var wire 32 4$ c_initial_val [3] $end
$var wire 32 5$ c_initial_val [4] $end
$var wire 32 6$ c_high_val_old [0] $end
$var wire 32 7$ c_high_val_old [1] $end
$var wire 32 8$ c_high_val_old [2] $end
$var wire 32 9$ c_high_val_old [3] $end
$var wire 32 :$ c_high_val_old [4] $end
$var wire 32 ;$ c_low_val_old [0] $end
$var wire 32 <$ c_low_val_old [1] $end
$var wire 32 =$ c_low_val_old [2] $end
$var wire 32 >$ c_low_val_old [3] $end
$var wire 32 ?$ c_low_val_old [4] $end
$var wire 32 @$ c_ph_val_old [0] $end
$var wire 32 A$ c_ph_val_old [1] $end
$var wire 32 B$ c_ph_val_old [2] $end
$var wire 32 C$ c_ph_val_old [3] $end
$var wire 32 D$ c_ph_val_old [4] $end
$var wire 32 E$ c_high_val_hold [0] $end
$var wire 32 F$ c_high_val_hold [1] $end
$var wire 32 G$ c_high_val_hold [2] $end
$var wire 32 H$ c_high_val_hold [3] $end
$var wire 32 I$ c_high_val_hold [4] $end
$var wire 32 J$ c_low_val_hold [0] $end
$var wire 32 K$ c_low_val_hold [1] $end
$var wire 32 L$ c_low_val_hold [2] $end
$var wire 32 M$ c_low_val_hold [3] $end
$var wire 32 N$ c_low_val_hold [4] $end
$var wire 32 O$ c_ph_val_hold [0] $end
$var wire 32 P$ c_ph_val_hold [1] $end
$var wire 32 Q$ c_ph_val_hold [2] $end
$var wire 32 R$ c_ph_val_hold [3] $end
$var wire 32 S$ c_ph_val_hold [4] $end
$var wire 32 T$ sig_c_ph_val_tmp [0] $end
$var wire 32 U$ sig_c_ph_val_tmp [1] $end
$var wire 32 V$ sig_c_ph_val_tmp [2] $end
$var wire 32 W$ sig_c_ph_val_tmp [3] $end
$var wire 32 X$ sig_c_ph_val_tmp [4] $end
$var wire 32 Y$ c_ph_val_orig [0] $end
$var wire 32 Z$ c_ph_val_orig [1] $end
$var wire 32 [$ c_ph_val_orig [2] $end
$var wire 32 \$ c_ph_val_orig [3] $end
$var wire 32 ]$ c_ph_val_orig [4] $end
$var wire 32 ^$ real_lock_high $end
$var wire 32 _$ i_clk4_counter $end
$var wire 32 `$ i_clk3_counter $end
$var wire 32 a$ i_clk2_counter $end
$var wire 32 b$ i_clk1_counter $end
$var wire 32 c$ i_clk0_counter $end
$var wire 32 d$ i_charge_pump_current $end
$var wire 32 e$ i_loop_filter_r $end
$var wire 1 f$ vcc $end
$var wire 1 g$ fbclk $end
$var wire 1 h$ refclk $end
$var wire 1 i$ vco_over $end
$var wire 1 j$ vco_under $end
$var wire 1 k$ c_clk [0] $end
$var wire 1 l$ c_clk [1] $end
$var wire 1 m$ c_clk [2] $end
$var wire 1 n$ c_clk [3] $end
$var wire 1 o$ c_clk [4] $end
$var wire 1 p$ vco_out [7] $end
$var wire 1 q$ vco_out [6] $end
$var wire 1 r$ vco_out [5] $end
$var wire 1 s$ vco_out [4] $end
$var wire 1 t$ vco_out [3] $end
$var wire 1 u$ vco_out [2] $end
$var wire 1 v$ vco_out [1] $end
$var wire 1 w$ vco_out [0] $end
$var wire 32 x$ m_val $end
$var wire 32 y$ n_val $end
$var wire 32 z$ m_ph_val $end
$var wire 32 {$ m_ph_initial $end
$var wire 32 |$ m_ph_val_tmp $end
$var wire 32 }$ m_initial_val $end
$var wire 32 ~$ lfc_val $end
$var wire 32 !% vco_cur $end
$var wire 32 "% cp_curr_val $end
$var wire 32 #% cp_curr_old_bit_setting $end
$var wire 1 $% cp_curr_val_bit_setting [2] $end
$var wire 1 %% cp_curr_val_bit_setting [1] $end
$var wire 1 &% cp_curr_val_bit_setting [0] $end
$var wire 32 '% lfr_old_bit_setting $end
$var wire 1 (% lfr_val_bit_setting [4] $end
$var wire 1 )% lfr_val_bit_setting [3] $end
$var wire 1 *% lfr_val_bit_setting [2] $end
$var wire 1 +% lfr_val_bit_setting [1] $end
$var wire 1 ,% lfr_val_bit_setting [0] $end
$var wire 32 -% lfc_old_bit_setting $end
$var wire 1 .% lfc_val_bit_setting [1] $end
$var wire 1 /% lfc_val_bit_setting [0] $end
$var wire 32 0% m_val_old $end
$var wire 32 1% n_val_old $end
$var wire 32 2% m_ph_val_old $end
$var wire 32 3% lfc_old $end
$var wire 32 4% vco_old $end
$var wire 32 5% cp_curr_old $end
$var wire 32 6% num_output_cntrs $end
$var wire 1 7% scan_data [0] $end
$var wire 1 8% scan_data [1] $end
$var wire 1 9% scan_data [2] $end
$var wire 1 :% scan_data [3] $end
$var wire 1 ;% scan_data [4] $end
$var wire 1 <% scan_data [5] $end
$var wire 1 =% scan_data [6] $end
$var wire 1 >% scan_data [7] $end
$var wire 1 ?% scan_data [8] $end
$var wire 1 @% scan_data [9] $end
$var wire 1 A% scan_data [10] $end
$var wire 1 B% scan_data [11] $end
$var wire 1 C% scan_data [12] $end
$var wire 1 D% scan_data [13] $end
$var wire 1 E% scan_data [14] $end
$var wire 1 F% scan_data [15] $end
$var wire 1 G% scan_data [16] $end
$var wire 1 H% scan_data [17] $end
$var wire 1 I% scan_data [18] $end
$var wire 1 J% scan_data [19] $end
$var wire 1 K% scan_data [20] $end
$var wire 1 L% scan_data [21] $end
$var wire 1 M% scan_data [22] $end
$var wire 1 N% scan_data [23] $end
$var wire 1 O% scan_data [24] $end
$var wire 1 P% scan_data [25] $end
$var wire 1 Q% scan_data [26] $end
$var wire 1 R% scan_data [27] $end
$var wire 1 S% scan_data [28] $end
$var wire 1 T% scan_data [29] $end
$var wire 1 U% scan_data [30] $end
$var wire 1 V% scan_data [31] $end
$var wire 1 W% scan_data [32] $end
$var wire 1 X% scan_data [33] $end
$var wire 1 Y% scan_data [34] $end
$var wire 1 Z% scan_data [35] $end
$var wire 1 [% scan_data [36] $end
$var wire 1 \% scan_data [37] $end
$var wire 1 ]% scan_data [38] $end
$var wire 1 ^% scan_data [39] $end
$var wire 1 _% scan_data [40] $end
$var wire 1 `% scan_data [41] $end
$var wire 1 a% scan_data [42] $end
$var wire 1 b% scan_data [43] $end
$var wire 1 c% scan_data [44] $end
$var wire 1 d% scan_data [45] $end
$var wire 1 e% scan_data [46] $end
$var wire 1 f% scan_data [47] $end
$var wire 1 g% scan_data [48] $end
$var wire 1 h% scan_data [49] $end
$var wire 1 i% scan_data [50] $end
$var wire 1 j% scan_data [51] $end
$var wire 1 k% scan_data [52] $end
$var wire 1 l% scan_data [53] $end
$var wire 1 m% scan_data [54] $end
$var wire 1 n% scan_data [55] $end
$var wire 1 o% scan_data [56] $end
$var wire 1 p% scan_data [57] $end
$var wire 1 q% scan_data [58] $end
$var wire 1 r% scan_data [59] $end
$var wire 1 s% scan_data [60] $end
$var wire 1 t% scan_data [61] $end
$var wire 1 u% scan_data [62] $end
$var wire 1 v% scan_data [63] $end
$var wire 1 w% scan_data [64] $end
$var wire 1 x% scan_data [65] $end
$var wire 1 y% scan_data [66] $end
$var wire 1 z% scan_data [67] $end
$var wire 1 {% scan_data [68] $end
$var wire 1 |% scan_data [69] $end
$var wire 1 }% scan_data [70] $end
$var wire 1 ~% scan_data [71] $end
$var wire 1 !& scan_data [72] $end
$var wire 1 "& scan_data [73] $end
$var wire 1 #& scan_data [74] $end
$var wire 1 $& scan_data [75] $end
$var wire 1 %& scan_data [76] $end
$var wire 1 && scan_data [77] $end
$var wire 1 '& scan_data [78] $end
$var wire 1 (& scan_data [79] $end
$var wire 1 )& scan_data [80] $end
$var wire 1 *& scan_data [81] $end
$var wire 1 +& scan_data [82] $end
$var wire 1 ,& scan_data [83] $end
$var wire 1 -& scan_data [84] $end
$var wire 1 .& scan_data [85] $end
$var wire 1 /& scan_data [86] $end
$var wire 1 0& scan_data [87] $end
$var wire 1 1& scan_data [88] $end
$var wire 1 2& scan_data [89] $end
$var wire 1 3& scan_data [90] $end
$var wire 1 4& scan_data [91] $end
$var wire 1 5& scan_data [92] $end
$var wire 1 6& scan_data [93] $end
$var wire 1 7& scan_data [94] $end
$var wire 1 8& scan_data [95] $end
$var wire 1 9& scan_data [96] $end
$var wire 1 :& scan_data [97] $end
$var wire 1 ;& scan_data [98] $end
$var wire 1 <& scan_data [99] $end
$var wire 1 =& scan_data [100] $end
$var wire 1 >& scan_data [101] $end
$var wire 1 ?& scan_data [102] $end
$var wire 1 @& scan_data [103] $end
$var wire 1 A& scan_data [104] $end
$var wire 1 B& scan_data [105] $end
$var wire 1 C& scan_data [106] $end
$var wire 1 D& scan_data [107] $end
$var wire 1 E& scan_data [108] $end
$var wire 1 F& scan_data [109] $end
$var wire 1 G& scan_data [110] $end
$var wire 1 H& scan_data [111] $end
$var wire 1 I& scan_data [112] $end
$var wire 1 J& scan_data [113] $end
$var wire 1 K& scan_data [114] $end
$var wire 1 L& scan_data [115] $end
$var wire 1 M& scan_data [116] $end
$var wire 1 N& scan_data [117] $end
$var wire 1 O& scan_data [118] $end
$var wire 1 P& scan_data [119] $end
$var wire 1 Q& scan_data [120] $end
$var wire 1 R& scan_data [121] $end
$var wire 1 S& scan_data [122] $end
$var wire 1 T& scan_data [123] $end
$var wire 1 U& scan_data [124] $end
$var wire 1 V& scan_data [125] $end
$var wire 1 W& scan_data [126] $end
$var wire 1 X& scan_data [127] $end
$var wire 1 Y& scan_data [128] $end
$var wire 1 Z& scan_data [129] $end
$var wire 1 [& scan_data [130] $end
$var wire 1 \& scan_data [131] $end
$var wire 1 ]& scan_data [132] $end
$var wire 1 ^& scan_data [133] $end
$var wire 1 _& scan_data [134] $end
$var wire 1 `& scan_data [135] $end
$var wire 1 a& scan_data [136] $end
$var wire 1 b& scan_data [137] $end
$var wire 1 c& scan_data [138] $end
$var wire 1 d& scan_data [139] $end
$var wire 1 e& scan_data [140] $end
$var wire 1 f& scan_data [141] $end
$var wire 1 g& scan_data [142] $end
$var wire 1 h& scan_data [143] $end
$var wire 1 i& clk_pfd [0] $end
$var wire 1 j& clk_pfd [1] $end
$var wire 1 k& clk_pfd [2] $end
$var wire 1 l& clk_pfd [3] $end
$var wire 1 m& clk_pfd [4] $end
$var wire 1 n& clk0_tmp $end
$var wire 1 o& clk1_tmp $end
$var wire 1 p& clk2_tmp $end
$var wire 1 q& clk3_tmp $end
$var wire 1 r& clk4_tmp $end
$var wire 1 s& update_conf_latches $end
$var wire 1 t& update_conf_latches_reg $end
$var wire 1 u& clkin $end
$var wire 1 v& gate_locked $end
$var wire 1 w& pfd_locked $end
$var wire 1 x& lock $end
$var wire 1 y& inclk_c0 $end
$var wire 1 z& inclk_c1 $end
$var wire 1 {& inclk_c2 $end
$var wire 1 |& inclk_c3 $end
$var wire 1 }& inclk_c4 $end
$var wire 1 ~& inclk_m $end
$var wire 1 !' devpor $end
$var wire 1 "' devclrn $end
$var wire 1 #' inclk0_ipd $end
$var wire 1 $' inclk1_ipd $end
$var wire 1 %' pfdena_ipd $end
$var wire 1 &' areset_ipd $end
$var wire 1 '' fbin_ipd $end
$var wire 1 (' scanclk_ipd $end
$var wire 1 )' scanclkena_ipd $end
$var wire 1 *' scanclkena_reg $end
$var wire 1 +' scandata_ipd $end
$var wire 1 ,' clkswitch_ipd $end
$var wire 1 -' phasecounterselect_ipd [2] $end
$var wire 1 .' phasecounterselect_ipd [1] $end
$var wire 1 /' phasecounterselect_ipd [0] $end
$var wire 1 0' phaseupdown_ipd $end
$var wire 1 1' phasestep_ipd $end
$var wire 1 2' configupdate_ipd $end
$var wire 1 3' sig_stop_vco $end
$var wire 32 4' m_delay $end
$var wire 32 5' n_delay $end
$var wire 1 6' inclk1_tmp $end
$var wire 1 7' reset_low $end
$var wire 1 8' phasecounterselect_reg [2] $end
$var wire 1 9' phasecounterselect_reg [1] $end
$var wire 1 :' phasecounterselect_reg [0] $end
$var wire 1 ;' phaseupdown_reg $end
$var wire 1 <' phasestep_reg $end
$var wire 32 =' phasestep_high_count $end
$var wire 1 >' update_phase $end
$var wire 1 ?' scandataout_tmp $end
$var wire 1 @' scandata_in $end
$var wire 1 A' scandata_out $end
$var wire 1 B' scandone_tmp $end
$var wire 1 C' initiate_reconfig $end
$var wire 1 D' schedule_vco $end
$var wire 1 E' areset_ena_sig $end
$var wire 1 F' inclk_c_from_vco [0] $end
$var wire 1 G' inclk_c_from_vco [1] $end
$var wire 1 H' inclk_c_from_vco [2] $end
$var wire 1 I' inclk_c_from_vco [3] $end
$var wire 1 J' inclk_c_from_vco [4] $end
$var wire 1 K' inclk_m_from_vco $end
$var wire 1 L' first_inclk0_edge_detect $end
$var wire 1 M' first_inclk1_edge_detect $end

$scope begin WireDelay $end
$upscope $end

$scope module m1 $end
$var wire 1 ~& clk $end
$var wire 1 E' reset $end
$var wire 1 g$ cout $end
$var wire 32 }$ initial_value $end
$var wire 32 x$ modulus $end
$var wire 32 4' time_delay $end
$upscope $end

$scope module n1 $end
$var wire 1 u& clk $end
$var wire 1 &' reset $end
$var wire 1 h$ cout $end
$var wire 32 y$ initial_value $end
$var wire 32 y$ modulus $end
$var wire 32 N' time_delay $end
$upscope $end

$scope module c0 $end
$var wire 1 y& clk $end
$var wire 1 E' reset $end
$var wire 32 1$ initial $end
$var wire 32 '$ high $end
$var wire 32 ,$ low $end
$var wire 32 {# ph_tap $end
$var wire 1 k$ cout $end
$upscope $end

$scope module c1 $end
$var wire 1 z& clk $end
$var wire 1 E' reset $end
$var wire 32 2$ initial $end
$var wire 32 ($ high $end
$var wire 32 -$ low $end
$var wire 32 |# ph_tap $end
$var wire 1 l$ cout $end
$upscope $end

$scope module c2 $end
$var wire 1 {& clk $end
$var wire 1 E' reset $end
$var wire 32 3$ initial $end
$var wire 32 )$ high $end
$var wire 32 .$ low $end
$var wire 32 }# ph_tap $end
$var wire 1 m$ cout $end
$upscope $end

$scope module c3 $end
$var wire 1 |& clk $end
$var wire 1 E' reset $end
$var wire 32 4$ initial $end
$var wire 32 *$ high $end
$var wire 32 /$ low $end
$var wire 32 ~# ph_tap $end
$var wire 1 n$ cout $end
$upscope $end

$scope module c4 $end
$var wire 1 }& clk $end
$var wire 1 E' reset $end
$var wire 32 5$ initial $end
$var wire 32 +$ high $end
$var wire 32 0$ low $end
$var wire 32 !$ ph_tap $end
$var wire 1 o$ cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module b2v_inst2 $end
$var parameter 32 O' BACKGROUND_MAX_ADDR $end
$var parameter 32 P' BLUE_MAX_ADDR $end
$var parameter 32 Q' GREEN_MAX_ADDR $end
$var parameter 32 R' RED_MAX_ADDR $end
$var parameter 32 S' YELLOW_MAX_ADDR $end
$var parameter 32 T' LOSE_MAX_ADDR $end
$var parameter 32 U' WIN_MAX_ADDR $end
$var parameter 32 V' PWR_MAX_ADDR $end
$var parameter 3 W' BACKGROUND_MEM_SEL $end
$var parameter 3 X' PWR_MEM_SEL $end
$var parameter 3 Y' RED_MEM_SEL $end
$var parameter 3 Z' GREEN_MEM_SEL $end
$var parameter 3 [' BLUE_MEM_SEL $end
$var parameter 3 \' YELLOW_MEM_SEL $end
$var parameter 3 ]' WIN_MEM_SEL $end
$var parameter 3 ^' LOSE_MEM_SEL $end
$var parameter 32 _' INICIO $end
$var parameter 32 `' PREPARAR $end
$var parameter 32 a' ATIVAR $end
$var parameter 32 b' SUSPENDER $end
$var parameter 32 c' LER $end
$var parameter 32 d' INCREMENTAR $end
$var wire 1 Q RESET $end
$var wire 1 H CLK $end
$var wire 1 k DATA_IN [47] $end
$var wire 1 l DATA_IN [46] $end
$var wire 1 m DATA_IN [45] $end
$var wire 1 n DATA_IN [44] $end
$var wire 1 o DATA_IN [43] $end
$var wire 1 p DATA_IN [42] $end
$var wire 1 q DATA_IN [41] $end
$var wire 1 r DATA_IN [40] $end
$var wire 1 s DATA_IN [39] $end
$var wire 1 t DATA_IN [38] $end
$var wire 1 u DATA_IN [37] $end
$var wire 1 v DATA_IN [36] $end
$var wire 1 w DATA_IN [35] $end
$var wire 1 x DATA_IN [34] $end
$var wire 1 y DATA_IN [33] $end
$var wire 1 z DATA_IN [32] $end
$var wire 1 { DATA_IN [31] $end
$var wire 1 | DATA_IN [30] $end
$var wire 1 } DATA_IN [29] $end
$var wire 1 ~ DATA_IN [28] $end
$var wire 1 !! DATA_IN [27] $end
$var wire 1 "! DATA_IN [26] $end
$var wire 1 #! DATA_IN [25] $end
$var wire 1 $! DATA_IN [24] $end
$var wire 1 %! DATA_IN [23] $end
$var wire 1 &! DATA_IN [22] $end
$var wire 1 '! DATA_IN [21] $end
$var wire 1 (! DATA_IN [20] $end
$var wire 1 )! DATA_IN [19] $end
$var wire 1 *! DATA_IN [18] $end
$var wire 1 +! DATA_IN [17] $end
$var wire 1 ,! DATA_IN [16] $end
$var wire 1 -! DATA_IN [15] $end
$var wire 1 .! DATA_IN [14] $end
$var wire 1 /! DATA_IN [13] $end
$var wire 1 0! DATA_IN [12] $end
$var wire 1 1! DATA_IN [11] $end
$var wire 1 2! DATA_IN [10] $end
$var wire 1 3! DATA_IN [9] $end
$var wire 1 4! DATA_IN [8] $end
$var wire 1 5! DATA_IN [7] $end
$var wire 1 6! DATA_IN [6] $end
$var wire 1 7! DATA_IN [5] $end
$var wire 1 8! DATA_IN [4] $end
$var wire 1 9! DATA_IN [3] $end
$var wire 1 :! DATA_IN [2] $end
$var wire 1 ;! DATA_IN [1] $end
$var wire 1 <! DATA_IN [0] $end
$var wire 1 =! SPRITES_EN [7] $end
$var wire 1 >! SPRITES_EN [6] $end
$var wire 1 ?! SPRITES_EN [5] $end
$var wire 1 @! SPRITES_EN [4] $end
$var wire 1 A! SPRITES_EN [3] $end
$var wire 1 B! SPRITES_EN [2] $end
$var wire 1 C! SPRITES_EN [1] $end
$var wire 1 D! SPRITES_EN [0] $end
$var reg 1 e' MEM_CLK $end
$var wire 1 F! MEM_ADDR [15] $end
$var wire 1 G! MEM_ADDR [14] $end
$var wire 1 H! MEM_ADDR [13] $end
$var wire 1 I! MEM_ADDR [12] $end
$var wire 1 J! MEM_ADDR [11] $end
$var wire 1 K! MEM_ADDR [10] $end
$var wire 1 L! MEM_ADDR [9] $end
$var wire 1 M! MEM_ADDR [8] $end
$var wire 1 N! MEM_ADDR [7] $end
$var wire 1 O! MEM_ADDR [6] $end
$var wire 1 P! MEM_ADDR [5] $end
$var wire 1 Q! MEM_ADDR [4] $end
$var wire 1 R! MEM_ADDR [3] $end
$var wire 1 S! MEM_ADDR [2] $end
$var wire 1 T! MEM_ADDR [1] $end
$var wire 1 U! MEM_ADDR [0] $end
$var reg 3 f' MEM_SEL [2:0] $end
$var wire 1 S RGB [23] $end
$var wire 1 T RGB [22] $end
$var wire 1 U RGB [21] $end
$var wire 1 V RGB [20] $end
$var wire 1 W RGB [19] $end
$var wire 1 X RGB [18] $end
$var wire 1 Y RGB [17] $end
$var wire 1 Z RGB [16] $end
$var wire 1 [ RGB [15] $end
$var wire 1 \ RGB [14] $end
$var wire 1 ] RGB [13] $end
$var wire 1 ^ RGB [12] $end
$var wire 1 _ RGB [11] $end
$var wire 1 ` RGB [10] $end
$var wire 1 a RGB [9] $end
$var wire 1 b RGB [8] $end
$var wire 1 c RGB [7] $end
$var wire 1 d RGB [6] $end
$var wire 1 e RGB [5] $end
$var wire 1 f RGB [4] $end
$var wire 1 g RGB [3] $end
$var wire 1 h RGB [2] $end
$var wire 1 i RGB [1] $end
$var wire 1 j RGB [0] $end
$var wire 1 g' BACKGROUND_EN $end
$var wire 1 h' BLUE_EN $end
$var wire 1 i' GREEN_EN $end
$var wire 1 j' RED_EN $end
$var wire 1 k' YELLOW_EN $end
$var wire 1 l' LOSE_EN $end
$var wire 1 m' WIN_EN $end
$var wire 1 n' PWR_EN $end
$var reg 48 o' rgb_pixels [47:0] $end
$var reg 24 p' out_pixel [23:0] $end
$var reg 3 q' A_State [2:0] $end
$var reg 3 r' F_State [2:0] $end
$var reg 16 s' r_addr [15:0] $end
$var reg 16 t' max_addr [15:0] $end
$var reg 16 u' background_addr [15:0] $end
$var reg 14 v' blue_addr [13:0] $end
$var reg 14 w' green_addr [13:0] $end
$var reg 14 x' red_addr [13:0] $end
$var reg 14 y' yellow_addr [13:0] $end
$var reg 15 z' lose_addr [14:0] $end
$var reg 15 {' win_addr [14:0] $end
$var reg 8 |' pwr_addr [7:0] $end
$upscope $end

$scope module b2v_inst3 $end
$var wire 1 E! IN_CLK $end
$var wire 1 F! IN_ADDR [15] $end
$var wire 1 G! IN_ADDR [14] $end
$var wire 1 H! IN_ADDR [13] $end
$var wire 1 I! IN_ADDR [12] $end
$var wire 1 J! IN_ADDR [11] $end
$var wire 1 K! IN_ADDR [10] $end
$var wire 1 L! IN_ADDR [9] $end
$var wire 1 M! IN_ADDR [8] $end
$var wire 1 N! IN_ADDR [7] $end
$var wire 1 O! IN_ADDR [6] $end
$var wire 1 P! IN_ADDR [5] $end
$var wire 1 Q! IN_ADDR [4] $end
$var wire 1 R! IN_ADDR [3] $end
$var wire 1 S! IN_ADDR [2] $end
$var wire 1 T! IN_ADDR [1] $end
$var wire 1 U! IN_ADDR [0] $end
$var wire 1 V! SELECTOR [2] $end
$var wire 1 W! SELECTOR [1] $end
$var wire 1 X! SELECTOR [0] $end
$var wire 1 k MEM_RGB [47] $end
$var wire 1 l MEM_RGB [46] $end
$var wire 1 m MEM_RGB [45] $end
$var wire 1 n MEM_RGB [44] $end
$var wire 1 o MEM_RGB [43] $end
$var wire 1 p MEM_RGB [42] $end
$var wire 1 q MEM_RGB [41] $end
$var wire 1 r MEM_RGB [40] $end
$var wire 1 s MEM_RGB [39] $end
$var wire 1 t MEM_RGB [38] $end
$var wire 1 u MEM_RGB [37] $end
$var wire 1 v MEM_RGB [36] $end
$var wire 1 w MEM_RGB [35] $end
$var wire 1 x MEM_RGB [34] $end
$var wire 1 y MEM_RGB [33] $end
$var wire 1 z MEM_RGB [32] $end
$var wire 1 { MEM_RGB [31] $end
$var wire 1 | MEM_RGB [30] $end
$var wire 1 } MEM_RGB [29] $end
$var wire 1 ~ MEM_RGB [28] $end
$var wire 1 !! MEM_RGB [27] $end
$var wire 1 "! MEM_RGB [26] $end
$var wire 1 #! MEM_RGB [25] $end
$var wire 1 $! MEM_RGB [24] $end
$var wire 1 %! MEM_RGB [23] $end
$var wire 1 &! MEM_RGB [22] $end
$var wire 1 '! MEM_RGB [21] $end
$var wire 1 (! MEM_RGB [20] $end
$var wire 1 )! MEM_RGB [19] $end
$var wire 1 *! MEM_RGB [18] $end
$var wire 1 +! MEM_RGB [17] $end
$var wire 1 ,! MEM_RGB [16] $end
$var wire 1 -! MEM_RGB [15] $end
$var wire 1 .! MEM_RGB [14] $end
$var wire 1 /! MEM_RGB [13] $end
$var wire 1 0! MEM_RGB [12] $end
$var wire 1 1! MEM_RGB [11] $end
$var wire 1 2! MEM_RGB [10] $end
$var wire 1 3! MEM_RGB [9] $end
$var wire 1 4! MEM_RGB [8] $end
$var wire 1 5! MEM_RGB [7] $end
$var wire 1 6! MEM_RGB [6] $end
$var wire 1 7! MEM_RGB [5] $end
$var wire 1 8! MEM_RGB [4] $end
$var wire 1 9! MEM_RGB [3] $end
$var wire 1 :! MEM_RGB [2] $end
$var wire 1 ;! MEM_RGB [1] $end
$var wire 1 <! MEM_RGB [0] $end
$var wire 1 }' SYNTHESIZED_WIRE_0 [15] $end
$var wire 1 ~' SYNTHESIZED_WIRE_0 [14] $end
$var wire 1 !( SYNTHESIZED_WIRE_0 [13] $end
$var wire 1 "( SYNTHESIZED_WIRE_0 [12] $end
$var wire 1 #( SYNTHESIZED_WIRE_0 [11] $end
$var wire 1 $( SYNTHESIZED_WIRE_0 [10] $end
$var wire 1 %( SYNTHESIZED_WIRE_0 [9] $end
$var wire 1 &( SYNTHESIZED_WIRE_0 [8] $end
$var wire 1 '( SYNTHESIZED_WIRE_0 [7] $end
$var wire 1 (( SYNTHESIZED_WIRE_0 [6] $end
$var wire 1 )( SYNTHESIZED_WIRE_0 [5] $end
$var wire 1 *( SYNTHESIZED_WIRE_0 [4] $end
$var wire 1 +( SYNTHESIZED_WIRE_0 [3] $end
$var wire 1 ,( SYNTHESIZED_WIRE_0 [2] $end
$var wire 1 -( SYNTHESIZED_WIRE_0 [1] $end
$var wire 1 .( SYNTHESIZED_WIRE_0 [0] $end
$var wire 1 /( SYNTHESIZED_WIRE_1 [15] $end
$var wire 1 0( SYNTHESIZED_WIRE_1 [14] $end
$var wire 1 1( SYNTHESIZED_WIRE_1 [13] $end
$var wire 1 2( SYNTHESIZED_WIRE_1 [12] $end
$var wire 1 3( SYNTHESIZED_WIRE_1 [11] $end
$var wire 1 4( SYNTHESIZED_WIRE_1 [10] $end
$var wire 1 5( SYNTHESIZED_WIRE_1 [9] $end
$var wire 1 6( SYNTHESIZED_WIRE_1 [8] $end
$var wire 1 7( SYNTHESIZED_WIRE_1 [7] $end
$var wire 1 8( SYNTHESIZED_WIRE_1 [6] $end
$var wire 1 9( SYNTHESIZED_WIRE_1 [5] $end
$var wire 1 :( SYNTHESIZED_WIRE_1 [4] $end
$var wire 1 ;( SYNTHESIZED_WIRE_1 [3] $end
$var wire 1 <( SYNTHESIZED_WIRE_1 [2] $end
$var wire 1 =( SYNTHESIZED_WIRE_1 [1] $end
$var wire 1 >( SYNTHESIZED_WIRE_1 [0] $end
$var wire 1 ?( SYNTHESIZED_WIRE_2 [15] $end
$var wire 1 @( SYNTHESIZED_WIRE_2 [14] $end
$var wire 1 A( SYNTHESIZED_WIRE_2 [13] $end
$var wire 1 B( SYNTHESIZED_WIRE_2 [12] $end
$var wire 1 C( SYNTHESIZED_WIRE_2 [11] $end
$var wire 1 D( SYNTHESIZED_WIRE_2 [10] $end
$var wire 1 E( SYNTHESIZED_WIRE_2 [9] $end
$var wire 1 F( SYNTHESIZED_WIRE_2 [8] $end
$var wire 1 G( SYNTHESIZED_WIRE_2 [7] $end
$var wire 1 H( SYNTHESIZED_WIRE_2 [6] $end
$var wire 1 I( SYNTHESIZED_WIRE_2 [5] $end
$var wire 1 J( SYNTHESIZED_WIRE_2 [4] $end
$var wire 1 K( SYNTHESIZED_WIRE_2 [3] $end
$var wire 1 L( SYNTHESIZED_WIRE_2 [2] $end
$var wire 1 M( SYNTHESIZED_WIRE_2 [1] $end
$var wire 1 N( SYNTHESIZED_WIRE_2 [0] $end
$var wire 1 O( SYNTHESIZED_WIRE_3 [15] $end
$var wire 1 P( SYNTHESIZED_WIRE_3 [14] $end
$var wire 1 Q( SYNTHESIZED_WIRE_3 [13] $end
$var wire 1 R( SYNTHESIZED_WIRE_3 [12] $end
$var wire 1 S( SYNTHESIZED_WIRE_3 [11] $end
$var wire 1 T( SYNTHESIZED_WIRE_3 [10] $end
$var wire 1 U( SYNTHESIZED_WIRE_3 [9] $end
$var wire 1 V( SYNTHESIZED_WIRE_3 [8] $end
$var wire 1 W( SYNTHESIZED_WIRE_3 [7] $end
$var wire 1 X( SYNTHESIZED_WIRE_3 [6] $end
$var wire 1 Y( SYNTHESIZED_WIRE_3 [5] $end
$var wire 1 Z( SYNTHESIZED_WIRE_3 [4] $end
$var wire 1 [( SYNTHESIZED_WIRE_3 [3] $end
$var wire 1 \( SYNTHESIZED_WIRE_3 [2] $end
$var wire 1 ]( SYNTHESIZED_WIRE_3 [1] $end
$var wire 1 ^( SYNTHESIZED_WIRE_3 [0] $end
$var wire 1 _( SYNTHESIZED_WIRE_4 [15] $end
$var wire 1 `( SYNTHESIZED_WIRE_4 [14] $end
$var wire 1 a( SYNTHESIZED_WIRE_4 [13] $end
$var wire 1 b( SYNTHESIZED_WIRE_4 [12] $end
$var wire 1 c( SYNTHESIZED_WIRE_4 [11] $end
$var wire 1 d( SYNTHESIZED_WIRE_4 [10] $end
$var wire 1 e( SYNTHESIZED_WIRE_4 [9] $end
$var wire 1 f( SYNTHESIZED_WIRE_4 [8] $end
$var wire 1 g( SYNTHESIZED_WIRE_4 [7] $end
$var wire 1 h( SYNTHESIZED_WIRE_4 [6] $end
$var wire 1 i( SYNTHESIZED_WIRE_4 [5] $end
$var wire 1 j( SYNTHESIZED_WIRE_4 [4] $end
$var wire 1 k( SYNTHESIZED_WIRE_4 [3] $end
$var wire 1 l( SYNTHESIZED_WIRE_4 [2] $end
$var wire 1 m( SYNTHESIZED_WIRE_4 [1] $end
$var wire 1 n( SYNTHESIZED_WIRE_4 [0] $end
$var wire 1 o( SYNTHESIZED_WIRE_5 [15] $end
$var wire 1 p( SYNTHESIZED_WIRE_5 [14] $end
$var wire 1 q( SYNTHESIZED_WIRE_5 [13] $end
$var wire 1 r( SYNTHESIZED_WIRE_5 [12] $end
$var wire 1 s( SYNTHESIZED_WIRE_5 [11] $end
$var wire 1 t( SYNTHESIZED_WIRE_5 [10] $end
$var wire 1 u( SYNTHESIZED_WIRE_5 [9] $end
$var wire 1 v( SYNTHESIZED_WIRE_5 [8] $end
$var wire 1 w( SYNTHESIZED_WIRE_5 [7] $end
$var wire 1 x( SYNTHESIZED_WIRE_5 [6] $end
$var wire 1 y( SYNTHESIZED_WIRE_5 [5] $end
$var wire 1 z( SYNTHESIZED_WIRE_5 [4] $end
$var wire 1 {( SYNTHESIZED_WIRE_5 [3] $end
$var wire 1 |( SYNTHESIZED_WIRE_5 [2] $end
$var wire 1 }( SYNTHESIZED_WIRE_5 [1] $end
$var wire 1 ~( SYNTHESIZED_WIRE_5 [0] $end
$var wire 1 !) SYNTHESIZED_WIRE_6 [15] $end
$var wire 1 ") SYNTHESIZED_WIRE_6 [14] $end
$var wire 1 #) SYNTHESIZED_WIRE_6 [13] $end
$var wire 1 $) SYNTHESIZED_WIRE_6 [12] $end
$var wire 1 %) SYNTHESIZED_WIRE_6 [11] $end
$var wire 1 &) SYNTHESIZED_WIRE_6 [10] $end
$var wire 1 ') SYNTHESIZED_WIRE_6 [9] $end
$var wire 1 () SYNTHESIZED_WIRE_6 [8] $end
$var wire 1 )) SYNTHESIZED_WIRE_6 [7] $end
$var wire 1 *) SYNTHESIZED_WIRE_6 [6] $end
$var wire 1 +) SYNTHESIZED_WIRE_6 [5] $end
$var wire 1 ,) SYNTHESIZED_WIRE_6 [4] $end
$var wire 1 -) SYNTHESIZED_WIRE_6 [3] $end
$var wire 1 .) SYNTHESIZED_WIRE_6 [2] $end
$var wire 1 /) SYNTHESIZED_WIRE_6 [1] $end
$var wire 1 0) SYNTHESIZED_WIRE_6 [0] $end
$var wire 1 1) SYNTHESIZED_WIRE_7 [15] $end
$var wire 1 2) SYNTHESIZED_WIRE_7 [14] $end
$var wire 1 3) SYNTHESIZED_WIRE_7 [13] $end
$var wire 1 4) SYNTHESIZED_WIRE_7 [12] $end
$var wire 1 5) SYNTHESIZED_WIRE_7 [11] $end
$var wire 1 6) SYNTHESIZED_WIRE_7 [10] $end
$var wire 1 7) SYNTHESIZED_WIRE_7 [9] $end
$var wire 1 8) SYNTHESIZED_WIRE_7 [8] $end
$var wire 1 9) SYNTHESIZED_WIRE_7 [7] $end
$var wire 1 :) SYNTHESIZED_WIRE_7 [6] $end
$var wire 1 ;) SYNTHESIZED_WIRE_7 [5] $end
$var wire 1 <) SYNTHESIZED_WIRE_7 [4] $end
$var wire 1 =) SYNTHESIZED_WIRE_7 [3] $end
$var wire 1 >) SYNTHESIZED_WIRE_7 [2] $end
$var wire 1 ?) SYNTHESIZED_WIRE_7 [1] $end
$var wire 1 @) SYNTHESIZED_WIRE_7 [0] $end
$var wire 1 A) SYNTHESIZED_WIRE_8 [15] $end
$var wire 1 B) SYNTHESIZED_WIRE_8 [14] $end
$var wire 1 C) SYNTHESIZED_WIRE_8 [13] $end
$var wire 1 D) SYNTHESIZED_WIRE_8 [12] $end
$var wire 1 E) SYNTHESIZED_WIRE_8 [11] $end
$var wire 1 F) SYNTHESIZED_WIRE_8 [10] $end
$var wire 1 G) SYNTHESIZED_WIRE_8 [9] $end
$var wire 1 H) SYNTHESIZED_WIRE_8 [8] $end
$var wire 1 I) SYNTHESIZED_WIRE_8 [7] $end
$var wire 1 J) SYNTHESIZED_WIRE_8 [6] $end
$var wire 1 K) SYNTHESIZED_WIRE_8 [5] $end
$var wire 1 L) SYNTHESIZED_WIRE_8 [4] $end
$var wire 1 M) SYNTHESIZED_WIRE_8 [3] $end
$var wire 1 N) SYNTHESIZED_WIRE_8 [2] $end
$var wire 1 O) SYNTHESIZED_WIRE_8 [1] $end
$var wire 1 P) SYNTHESIZED_WIRE_8 [0] $end
$var wire 1 Q) SYNTHESIZED_WIRE_9 $end
$var wire 1 R) SYNTHESIZED_WIRE_10 [15] $end
$var wire 1 S) SYNTHESIZED_WIRE_10 [14] $end
$var wire 1 T) SYNTHESIZED_WIRE_10 [13] $end
$var wire 1 U) SYNTHESIZED_WIRE_10 [12] $end
$var wire 1 V) SYNTHESIZED_WIRE_10 [11] $end
$var wire 1 W) SYNTHESIZED_WIRE_10 [10] $end
$var wire 1 X) SYNTHESIZED_WIRE_10 [9] $end
$var wire 1 Y) SYNTHESIZED_WIRE_10 [8] $end
$var wire 1 Z) SYNTHESIZED_WIRE_10 [7] $end
$var wire 1 [) SYNTHESIZED_WIRE_10 [6] $end
$var wire 1 \) SYNTHESIZED_WIRE_10 [5] $end
$var wire 1 ]) SYNTHESIZED_WIRE_10 [4] $end
$var wire 1 ^) SYNTHESIZED_WIRE_10 [3] $end
$var wire 1 _) SYNTHESIZED_WIRE_10 [2] $end
$var wire 1 `) SYNTHESIZED_WIRE_10 [1] $end
$var wire 1 a) SYNTHESIZED_WIRE_10 [0] $end
$var wire 1 b) SYNTHESIZED_WIRE_11 $end
$var wire 1 c) SYNTHESIZED_WIRE_12 [13] $end
$var wire 1 d) SYNTHESIZED_WIRE_12 [12] $end
$var wire 1 e) SYNTHESIZED_WIRE_12 [11] $end
$var wire 1 f) SYNTHESIZED_WIRE_12 [10] $end
$var wire 1 g) SYNTHESIZED_WIRE_12 [9] $end
$var wire 1 h) SYNTHESIZED_WIRE_12 [8] $end
$var wire 1 i) SYNTHESIZED_WIRE_12 [7] $end
$var wire 1 j) SYNTHESIZED_WIRE_12 [6] $end
$var wire 1 k) SYNTHESIZED_WIRE_12 [5] $end
$var wire 1 l) SYNTHESIZED_WIRE_12 [4] $end
$var wire 1 m) SYNTHESIZED_WIRE_12 [3] $end
$var wire 1 n) SYNTHESIZED_WIRE_12 [2] $end
$var wire 1 o) SYNTHESIZED_WIRE_12 [1] $end
$var wire 1 p) SYNTHESIZED_WIRE_12 [0] $end
$var wire 1 q) SYNTHESIZED_WIRE_13 $end
$var wire 1 r) SYNTHESIZED_WIRE_14 [13] $end
$var wire 1 s) SYNTHESIZED_WIRE_14 [12] $end
$var wire 1 t) SYNTHESIZED_WIRE_14 [11] $end
$var wire 1 u) SYNTHESIZED_WIRE_14 [10] $end
$var wire 1 v) SYNTHESIZED_WIRE_14 [9] $end
$var wire 1 w) SYNTHESIZED_WIRE_14 [8] $end
$var wire 1 x) SYNTHESIZED_WIRE_14 [7] $end
$var wire 1 y) SYNTHESIZED_WIRE_14 [6] $end
$var wire 1 z) SYNTHESIZED_WIRE_14 [5] $end
$var wire 1 {) SYNTHESIZED_WIRE_14 [4] $end
$var wire 1 |) SYNTHESIZED_WIRE_14 [3] $end
$var wire 1 }) SYNTHESIZED_WIRE_14 [2] $end
$var wire 1 ~) SYNTHESIZED_WIRE_14 [1] $end
$var wire 1 !* SYNTHESIZED_WIRE_14 [0] $end
$var wire 1 "* SYNTHESIZED_WIRE_15 $end
$var wire 1 #* SYNTHESIZED_WIRE_16 [13] $end
$var wire 1 $* SYNTHESIZED_WIRE_16 [12] $end
$var wire 1 %* SYNTHESIZED_WIRE_16 [11] $end
$var wire 1 &* SYNTHESIZED_WIRE_16 [10] $end
$var wire 1 '* SYNTHESIZED_WIRE_16 [9] $end
$var wire 1 (* SYNTHESIZED_WIRE_16 [8] $end
$var wire 1 )* SYNTHESIZED_WIRE_16 [7] $end
$var wire 1 ** SYNTHESIZED_WIRE_16 [6] $end
$var wire 1 +* SYNTHESIZED_WIRE_16 [5] $end
$var wire 1 ,* SYNTHESIZED_WIRE_16 [4] $end
$var wire 1 -* SYNTHESIZED_WIRE_16 [3] $end
$var wire 1 .* SYNTHESIZED_WIRE_16 [2] $end
$var wire 1 /* SYNTHESIZED_WIRE_16 [1] $end
$var wire 1 0* SYNTHESIZED_WIRE_16 [0] $end
$var wire 1 1* SYNTHESIZED_WIRE_17 $end
$var wire 1 2* SYNTHESIZED_WIRE_18 [13] $end
$var wire 1 3* SYNTHESIZED_WIRE_18 [12] $end
$var wire 1 4* SYNTHESIZED_WIRE_18 [11] $end
$var wire 1 5* SYNTHESIZED_WIRE_18 [10] $end
$var wire 1 6* SYNTHESIZED_WIRE_18 [9] $end
$var wire 1 7* SYNTHESIZED_WIRE_18 [8] $end
$var wire 1 8* SYNTHESIZED_WIRE_18 [7] $end
$var wire 1 9* SYNTHESIZED_WIRE_18 [6] $end
$var wire 1 :* SYNTHESIZED_WIRE_18 [5] $end
$var wire 1 ;* SYNTHESIZED_WIRE_18 [4] $end
$var wire 1 <* SYNTHESIZED_WIRE_18 [3] $end
$var wire 1 =* SYNTHESIZED_WIRE_18 [2] $end
$var wire 1 >* SYNTHESIZED_WIRE_18 [1] $end
$var wire 1 ?* SYNTHESIZED_WIRE_18 [0] $end
$var wire 1 @* SYNTHESIZED_WIRE_19 $end
$var wire 1 A* SYNTHESIZED_WIRE_20 [14] $end
$var wire 1 B* SYNTHESIZED_WIRE_20 [13] $end
$var wire 1 C* SYNTHESIZED_WIRE_20 [12] $end
$var wire 1 D* SYNTHESIZED_WIRE_20 [11] $end
$var wire 1 E* SYNTHESIZED_WIRE_20 [10] $end
$var wire 1 F* SYNTHESIZED_WIRE_20 [9] $end
$var wire 1 G* SYNTHESIZED_WIRE_20 [8] $end
$var wire 1 H* SYNTHESIZED_WIRE_20 [7] $end
$var wire 1 I* SYNTHESIZED_WIRE_20 [6] $end
$var wire 1 J* SYNTHESIZED_WIRE_20 [5] $end
$var wire 1 K* SYNTHESIZED_WIRE_20 [4] $end
$var wire 1 L* SYNTHESIZED_WIRE_20 [3] $end
$var wire 1 M* SYNTHESIZED_WIRE_20 [2] $end
$var wire 1 N* SYNTHESIZED_WIRE_20 [1] $end
$var wire 1 O* SYNTHESIZED_WIRE_20 [0] $end
$var wire 1 P* SYNTHESIZED_WIRE_21 $end
$var wire 1 Q* SYNTHESIZED_WIRE_22 [14] $end
$var wire 1 R* SYNTHESIZED_WIRE_22 [13] $end
$var wire 1 S* SYNTHESIZED_WIRE_22 [12] $end
$var wire 1 T* SYNTHESIZED_WIRE_22 [11] $end
$var wire 1 U* SYNTHESIZED_WIRE_22 [10] $end
$var wire 1 V* SYNTHESIZED_WIRE_22 [9] $end
$var wire 1 W* SYNTHESIZED_WIRE_22 [8] $end
$var wire 1 X* SYNTHESIZED_WIRE_22 [7] $end
$var wire 1 Y* SYNTHESIZED_WIRE_22 [6] $end
$var wire 1 Z* SYNTHESIZED_WIRE_22 [5] $end
$var wire 1 [* SYNTHESIZED_WIRE_22 [4] $end
$var wire 1 \* SYNTHESIZED_WIRE_22 [3] $end
$var wire 1 ]* SYNTHESIZED_WIRE_22 [2] $end
$var wire 1 ^* SYNTHESIZED_WIRE_22 [1] $end
$var wire 1 _* SYNTHESIZED_WIRE_22 [0] $end
$var wire 1 `* SYNTHESIZED_WIRE_23 $end
$var wire 1 a* SYNTHESIZED_WIRE_24 [7] $end
$var wire 1 b* SYNTHESIZED_WIRE_24 [6] $end
$var wire 1 c* SYNTHESIZED_WIRE_24 [5] $end
$var wire 1 d* SYNTHESIZED_WIRE_24 [4] $end
$var wire 1 e* SYNTHESIZED_WIRE_24 [3] $end
$var wire 1 f* SYNTHESIZED_WIRE_24 [2] $end
$var wire 1 g* SYNTHESIZED_WIRE_24 [1] $end
$var wire 1 h* SYNTHESIZED_WIRE_24 [0] $end

$scope module b2v_inst $end
$var wire 1 }' MEM_OUT [15] $end
$var wire 1 ~' MEM_OUT [14] $end
$var wire 1 !( MEM_OUT [13] $end
$var wire 1 "( MEM_OUT [12] $end
$var wire 1 #( MEM_OUT [11] $end
$var wire 1 $( MEM_OUT [10] $end
$var wire 1 %( MEM_OUT [9] $end
$var wire 1 &( MEM_OUT [8] $end
$var wire 1 '( MEM_OUT [7] $end
$var wire 1 (( MEM_OUT [6] $end
$var wire 1 )( MEM_OUT [5] $end
$var wire 1 *( MEM_OUT [4] $end
$var wire 1 +( MEM_OUT [3] $end
$var wire 1 ,( MEM_OUT [2] $end
$var wire 1 -( MEM_OUT [1] $end
$var wire 1 .( MEM_OUT [0] $end
$var wire 1 k MEM_RGB [47] $end
$var wire 1 l MEM_RGB [46] $end
$var wire 1 m MEM_RGB [45] $end
$var wire 1 n MEM_RGB [44] $end
$var wire 1 o MEM_RGB [43] $end
$var wire 1 p MEM_RGB [42] $end
$var wire 1 q MEM_RGB [41] $end
$var wire 1 r MEM_RGB [40] $end
$var wire 1 s MEM_RGB [39] $end
$var wire 1 t MEM_RGB [38] $end
$var wire 1 u MEM_RGB [37] $end
$var wire 1 v MEM_RGB [36] $end
$var wire 1 w MEM_RGB [35] $end
$var wire 1 x MEM_RGB [34] $end
$var wire 1 y MEM_RGB [33] $end
$var wire 1 z MEM_RGB [32] $end
$var wire 1 { MEM_RGB [31] $end
$var wire 1 | MEM_RGB [30] $end
$var wire 1 } MEM_RGB [29] $end
$var wire 1 ~ MEM_RGB [28] $end
$var wire 1 !! MEM_RGB [27] $end
$var wire 1 "! MEM_RGB [26] $end
$var wire 1 #! MEM_RGB [25] $end
$var wire 1 $! MEM_RGB [24] $end
$var wire 1 %! MEM_RGB [23] $end
$var wire 1 &! MEM_RGB [22] $end
$var wire 1 '! MEM_RGB [21] $end
$var wire 1 (! MEM_RGB [20] $end
$var wire 1 )! MEM_RGB [19] $end
$var wire 1 *! MEM_RGB [18] $end
$var wire 1 +! MEM_RGB [17] $end
$var wire 1 ,! MEM_RGB [16] $end
$var wire 1 -! MEM_RGB [15] $end
$var wire 1 .! MEM_RGB [14] $end
$var wire 1 /! MEM_RGB [13] $end
$var wire 1 0! MEM_RGB [12] $end
$var wire 1 1! MEM_RGB [11] $end
$var wire 1 2! MEM_RGB [10] $end
$var wire 1 3! MEM_RGB [9] $end
$var wire 1 4! MEM_RGB [8] $end
$var wire 1 5! MEM_RGB [7] $end
$var wire 1 6! MEM_RGB [6] $end
$var wire 1 7! MEM_RGB [5] $end
$var wire 1 8! MEM_RGB [4] $end
$var wire 1 9! MEM_RGB [3] $end
$var wire 1 :! MEM_RGB [2] $end
$var wire 1 ;! MEM_RGB [1] $end
$var wire 1 <! MEM_RGB [0] $end
$var wire 1 i* CODE0 [7] $end
$var wire 1 j* CODE0 [6] $end
$var wire 1 k* CODE0 [5] $end
$var wire 1 l* CODE0 [4] $end
$var wire 1 m* CODE0 [3] $end
$var wire 1 n* CODE0 [2] $end
$var wire 1 o* CODE0 [1] $end
$var wire 1 p* CODE0 [0] $end
$var wire 1 q* CODE1 [7] $end
$var wire 1 r* CODE1 [6] $end
$var wire 1 s* CODE1 [5] $end
$var wire 1 t* CODE1 [4] $end
$var wire 1 u* CODE1 [3] $end
$var wire 1 v* CODE1 [2] $end
$var wire 1 w* CODE1 [1] $end
$var wire 1 x* CODE1 [0] $end
$var wire 1 y* RGB0 [23] $end
$var wire 1 z* RGB0 [22] $end
$var wire 1 {* RGB0 [21] $end
$var wire 1 |* RGB0 [20] $end
$var wire 1 }* RGB0 [19] $end
$var wire 1 ~* RGB0 [18] $end
$var wire 1 !+ RGB0 [17] $end
$var wire 1 "+ RGB0 [16] $end
$var wire 1 #+ RGB0 [15] $end
$var wire 1 $+ RGB0 [14] $end
$var wire 1 %+ RGB0 [13] $end
$var wire 1 &+ RGB0 [12] $end
$var wire 1 '+ RGB0 [11] $end
$var wire 1 (+ RGB0 [10] $end
$var wire 1 )+ RGB0 [9] $end
$var wire 1 *+ RGB0 [8] $end
$var wire 1 ++ RGB0 [7] $end
$var wire 1 ,+ RGB0 [6] $end
$var wire 1 -+ RGB0 [5] $end
$var wire 1 .+ RGB0 [4] $end
$var wire 1 /+ RGB0 [3] $end
$var wire 1 0+ RGB0 [2] $end
$var wire 1 1+ RGB0 [1] $end
$var wire 1 2+ RGB0 [0] $end
$var wire 1 3+ RGB1 [23] $end
$var wire 1 4+ RGB1 [22] $end
$var wire 1 5+ RGB1 [21] $end
$var wire 1 6+ RGB1 [20] $end
$var wire 1 7+ RGB1 [19] $end
$var wire 1 8+ RGB1 [18] $end
$var wire 1 9+ RGB1 [17] $end
$var wire 1 :+ RGB1 [16] $end
$var wire 1 ;+ RGB1 [15] $end
$var wire 1 <+ RGB1 [14] $end
$var wire 1 =+ RGB1 [13] $end
$var wire 1 >+ RGB1 [12] $end
$var wire 1 ?+ RGB1 [11] $end
$var wire 1 @+ RGB1 [10] $end
$var wire 1 A+ RGB1 [9] $end
$var wire 1 B+ RGB1 [8] $end
$var wire 1 C+ RGB1 [7] $end
$var wire 1 D+ RGB1 [6] $end
$var wire 1 E+ RGB1 [5] $end
$var wire 1 F+ RGB1 [4] $end
$var wire 1 G+ RGB1 [3] $end
$var wire 1 H+ RGB1 [2] $end
$var wire 1 I+ RGB1 [1] $end
$var wire 1 J+ RGB1 [0] $end

$scope module pixel0_decoder $end
$var wire 1 i* CODE [7] $end
$var wire 1 j* CODE [6] $end
$var wire 1 k* CODE [5] $end
$var wire 1 l* CODE [4] $end
$var wire 1 m* CODE [3] $end
$var wire 1 n* CODE [2] $end
$var wire 1 o* CODE [1] $end
$var wire 1 p* CODE [0] $end
$var reg 24 K+ RGB [23:0] $end
$upscope $end

$scope module pixel1_decoder $end
$var wire 1 q* CODE [7] $end
$var wire 1 r* CODE [6] $end
$var wire 1 s* CODE [5] $end
$var wire 1 t* CODE [4] $end
$var wire 1 u* CODE [3] $end
$var wire 1 v* CODE [2] $end
$var wire 1 w* CODE [1] $end
$var wire 1 x* CODE [0] $end
$var reg 24 L+ RGB [23:0] $end
$upscope $end
$upscope $end

$scope module b2v_inst10 $end
$var parameter 3 M+ BACKGROUND $end
$var parameter 3 N+ POWER_BTN_ON $end
$var parameter 3 O+ RED_BTN_ON $end
$var parameter 3 P+ GREEN_BTN_ON $end
$var parameter 3 Q+ BLUE_BTN_ON $end
$var parameter 3 R+ YELLOW_BTN_ON $end
$var parameter 3 S+ WIN_SCREEN $end
$var parameter 3 T+ LOSE_SCREEN $end
$var wire 1 V! SELECTOR [2] $end
$var wire 1 W! SELECTOR [1] $end
$var wire 1 X! SELECTOR [0] $end
$var wire 1 F! IN_ADDR [15] $end
$var wire 1 G! IN_ADDR [14] $end
$var wire 1 H! IN_ADDR [13] $end
$var wire 1 I! IN_ADDR [12] $end
$var wire 1 J! IN_ADDR [11] $end
$var wire 1 K! IN_ADDR [10] $end
$var wire 1 L! IN_ADDR [9] $end
$var wire 1 M! IN_ADDR [8] $end
$var wire 1 N! IN_ADDR [7] $end
$var wire 1 O! IN_ADDR [6] $end
$var wire 1 P! IN_ADDR [5] $end
$var wire 1 Q! IN_ADDR [4] $end
$var wire 1 R! IN_ADDR [3] $end
$var wire 1 S! IN_ADDR [2] $end
$var wire 1 T! IN_ADDR [1] $end
$var wire 1 U! IN_ADDR [0] $end
$var wire 1 E! IN_CLK $end
$var wire 1 /( BACKGROUND_PX [15] $end
$var wire 1 0( BACKGROUND_PX [14] $end
$var wire 1 1( BACKGROUND_PX [13] $end
$var wire 1 2( BACKGROUND_PX [12] $end
$var wire 1 3( BACKGROUND_PX [11] $end
$var wire 1 4( BACKGROUND_PX [10] $end
$var wire 1 5( BACKGROUND_PX [9] $end
$var wire 1 6( BACKGROUND_PX [8] $end
$var wire 1 7( BACKGROUND_PX [7] $end
$var wire 1 8( BACKGROUND_PX [6] $end
$var wire 1 9( BACKGROUND_PX [5] $end
$var wire 1 :( BACKGROUND_PX [4] $end
$var wire 1 ;( BACKGROUND_PX [3] $end
$var wire 1 <( BACKGROUND_PX [2] $end
$var wire 1 =( BACKGROUND_PX [1] $end
$var wire 1 >( BACKGROUND_PX [0] $end
$var wire 1 o( POWER_BTN_PX [15] $end
$var wire 1 p( POWER_BTN_PX [14] $end
$var wire 1 q( POWER_BTN_PX [13] $end
$var wire 1 r( POWER_BTN_PX [12] $end
$var wire 1 s( POWER_BTN_PX [11] $end
$var wire 1 t( POWER_BTN_PX [10] $end
$var wire 1 u( POWER_BTN_PX [9] $end
$var wire 1 v( POWER_BTN_PX [8] $end
$var wire 1 w( POWER_BTN_PX [7] $end
$var wire 1 x( POWER_BTN_PX [6] $end
$var wire 1 y( POWER_BTN_PX [5] $end
$var wire 1 z( POWER_BTN_PX [4] $end
$var wire 1 {( POWER_BTN_PX [3] $end
$var wire 1 |( POWER_BTN_PX [2] $end
$var wire 1 }( POWER_BTN_PX [1] $end
$var wire 1 ~( POWER_BTN_PX [0] $end
$var wire 1 !) RED_BTN_PX [15] $end
$var wire 1 ") RED_BTN_PX [14] $end
$var wire 1 #) RED_BTN_PX [13] $end
$var wire 1 $) RED_BTN_PX [12] $end
$var wire 1 %) RED_BTN_PX [11] $end
$var wire 1 &) RED_BTN_PX [10] $end
$var wire 1 ') RED_BTN_PX [9] $end
$var wire 1 () RED_BTN_PX [8] $end
$var wire 1 )) RED_BTN_PX [7] $end
$var wire 1 *) RED_BTN_PX [6] $end
$var wire 1 +) RED_BTN_PX [5] $end
$var wire 1 ,) RED_BTN_PX [4] $end
$var wire 1 -) RED_BTN_PX [3] $end
$var wire 1 .) RED_BTN_PX [2] $end
$var wire 1 /) RED_BTN_PX [1] $end
$var wire 1 0) RED_BTN_PX [0] $end
$var wire 1 O( GREEN_BTN_PX [15] $end
$var wire 1 P( GREEN_BTN_PX [14] $end
$var wire 1 Q( GREEN_BTN_PX [13] $end
$var wire 1 R( GREEN_BTN_PX [12] $end
$var wire 1 S( GREEN_BTN_PX [11] $end
$var wire 1 T( GREEN_BTN_PX [10] $end
$var wire 1 U( GREEN_BTN_PX [9] $end
$var wire 1 V( GREEN_BTN_PX [8] $end
$var wire 1 W( GREEN_BTN_PX [7] $end
$var wire 1 X( GREEN_BTN_PX [6] $end
$var wire 1 Y( GREEN_BTN_PX [5] $end
$var wire 1 Z( GREEN_BTN_PX [4] $end
$var wire 1 [( GREEN_BTN_PX [3] $end
$var wire 1 \( GREEN_BTN_PX [2] $end
$var wire 1 ]( GREEN_BTN_PX [1] $end
$var wire 1 ^( GREEN_BTN_PX [0] $end
$var wire 1 ?( BLUE_BTN_PX [15] $end
$var wire 1 @( BLUE_BTN_PX [14] $end
$var wire 1 A( BLUE_BTN_PX [13] $end
$var wire 1 B( BLUE_BTN_PX [12] $end
$var wire 1 C( BLUE_BTN_PX [11] $end
$var wire 1 D( BLUE_BTN_PX [10] $end
$var wire 1 E( BLUE_BTN_PX [9] $end
$var wire 1 F( BLUE_BTN_PX [8] $end
$var wire 1 G( BLUE_BTN_PX [7] $end
$var wire 1 H( BLUE_BTN_PX [6] $end
$var wire 1 I( BLUE_BTN_PX [5] $end
$var wire 1 J( BLUE_BTN_PX [4] $end
$var wire 1 K( BLUE_BTN_PX [3] $end
$var wire 1 L( BLUE_BTN_PX [2] $end
$var wire 1 M( BLUE_BTN_PX [1] $end
$var wire 1 N( BLUE_BTN_PX [0] $end
$var wire 1 A) YELLOW_BTN_PX [15] $end
$var wire 1 B) YELLOW_BTN_PX [14] $end
$var wire 1 C) YELLOW_BTN_PX [13] $end
$var wire 1 D) YELLOW_BTN_PX [12] $end
$var wire 1 E) YELLOW_BTN_PX [11] $end
$var wire 1 F) YELLOW_BTN_PX [10] $end
$var wire 1 G) YELLOW_BTN_PX [9] $end
$var wire 1 H) YELLOW_BTN_PX [8] $end
$var wire 1 I) YELLOW_BTN_PX [7] $end
$var wire 1 J) YELLOW_BTN_PX [6] $end
$var wire 1 K) YELLOW_BTN_PX [5] $end
$var wire 1 L) YELLOW_BTN_PX [4] $end
$var wire 1 M) YELLOW_BTN_PX [3] $end
$var wire 1 N) YELLOW_BTN_PX [2] $end
$var wire 1 O) YELLOW_BTN_PX [1] $end
$var wire 1 P) YELLOW_BTN_PX [0] $end
$var wire 1 1) WIN_SCREEN_PX [15] $end
$var wire 1 2) WIN_SCREEN_PX [14] $end
$var wire 1 3) WIN_SCREEN_PX [13] $end
$var wire 1 4) WIN_SCREEN_PX [12] $end
$var wire 1 5) WIN_SCREEN_PX [11] $end
$var wire 1 6) WIN_SCREEN_PX [10] $end
$var wire 1 7) WIN_SCREEN_PX [9] $end
$var wire 1 8) WIN_SCREEN_PX [8] $end
$var wire 1 9) WIN_SCREEN_PX [7] $end
$var wire 1 :) WIN_SCREEN_PX [6] $end
$var wire 1 ;) WIN_SCREEN_PX [5] $end
$var wire 1 <) WIN_SCREEN_PX [4] $end
$var wire 1 =) WIN_SCREEN_PX [3] $end
$var wire 1 >) WIN_SCREEN_PX [2] $end
$var wire 1 ?) WIN_SCREEN_PX [1] $end
$var wire 1 @) WIN_SCREEN_PX [0] $end
$var wire 1 _( LOSE_SCREEN_PX [15] $end
$var wire 1 `( LOSE_SCREEN_PX [14] $end
$var wire 1 a( LOSE_SCREEN_PX [13] $end
$var wire 1 b( LOSE_SCREEN_PX [12] $end
$var wire 1 c( LOSE_SCREEN_PX [11] $end
$var wire 1 d( LOSE_SCREEN_PX [10] $end
$var wire 1 e( LOSE_SCREEN_PX [9] $end
$var wire 1 f( LOSE_SCREEN_PX [8] $end
$var wire 1 g( LOSE_SCREEN_PX [7] $end
$var wire 1 h( LOSE_SCREEN_PX [6] $end
$var wire 1 i( LOSE_SCREEN_PX [5] $end
$var wire 1 j( LOSE_SCREEN_PX [4] $end
$var wire 1 k( LOSE_SCREEN_PX [3] $end
$var wire 1 l( LOSE_SCREEN_PX [2] $end
$var wire 1 m( LOSE_SCREEN_PX [1] $end
$var wire 1 n( LOSE_SCREEN_PX [0] $end
$var reg 16 U+ OUT_PX [15:0] $end
$var reg 16 V+ BACKGROUND_ADDR [15:0] $end
$var reg 8 W+ POWER_BTN_ADDR [7:0] $end
$var reg 14 X+ RED_BTN_ADDR [13:0] $end
$var reg 14 Y+ GREEN_BTN_ADDR [13:0] $end
$var reg 14 Z+ BLUE_BTN_ADDR [13:0] $end
$var reg 14 [+ YELLOW_BTN_ADDR [13:0] $end
$var reg 15 \+ WIN_SCREEN_ADDR [14:0] $end
$var reg 15 ]+ LOSE_SCREEN_ADDR [14:0] $end
$var reg 1 ^+ BACKGROUND_CLK $end
$var reg 1 _+ POWER_BTN_CLK $end
$var reg 1 `+ RED_BTN_CLK $end
$var reg 1 a+ GREEN_BTN_CLK $end
$var reg 1 b+ BLUE_BTN_CLK $end
$var reg 1 c+ YELLOW_BTN_CLK $end
$var reg 1 d+ WIN_SCREEN_CLK $end
$var reg 1 e+ LOSE_SCREEN_CLK $end
$upscope $end

$scope module b2v_inst2 $end
$var wire 1 f+ address [15] $end
$var wire 1 g+ address [14] $end
$var wire 1 h+ address [13] $end
$var wire 1 i+ address [12] $end
$var wire 1 j+ address [11] $end
$var wire 1 k+ address [10] $end
$var wire 1 l+ address [9] $end
$var wire 1 m+ address [8] $end
$var wire 1 n+ address [7] $end
$var wire 1 o+ address [6] $end
$var wire 1 p+ address [5] $end
$var wire 1 q+ address [4] $end
$var wire 1 r+ address [3] $end
$var wire 1 s+ address [2] $end
$var wire 1 t+ address [1] $end
$var wire 1 u+ address [0] $end
$var wire 1 v+ clock $end
$var wire 1 w+ q [15] $end
$var wire 1 x+ q [14] $end
$var wire 1 y+ q [13] $end
$var wire 1 z+ q [12] $end
$var wire 1 {+ q [11] $end
$var wire 1 |+ q [10] $end
$var wire 1 }+ q [9] $end
$var wire 1 ~+ q [8] $end
$var wire 1 !, q [7] $end
$var wire 1 ", q [6] $end
$var wire 1 #, q [5] $end
$var wire 1 $, q [4] $end
$var wire 1 %, q [3] $end
$var wire 1 &, q [2] $end
$var wire 1 ', q [1] $end
$var wire 1 (, q [0] $end
$var wire 1 ), sub_wire0 [15] $end
$var wire 1 *, sub_wire0 [14] $end
$var wire 1 +, sub_wire0 [13] $end
$var wire 1 ,, sub_wire0 [12] $end
$var wire 1 -, sub_wire0 [11] $end
$var wire 1 ., sub_wire0 [10] $end
$var wire 1 /, sub_wire0 [9] $end
$var wire 1 0, sub_wire0 [8] $end
$var wire 1 1, sub_wire0 [7] $end
$var wire 1 2, sub_wire0 [6] $end
$var wire 1 3, sub_wire0 [5] $end
$var wire 1 4, sub_wire0 [4] $end
$var wire 1 5, sub_wire0 [3] $end
$var wire 1 6, sub_wire0 [2] $end
$var wire 1 7, sub_wire0 [1] $end
$var wire 1 8, sub_wire0 [0] $end

$scope module altsyncram_component $end
$var wire 1 9, wren_a $end
$var wire 1 :, wren_b $end
$var wire 1 ;, rden_a $end
$var wire 1 <, rden_b $end
$var wire 1 =, data_a [15] $end
$var wire 1 >, data_a [14] $end
$var wire 1 ?, data_a [13] $end
$var wire 1 @, data_a [12] $end
$var wire 1 A, data_a [11] $end
$var wire 1 B, data_a [10] $end
$var wire 1 C, data_a [9] $end
$var wire 1 D, data_a [8] $end
$var wire 1 E, data_a [7] $end
$var wire 1 F, data_a [6] $end
$var wire 1 G, data_a [5] $end
$var wire 1 H, data_a [4] $end
$var wire 1 I, data_a [3] $end
$var wire 1 J, data_a [2] $end
$var wire 1 K, data_a [1] $end
$var wire 1 L, data_a [0] $end
$var wire 1 M, data_b [0] $end
$var wire 1 f+ address_a [15] $end
$var wire 1 g+ address_a [14] $end
$var wire 1 h+ address_a [13] $end
$var wire 1 i+ address_a [12] $end
$var wire 1 j+ address_a [11] $end
$var wire 1 k+ address_a [10] $end
$var wire 1 l+ address_a [9] $end
$var wire 1 m+ address_a [8] $end
$var wire 1 n+ address_a [7] $end
$var wire 1 o+ address_a [6] $end
$var wire 1 p+ address_a [5] $end
$var wire 1 q+ address_a [4] $end
$var wire 1 r+ address_a [3] $end
$var wire 1 s+ address_a [2] $end
$var wire 1 t+ address_a [1] $end
$var wire 1 u+ address_a [0] $end
$var wire 1 N, address_b [0] $end
$var wire 1 v+ clock0 $end
$var wire 1 O, clock1 $end
$var wire 1 P, clocken0 $end
$var wire 1 Q, clocken1 $end
$var wire 1 R, clocken2 $end
$var wire 1 S, clocken3 $end
$var wire 1 T, aclr0 $end
$var wire 1 U, aclr1 $end
$var wire 1 V, addressstall_a $end
$var wire 1 W, addressstall_b $end
$var wire 1 X, byteena_a [0] $end
$var wire 1 Y, byteena_b [0] $end
$var wire 1 ), q_a [15] $end
$var wire 1 *, q_a [14] $end
$var wire 1 +, q_a [13] $end
$var wire 1 ,, q_a [12] $end
$var wire 1 -, q_a [11] $end
$var wire 1 ., q_a [10] $end
$var wire 1 /, q_a [9] $end
$var wire 1 0, q_a [8] $end
$var wire 1 1, q_a [7] $end
$var wire 1 2, q_a [6] $end
$var wire 1 3, q_a [5] $end
$var wire 1 4, q_a [4] $end
$var wire 1 5, q_a [3] $end
$var wire 1 6, q_a [2] $end
$var wire 1 7, q_a [1] $end
$var wire 1 8, q_a [0] $end
$var wire 1 Z, q_b [0] $end
$var wire 1 [, eccstatus [2] $end
$var wire 1 \, eccstatus [1] $end
$var wire 1 ], eccstatus [0] $end
$var wire 1 ^, i_data_reg_a [15] $end
$var wire 1 _, i_data_reg_a [14] $end
$var wire 1 `, i_data_reg_a [13] $end
$var wire 1 a, i_data_reg_a [12] $end
$var wire 1 b, i_data_reg_a [11] $end
$var wire 1 c, i_data_reg_a [10] $end
$var wire 1 d, i_data_reg_a [9] $end
$var wire 1 e, i_data_reg_a [8] $end
$var wire 1 f, i_data_reg_a [7] $end
$var wire 1 g, i_data_reg_a [6] $end
$var wire 1 h, i_data_reg_a [5] $end
$var wire 1 i, i_data_reg_a [4] $end
$var wire 1 j, i_data_reg_a [3] $end
$var wire 1 k, i_data_reg_a [2] $end
$var wire 1 l, i_data_reg_a [1] $end
$var wire 1 m, i_data_reg_a [0] $end
$var wire 1 n, i_data_reg_b [0] $end
$var wire 1 o, i_q_reg_a [15] $end
$var wire 1 p, i_q_reg_a [14] $end
$var wire 1 q, i_q_reg_a [13] $end
$var wire 1 r, i_q_reg_a [12] $end
$var wire 1 s, i_q_reg_a [11] $end
$var wire 1 t, i_q_reg_a [10] $end
$var wire 1 u, i_q_reg_a [9] $end
$var wire 1 v, i_q_reg_a [8] $end
$var wire 1 w, i_q_reg_a [7] $end
$var wire 1 x, i_q_reg_a [6] $end
$var wire 1 y, i_q_reg_a [5] $end
$var wire 1 z, i_q_reg_a [4] $end
$var wire 1 {, i_q_reg_a [3] $end
$var wire 1 |, i_q_reg_a [2] $end
$var wire 1 }, i_q_reg_a [1] $end
$var wire 1 ~, i_q_reg_a [0] $end
$var wire 1 !- i_q_tmp_a [15] $end
$var wire 1 "- i_q_tmp_a [14] $end
$var wire 1 #- i_q_tmp_a [13] $end
$var wire 1 $- i_q_tmp_a [12] $end
$var wire 1 %- i_q_tmp_a [11] $end
$var wire 1 &- i_q_tmp_a [10] $end
$var wire 1 '- i_q_tmp_a [9] $end
$var wire 1 (- i_q_tmp_a [8] $end
$var wire 1 )- i_q_tmp_a [7] $end
$var wire 1 *- i_q_tmp_a [6] $end
$var wire 1 +- i_q_tmp_a [5] $end
$var wire 1 ,- i_q_tmp_a [4] $end
$var wire 1 -- i_q_tmp_a [3] $end
$var wire 1 .- i_q_tmp_a [2] $end
$var wire 1 /- i_q_tmp_a [1] $end
$var wire 1 0- i_q_tmp_a [0] $end
$var wire 1 1- i_q_tmp2_a [15] $end
$var wire 1 2- i_q_tmp2_a [14] $end
$var wire 1 3- i_q_tmp2_a [13] $end
$var wire 1 4- i_q_tmp2_a [12] $end
$var wire 1 5- i_q_tmp2_a [11] $end
$var wire 1 6- i_q_tmp2_a [10] $end
$var wire 1 7- i_q_tmp2_a [9] $end
$var wire 1 8- i_q_tmp2_a [8] $end
$var wire 1 9- i_q_tmp2_a [7] $end
$var wire 1 :- i_q_tmp2_a [6] $end
$var wire 1 ;- i_q_tmp2_a [5] $end
$var wire 1 <- i_q_tmp2_a [4] $end
$var wire 1 =- i_q_tmp2_a [3] $end
$var wire 1 >- i_q_tmp2_a [2] $end
$var wire 1 ?- i_q_tmp2_a [1] $end
$var wire 1 @- i_q_tmp2_a [0] $end
$var wire 1 A- i_q_tmp_wren_a [15] $end
$var wire 1 B- i_q_tmp_wren_a [14] $end
$var wire 1 C- i_q_tmp_wren_a [13] $end
$var wire 1 D- i_q_tmp_wren_a [12] $end
$var wire 1 E- i_q_tmp_wren_a [11] $end
$var wire 1 F- i_q_tmp_wren_a [10] $end
$var wire 1 G- i_q_tmp_wren_a [9] $end
$var wire 1 H- i_q_tmp_wren_a [8] $end
$var wire 1 I- i_q_tmp_wren_a [7] $end
$var wire 1 J- i_q_tmp_wren_a [6] $end
$var wire 1 K- i_q_tmp_wren_a [5] $end
$var wire 1 L- i_q_tmp_wren_a [4] $end
$var wire 1 M- i_q_tmp_wren_a [3] $end
$var wire 1 N- i_q_tmp_wren_a [2] $end
$var wire 1 O- i_q_tmp_wren_a [1] $end
$var wire 1 P- i_q_tmp_wren_a [0] $end
$var wire 1 Q- i_q_tmp2_wren_a [15] $end
$var wire 1 R- i_q_tmp2_wren_a [14] $end
$var wire 1 S- i_q_tmp2_wren_a [13] $end
$var wire 1 T- i_q_tmp2_wren_a [12] $end
$var wire 1 U- i_q_tmp2_wren_a [11] $end
$var wire 1 V- i_q_tmp2_wren_a [10] $end
$var wire 1 W- i_q_tmp2_wren_a [9] $end
$var wire 1 X- i_q_tmp2_wren_a [8] $end
$var wire 1 Y- i_q_tmp2_wren_a [7] $end
$var wire 1 Z- i_q_tmp2_wren_a [6] $end
$var wire 1 [- i_q_tmp2_wren_a [5] $end
$var wire 1 \- i_q_tmp2_wren_a [4] $end
$var wire 1 ]- i_q_tmp2_wren_a [3] $end
$var wire 1 ^- i_q_tmp2_wren_a [2] $end
$var wire 1 _- i_q_tmp2_wren_a [1] $end
$var wire 1 `- i_q_tmp2_wren_a [0] $end
$var wire 1 a- i_q_tmp_wren_b [0] $end
$var wire 1 b- i_q_reg_b [0] $end
$var wire 1 c- i_q_tmp_b [0] $end
$var wire 1 d- i_q_tmp2_b [0] $end
$var wire 1 e- i_q_output_latch [0] $end
$var wire 1 f- i_q_ecc_reg_b [0] $end
$var wire 1 g- i_q_ecc_tmp_b [0] $end
$var wire 1 h- i_current_written_data_a [15] $end
$var wire 1 i- i_current_written_data_a [14] $end
$var wire 1 j- i_current_written_data_a [13] $end
$var wire 1 k- i_current_written_data_a [12] $end
$var wire 1 l- i_current_written_data_a [11] $end
$var wire 1 m- i_current_written_data_a [10] $end
$var wire 1 n- i_current_written_data_a [9] $end
$var wire 1 o- i_current_written_data_a [8] $end
$var wire 1 p- i_current_written_data_a [7] $end
$var wire 1 q- i_current_written_data_a [6] $end
$var wire 1 r- i_current_written_data_a [5] $end
$var wire 1 s- i_current_written_data_a [4] $end
$var wire 1 t- i_current_written_data_a [3] $end
$var wire 1 u- i_current_written_data_a [2] $end
$var wire 1 v- i_current_written_data_a [1] $end
$var wire 1 w- i_current_written_data_a [0] $end
$var wire 1 x- i_original_data_a [15] $end
$var wire 1 y- i_original_data_a [14] $end
$var wire 1 z- i_original_data_a [13] $end
$var wire 1 {- i_original_data_a [12] $end
$var wire 1 |- i_original_data_a [11] $end
$var wire 1 }- i_original_data_a [10] $end
$var wire 1 ~- i_original_data_a [9] $end
$var wire 1 !. i_original_data_a [8] $end
$var wire 1 ". i_original_data_a [7] $end
$var wire 1 #. i_original_data_a [6] $end
$var wire 1 $. i_original_data_a [5] $end
$var wire 1 %. i_original_data_a [4] $end
$var wire 1 &. i_original_data_a [3] $end
$var wire 1 '. i_original_data_a [2] $end
$var wire 1 (. i_original_data_a [1] $end
$var wire 1 ). i_original_data_a [0] $end
$var wire 1 *. i_original_data_b [0] $end
$var wire 1 +. i_byteena_mask_reg_a_x [15] $end
$var wire 1 ,. i_byteena_mask_reg_a_x [14] $end
$var wire 1 -. i_byteena_mask_reg_a_x [13] $end
$var wire 1 .. i_byteena_mask_reg_a_x [12] $end
$var wire 1 /. i_byteena_mask_reg_a_x [11] $end
$var wire 1 0. i_byteena_mask_reg_a_x [10] $end
$var wire 1 1. i_byteena_mask_reg_a_x [9] $end
$var wire 1 2. i_byteena_mask_reg_a_x [8] $end
$var wire 1 3. i_byteena_mask_reg_a_x [7] $end
$var wire 1 4. i_byteena_mask_reg_a_x [6] $end
$var wire 1 5. i_byteena_mask_reg_a_x [5] $end
$var wire 1 6. i_byteena_mask_reg_a_x [4] $end
$var wire 1 7. i_byteena_mask_reg_a_x [3] $end
$var wire 1 8. i_byteena_mask_reg_a_x [2] $end
$var wire 1 9. i_byteena_mask_reg_a_x [1] $end
$var wire 1 :. i_byteena_mask_reg_a_x [0] $end
$var wire 1 ;. i_byteena_mask_reg_b_x [0] $end
$var wire 1 <. i_byteena_mask_reg_a [15] $end
$var wire 1 =. i_byteena_mask_reg_a [14] $end
$var wire 1 >. i_byteena_mask_reg_a [13] $end
$var wire 1 ?. i_byteena_mask_reg_a [12] $end
$var wire 1 @. i_byteena_mask_reg_a [11] $end
$var wire 1 A. i_byteena_mask_reg_a [10] $end
$var wire 1 B. i_byteena_mask_reg_a [9] $end
$var wire 1 C. i_byteena_mask_reg_a [8] $end
$var wire 1 D. i_byteena_mask_reg_a [7] $end
$var wire 1 E. i_byteena_mask_reg_a [6] $end
$var wire 1 F. i_byteena_mask_reg_a [5] $end
$var wire 1 G. i_byteena_mask_reg_a [4] $end
$var wire 1 H. i_byteena_mask_reg_a [3] $end
$var wire 1 I. i_byteena_mask_reg_a [2] $end
$var wire 1 J. i_byteena_mask_reg_a [1] $end
$var wire 1 K. i_byteena_mask_reg_a [0] $end
$var wire 1 L. i_byteena_mask_reg_b [0] $end
$var wire 1 M. i_byteena_mask_reg_a_out [15] $end
$var wire 1 N. i_byteena_mask_reg_a_out [14] $end
$var wire 1 O. i_byteena_mask_reg_a_out [13] $end
$var wire 1 P. i_byteena_mask_reg_a_out [12] $end
$var wire 1 Q. i_byteena_mask_reg_a_out [11] $end
$var wire 1 R. i_byteena_mask_reg_a_out [10] $end
$var wire 1 S. i_byteena_mask_reg_a_out [9] $end
$var wire 1 T. i_byteena_mask_reg_a_out [8] $end
$var wire 1 U. i_byteena_mask_reg_a_out [7] $end
$var wire 1 V. i_byteena_mask_reg_a_out [6] $end
$var wire 1 W. i_byteena_mask_reg_a_out [5] $end
$var wire 1 X. i_byteena_mask_reg_a_out [4] $end
$var wire 1 Y. i_byteena_mask_reg_a_out [3] $end
$var wire 1 Z. i_byteena_mask_reg_a_out [2] $end
$var wire 1 [. i_byteena_mask_reg_a_out [1] $end
$var wire 1 \. i_byteena_mask_reg_a_out [0] $end
$var wire 1 ]. i_byteena_mask_reg_b_out [0] $end
$var wire 1 ^. i_byteena_mask_reg_a_out_b [15] $end
$var wire 1 _. i_byteena_mask_reg_a_out_b [14] $end
$var wire 1 `. i_byteena_mask_reg_a_out_b [13] $end
$var wire 1 a. i_byteena_mask_reg_a_out_b [12] $end
$var wire 1 b. i_byteena_mask_reg_a_out_b [11] $end
$var wire 1 c. i_byteena_mask_reg_a_out_b [10] $end
$var wire 1 d. i_byteena_mask_reg_a_out_b [9] $end
$var wire 1 e. i_byteena_mask_reg_a_out_b [8] $end
$var wire 1 f. i_byteena_mask_reg_a_out_b [7] $end
$var wire 1 g. i_byteena_mask_reg_a_out_b [6] $end
$var wire 1 h. i_byteena_mask_reg_a_out_b [5] $end
$var wire 1 i. i_byteena_mask_reg_a_out_b [4] $end
$var wire 1 j. i_byteena_mask_reg_a_out_b [3] $end
$var wire 1 k. i_byteena_mask_reg_a_out_b [2] $end
$var wire 1 l. i_byteena_mask_reg_a_out_b [1] $end
$var wire 1 m. i_byteena_mask_reg_a_out_b [0] $end
$var wire 1 n. i_byteena_mask_reg_b_out_a [0] $end
$var wire 1 o. i_address_reg_a [15] $end
$var wire 1 p. i_address_reg_a [14] $end
$var wire 1 q. i_address_reg_a [13] $end
$var wire 1 r. i_address_reg_a [12] $end
$var wire 1 s. i_address_reg_a [11] $end
$var wire 1 t. i_address_reg_a [10] $end
$var wire 1 u. i_address_reg_a [9] $end
$var wire 1 v. i_address_reg_a [8] $end
$var wire 1 w. i_address_reg_a [7] $end
$var wire 1 x. i_address_reg_a [6] $end
$var wire 1 y. i_address_reg_a [5] $end
$var wire 1 z. i_address_reg_a [4] $end
$var wire 1 {. i_address_reg_a [3] $end
$var wire 1 |. i_address_reg_a [2] $end
$var wire 1 }. i_address_reg_a [1] $end
$var wire 1 ~. i_address_reg_a [0] $end
$var wire 1 !/ i_address_reg_b [0] $end
$var wire 1 "/ i_wren_reg_a $end
$var wire 1 #/ i_wren_reg_b $end
$var wire 1 $/ i_rden_reg_a $end
$var wire 1 %/ i_rden_reg_b $end
$var wire 1 &/ i_read_flag_a $end
$var wire 1 '/ i_read_flag_b $end
$var wire 1 (/ i_reread_flag_a $end
$var wire 1 )/ i_reread_flag_b $end
$var wire 1 */ i_reread_flag2_a $end
$var wire 1 +/ i_reread_flag2_b $end
$var wire 1 ,/ i_write_flag_a $end
$var wire 1 -/ i_write_flag_b $end
$var wire 1 ./ i_nmram_write_a $end
$var wire 1 // i_nmram_write_b $end
$var wire 1 0/ i_indata_aclr_a $end
$var wire 1 1/ i_address_aclr_a $end
$var wire 1 2/ i_wrcontrol_aclr_a $end
$var wire 1 3/ i_indata_aclr_b $end
$var wire 1 4/ i_address_aclr_b $end
$var wire 1 5/ i_wrcontrol_aclr_b $end
$var wire 1 6/ i_outdata_aclr_a $end
$var wire 1 7/ i_outdata_aclr_b $end
$var wire 1 8/ i_rdcontrol_aclr_b $end
$var wire 1 9/ i_byteena_aclr_a $end
$var wire 1 :/ i_byteena_aclr_b $end
$var wire 1 ;/ good_to_go_a $end
$var wire 1 </ good_to_go_b $end
$var wire 1 =/ i_core_clocken_a $end
$var wire 1 >/ i_core_clocken_b $end
$var wire 1 ?/ i_core_clocken_b0 $end
$var wire 1 @/ i_core_clocken_b1 $end
$var wire 1 A/ i_inclocken0 $end
$var wire 1 B/ i_input_clocken_b $end
$var wire 1 C/ i_outdata_clken_b $end
$var wire 1 D/ i_outdata_clken_a $end
$var wire 1 E/ i_outlatch_clken_a $end
$var wire 1 F/ i_outlatch_clken_b $end
$var wire 1 G/ i_core_clocken_a_reg $end
$var wire 1 H/ i_core_clocken_b_reg $end
$var wire 1 I/ default_val $end
$var wire 1 J/ i_data_zero_a [15] $end
$var wire 1 K/ i_data_zero_a [14] $end
$var wire 1 L/ i_data_zero_a [13] $end
$var wire 1 M/ i_data_zero_a [12] $end
$var wire 1 N/ i_data_zero_a [11] $end
$var wire 1 O/ i_data_zero_a [10] $end
$var wire 1 P/ i_data_zero_a [9] $end
$var wire 1 Q/ i_data_zero_a [8] $end
$var wire 1 R/ i_data_zero_a [7] $end
$var wire 1 S/ i_data_zero_a [6] $end
$var wire 1 T/ i_data_zero_a [5] $end
$var wire 1 U/ i_data_zero_a [4] $end
$var wire 1 V/ i_data_zero_a [3] $end
$var wire 1 W/ i_data_zero_a [2] $end
$var wire 1 X/ i_data_zero_a [1] $end
$var wire 1 Y/ i_data_zero_a [0] $end
$var wire 1 Z/ i_data_zero_b [0] $end
$var wire 1 [/ i_data_ones_a [15] $end
$var wire 1 \/ i_data_ones_a [14] $end
$var wire 1 ]/ i_data_ones_a [13] $end
$var wire 1 ^/ i_data_ones_a [12] $end
$var wire 1 _/ i_data_ones_a [11] $end
$var wire 1 `/ i_data_ones_a [10] $end
$var wire 1 a/ i_data_ones_a [9] $end
$var wire 1 b/ i_data_ones_a [8] $end
$var wire 1 c/ i_data_ones_a [7] $end
$var wire 1 d/ i_data_ones_a [6] $end
$var wire 1 e/ i_data_ones_a [5] $end
$var wire 1 f/ i_data_ones_a [4] $end
$var wire 1 g/ i_data_ones_a [3] $end
$var wire 1 h/ i_data_ones_a [2] $end
$var wire 1 i/ i_data_ones_a [1] $end
$var wire 1 j/ i_data_ones_a [0] $end
$var wire 1 k/ i_data_ones_b [0] $end
$var wire 1 l/ same_clock_pulse0 $end
$var wire 1 m/ same_clock_pulse1 $end
$var wire 1 n/ i_force_reread_a $end
$var wire 1 o/ i_force_reread_a1 $end
$var wire 1 p/ i_force_reread_b $end
$var wire 1 q/ i_force_reread_b1 $end
$var wire 1 r/ i_force_reread_signal_a $end
$var wire 1 s/ i_force_reread_signal_b $end
$var wire 1 t/ i_good_to_write_a $end
$var wire 1 u/ i_good_to_write_b $end

$scope begin IFG02 $end
$upscope $end

$scope begin IFG03a $end
$upscope $end

$scope begin IFG15 $end
$upscope $end

$scope begin IFG172a $end
$upscope $end

$scope begin IFG50a $end
$upscope $end

$scope begin IFG51a $end
$upscope $end

$scope begin IFG52b $end
$upscope $end

$scope begin IFCLR01 $end
$upscope $end

$scope begin IFG53 $end
$upscope $end

$scope begin IFG57 $end
$upscope $end
$upscope $end
$upscope $end

$scope module b2v_inst3 $end
$var wire 1 v/ address [13] $end
$var wire 1 w/ address [12] $end
$var wire 1 x/ address [11] $end
$var wire 1 y/ address [10] $end
$var wire 1 z/ address [9] $end
$var wire 1 {/ address [8] $end
$var wire 1 |/ address [7] $end
$var wire 1 }/ address [6] $end
$var wire 1 ~/ address [5] $end
$var wire 1 !0 address [4] $end
$var wire 1 "0 address [3] $end
$var wire 1 #0 address [2] $end
$var wire 1 $0 address [1] $end
$var wire 1 %0 address [0] $end
$var wire 1 &0 clock $end
$var wire 1 '0 q [15] $end
$var wire 1 (0 q [14] $end
$var wire 1 )0 q [13] $end
$var wire 1 *0 q [12] $end
$var wire 1 +0 q [11] $end
$var wire 1 ,0 q [10] $end
$var wire 1 -0 q [9] $end
$var wire 1 .0 q [8] $end
$var wire 1 /0 q [7] $end
$var wire 1 00 q [6] $end
$var wire 1 10 q [5] $end
$var wire 1 20 q [4] $end
$var wire 1 30 q [3] $end
$var wire 1 40 q [2] $end
$var wire 1 50 q [1] $end
$var wire 1 60 q [0] $end
$var wire 1 70 sub_wire0 [15] $end
$var wire 1 80 sub_wire0 [14] $end
$var wire 1 90 sub_wire0 [13] $end
$var wire 1 :0 sub_wire0 [12] $end
$var wire 1 ;0 sub_wire0 [11] $end
$var wire 1 <0 sub_wire0 [10] $end
$var wire 1 =0 sub_wire0 [9] $end
$var wire 1 >0 sub_wire0 [8] $end
$var wire 1 ?0 sub_wire0 [7] $end
$var wire 1 @0 sub_wire0 [6] $end
$var wire 1 A0 sub_wire0 [5] $end
$var wire 1 B0 sub_wire0 [4] $end
$var wire 1 C0 sub_wire0 [3] $end
$var wire 1 D0 sub_wire0 [2] $end
$var wire 1 E0 sub_wire0 [1] $end
$var wire 1 F0 sub_wire0 [0] $end

$scope module altsyncram_component $end
$var wire 1 G0 wren_a $end
$var wire 1 H0 wren_b $end
$var wire 1 I0 rden_a $end
$var wire 1 J0 rden_b $end
$var wire 1 K0 data_a [15] $end
$var wire 1 L0 data_a [14] $end
$var wire 1 M0 data_a [13] $end
$var wire 1 N0 data_a [12] $end
$var wire 1 O0 data_a [11] $end
$var wire 1 P0 data_a [10] $end
$var wire 1 Q0 data_a [9] $end
$var wire 1 R0 data_a [8] $end
$var wire 1 S0 data_a [7] $end
$var wire 1 T0 data_a [6] $end
$var wire 1 U0 data_a [5] $end
$var wire 1 V0 data_a [4] $end
$var wire 1 W0 data_a [3] $end
$var wire 1 X0 data_a [2] $end
$var wire 1 Y0 data_a [1] $end
$var wire 1 Z0 data_a [0] $end
$var wire 1 [0 data_b [0] $end
$var wire 1 v/ address_a [13] $end
$var wire 1 w/ address_a [12] $end
$var wire 1 x/ address_a [11] $end
$var wire 1 y/ address_a [10] $end
$var wire 1 z/ address_a [9] $end
$var wire 1 {/ address_a [8] $end
$var wire 1 |/ address_a [7] $end
$var wire 1 }/ address_a [6] $end
$var wire 1 ~/ address_a [5] $end
$var wire 1 !0 address_a [4] $end
$var wire 1 "0 address_a [3] $end
$var wire 1 #0 address_a [2] $end
$var wire 1 $0 address_a [1] $end
$var wire 1 %0 address_a [0] $end
$var wire 1 \0 address_b [0] $end
$var wire 1 &0 clock0 $end
$var wire 1 ]0 clock1 $end
$var wire 1 ^0 clocken0 $end
$var wire 1 _0 clocken1 $end
$var wire 1 `0 clocken2 $end
$var wire 1 a0 clocken3 $end
$var wire 1 b0 aclr0 $end
$var wire 1 c0 aclr1 $end
$var wire 1 d0 addressstall_a $end
$var wire 1 e0 addressstall_b $end
$var wire 1 f0 byteena_a [0] $end
$var wire 1 g0 byteena_b [0] $end
$var wire 1 70 q_a [15] $end
$var wire 1 80 q_a [14] $end
$var wire 1 90 q_a [13] $end
$var wire 1 :0 q_a [12] $end
$var wire 1 ;0 q_a [11] $end
$var wire 1 <0 q_a [10] $end
$var wire 1 =0 q_a [9] $end
$var wire 1 >0 q_a [8] $end
$var wire 1 ?0 q_a [7] $end
$var wire 1 @0 q_a [6] $end
$var wire 1 A0 q_a [5] $end
$var wire 1 B0 q_a [4] $end
$var wire 1 C0 q_a [3] $end
$var wire 1 D0 q_a [2] $end
$var wire 1 E0 q_a [1] $end
$var wire 1 F0 q_a [0] $end
$var wire 1 h0 q_b [0] $end
$var wire 1 i0 eccstatus [2] $end
$var wire 1 j0 eccstatus [1] $end
$var wire 1 k0 eccstatus [0] $end
$var wire 1 l0 i_data_reg_a [15] $end
$var wire 1 m0 i_data_reg_a [14] $end
$var wire 1 n0 i_data_reg_a [13] $end
$var wire 1 o0 i_data_reg_a [12] $end
$var wire 1 p0 i_data_reg_a [11] $end
$var wire 1 q0 i_data_reg_a [10] $end
$var wire 1 r0 i_data_reg_a [9] $end
$var wire 1 s0 i_data_reg_a [8] $end
$var wire 1 t0 i_data_reg_a [7] $end
$var wire 1 u0 i_data_reg_a [6] $end
$var wire 1 v0 i_data_reg_a [5] $end
$var wire 1 w0 i_data_reg_a [4] $end
$var wire 1 x0 i_data_reg_a [3] $end
$var wire 1 y0 i_data_reg_a [2] $end
$var wire 1 z0 i_data_reg_a [1] $end
$var wire 1 {0 i_data_reg_a [0] $end
$var wire 1 |0 i_data_reg_b [0] $end
$var wire 1 }0 i_q_reg_a [15] $end
$var wire 1 ~0 i_q_reg_a [14] $end
$var wire 1 !1 i_q_reg_a [13] $end
$var wire 1 "1 i_q_reg_a [12] $end
$var wire 1 #1 i_q_reg_a [11] $end
$var wire 1 $1 i_q_reg_a [10] $end
$var wire 1 %1 i_q_reg_a [9] $end
$var wire 1 &1 i_q_reg_a [8] $end
$var wire 1 '1 i_q_reg_a [7] $end
$var wire 1 (1 i_q_reg_a [6] $end
$var wire 1 )1 i_q_reg_a [5] $end
$var wire 1 *1 i_q_reg_a [4] $end
$var wire 1 +1 i_q_reg_a [3] $end
$var wire 1 ,1 i_q_reg_a [2] $end
$var wire 1 -1 i_q_reg_a [1] $end
$var wire 1 .1 i_q_reg_a [0] $end
$var wire 1 /1 i_q_tmp_a [15] $end
$var wire 1 01 i_q_tmp_a [14] $end
$var wire 1 11 i_q_tmp_a [13] $end
$var wire 1 21 i_q_tmp_a [12] $end
$var wire 1 31 i_q_tmp_a [11] $end
$var wire 1 41 i_q_tmp_a [10] $end
$var wire 1 51 i_q_tmp_a [9] $end
$var wire 1 61 i_q_tmp_a [8] $end
$var wire 1 71 i_q_tmp_a [7] $end
$var wire 1 81 i_q_tmp_a [6] $end
$var wire 1 91 i_q_tmp_a [5] $end
$var wire 1 :1 i_q_tmp_a [4] $end
$var wire 1 ;1 i_q_tmp_a [3] $end
$var wire 1 <1 i_q_tmp_a [2] $end
$var wire 1 =1 i_q_tmp_a [1] $end
$var wire 1 >1 i_q_tmp_a [0] $end
$var wire 1 ?1 i_q_tmp2_a [15] $end
$var wire 1 @1 i_q_tmp2_a [14] $end
$var wire 1 A1 i_q_tmp2_a [13] $end
$var wire 1 B1 i_q_tmp2_a [12] $end
$var wire 1 C1 i_q_tmp2_a [11] $end
$var wire 1 D1 i_q_tmp2_a [10] $end
$var wire 1 E1 i_q_tmp2_a [9] $end
$var wire 1 F1 i_q_tmp2_a [8] $end
$var wire 1 G1 i_q_tmp2_a [7] $end
$var wire 1 H1 i_q_tmp2_a [6] $end
$var wire 1 I1 i_q_tmp2_a [5] $end
$var wire 1 J1 i_q_tmp2_a [4] $end
$var wire 1 K1 i_q_tmp2_a [3] $end
$var wire 1 L1 i_q_tmp2_a [2] $end
$var wire 1 M1 i_q_tmp2_a [1] $end
$var wire 1 N1 i_q_tmp2_a [0] $end
$var wire 1 O1 i_q_tmp_wren_a [15] $end
$var wire 1 P1 i_q_tmp_wren_a [14] $end
$var wire 1 Q1 i_q_tmp_wren_a [13] $end
$var wire 1 R1 i_q_tmp_wren_a [12] $end
$var wire 1 S1 i_q_tmp_wren_a [11] $end
$var wire 1 T1 i_q_tmp_wren_a [10] $end
$var wire 1 U1 i_q_tmp_wren_a [9] $end
$var wire 1 V1 i_q_tmp_wren_a [8] $end
$var wire 1 W1 i_q_tmp_wren_a [7] $end
$var wire 1 X1 i_q_tmp_wren_a [6] $end
$var wire 1 Y1 i_q_tmp_wren_a [5] $end
$var wire 1 Z1 i_q_tmp_wren_a [4] $end
$var wire 1 [1 i_q_tmp_wren_a [3] $end
$var wire 1 \1 i_q_tmp_wren_a [2] $end
$var wire 1 ]1 i_q_tmp_wren_a [1] $end
$var wire 1 ^1 i_q_tmp_wren_a [0] $end
$var wire 1 _1 i_q_tmp2_wren_a [15] $end
$var wire 1 `1 i_q_tmp2_wren_a [14] $end
$var wire 1 a1 i_q_tmp2_wren_a [13] $end
$var wire 1 b1 i_q_tmp2_wren_a [12] $end
$var wire 1 c1 i_q_tmp2_wren_a [11] $end
$var wire 1 d1 i_q_tmp2_wren_a [10] $end
$var wire 1 e1 i_q_tmp2_wren_a [9] $end
$var wire 1 f1 i_q_tmp2_wren_a [8] $end
$var wire 1 g1 i_q_tmp2_wren_a [7] $end
$var wire 1 h1 i_q_tmp2_wren_a [6] $end
$var wire 1 i1 i_q_tmp2_wren_a [5] $end
$var wire 1 j1 i_q_tmp2_wren_a [4] $end
$var wire 1 k1 i_q_tmp2_wren_a [3] $end
$var wire 1 l1 i_q_tmp2_wren_a [2] $end
$var wire 1 m1 i_q_tmp2_wren_a [1] $end
$var wire 1 n1 i_q_tmp2_wren_a [0] $end
$var wire 1 o1 i_q_tmp_wren_b [0] $end
$var wire 1 p1 i_q_reg_b [0] $end
$var wire 1 q1 i_q_tmp_b [0] $end
$var wire 1 r1 i_q_tmp2_b [0] $end
$var wire 1 s1 i_q_output_latch [0] $end
$var wire 1 t1 i_q_ecc_reg_b [0] $end
$var wire 1 u1 i_q_ecc_tmp_b [0] $end
$var wire 1 v1 i_current_written_data_a [15] $end
$var wire 1 w1 i_current_written_data_a [14] $end
$var wire 1 x1 i_current_written_data_a [13] $end
$var wire 1 y1 i_current_written_data_a [12] $end
$var wire 1 z1 i_current_written_data_a [11] $end
$var wire 1 {1 i_current_written_data_a [10] $end
$var wire 1 |1 i_current_written_data_a [9] $end
$var wire 1 }1 i_current_written_data_a [8] $end
$var wire 1 ~1 i_current_written_data_a [7] $end
$var wire 1 !2 i_current_written_data_a [6] $end
$var wire 1 "2 i_current_written_data_a [5] $end
$var wire 1 #2 i_current_written_data_a [4] $end
$var wire 1 $2 i_current_written_data_a [3] $end
$var wire 1 %2 i_current_written_data_a [2] $end
$var wire 1 &2 i_current_written_data_a [1] $end
$var wire 1 '2 i_current_written_data_a [0] $end
$var wire 1 (2 i_original_data_a [15] $end
$var wire 1 )2 i_original_data_a [14] $end
$var wire 1 *2 i_original_data_a [13] $end
$var wire 1 +2 i_original_data_a [12] $end
$var wire 1 ,2 i_original_data_a [11] $end
$var wire 1 -2 i_original_data_a [10] $end
$var wire 1 .2 i_original_data_a [9] $end
$var wire 1 /2 i_original_data_a [8] $end
$var wire 1 02 i_original_data_a [7] $end
$var wire 1 12 i_original_data_a [6] $end
$var wire 1 22 i_original_data_a [5] $end
$var wire 1 32 i_original_data_a [4] $end
$var wire 1 42 i_original_data_a [3] $end
$var wire 1 52 i_original_data_a [2] $end
$var wire 1 62 i_original_data_a [1] $end
$var wire 1 72 i_original_data_a [0] $end
$var wire 1 82 i_original_data_b [0] $end
$var wire 1 92 i_byteena_mask_reg_a_x [15] $end
$var wire 1 :2 i_byteena_mask_reg_a_x [14] $end
$var wire 1 ;2 i_byteena_mask_reg_a_x [13] $end
$var wire 1 <2 i_byteena_mask_reg_a_x [12] $end
$var wire 1 =2 i_byteena_mask_reg_a_x [11] $end
$var wire 1 >2 i_byteena_mask_reg_a_x [10] $end
$var wire 1 ?2 i_byteena_mask_reg_a_x [9] $end
$var wire 1 @2 i_byteena_mask_reg_a_x [8] $end
$var wire 1 A2 i_byteena_mask_reg_a_x [7] $end
$var wire 1 B2 i_byteena_mask_reg_a_x [6] $end
$var wire 1 C2 i_byteena_mask_reg_a_x [5] $end
$var wire 1 D2 i_byteena_mask_reg_a_x [4] $end
$var wire 1 E2 i_byteena_mask_reg_a_x [3] $end
$var wire 1 F2 i_byteena_mask_reg_a_x [2] $end
$var wire 1 G2 i_byteena_mask_reg_a_x [1] $end
$var wire 1 H2 i_byteena_mask_reg_a_x [0] $end
$var wire 1 I2 i_byteena_mask_reg_b_x [0] $end
$var wire 1 J2 i_byteena_mask_reg_a [15] $end
$var wire 1 K2 i_byteena_mask_reg_a [14] $end
$var wire 1 L2 i_byteena_mask_reg_a [13] $end
$var wire 1 M2 i_byteena_mask_reg_a [12] $end
$var wire 1 N2 i_byteena_mask_reg_a [11] $end
$var wire 1 O2 i_byteena_mask_reg_a [10] $end
$var wire 1 P2 i_byteena_mask_reg_a [9] $end
$var wire 1 Q2 i_byteena_mask_reg_a [8] $end
$var wire 1 R2 i_byteena_mask_reg_a [7] $end
$var wire 1 S2 i_byteena_mask_reg_a [6] $end
$var wire 1 T2 i_byteena_mask_reg_a [5] $end
$var wire 1 U2 i_byteena_mask_reg_a [4] $end
$var wire 1 V2 i_byteena_mask_reg_a [3] $end
$var wire 1 W2 i_byteena_mask_reg_a [2] $end
$var wire 1 X2 i_byteena_mask_reg_a [1] $end
$var wire 1 Y2 i_byteena_mask_reg_a [0] $end
$var wire 1 Z2 i_byteena_mask_reg_b [0] $end
$var wire 1 [2 i_byteena_mask_reg_a_out [15] $end
$var wire 1 \2 i_byteena_mask_reg_a_out [14] $end
$var wire 1 ]2 i_byteena_mask_reg_a_out [13] $end
$var wire 1 ^2 i_byteena_mask_reg_a_out [12] $end
$var wire 1 _2 i_byteena_mask_reg_a_out [11] $end
$var wire 1 `2 i_byteena_mask_reg_a_out [10] $end
$var wire 1 a2 i_byteena_mask_reg_a_out [9] $end
$var wire 1 b2 i_byteena_mask_reg_a_out [8] $end
$var wire 1 c2 i_byteena_mask_reg_a_out [7] $end
$var wire 1 d2 i_byteena_mask_reg_a_out [6] $end
$var wire 1 e2 i_byteena_mask_reg_a_out [5] $end
$var wire 1 f2 i_byteena_mask_reg_a_out [4] $end
$var wire 1 g2 i_byteena_mask_reg_a_out [3] $end
$var wire 1 h2 i_byteena_mask_reg_a_out [2] $end
$var wire 1 i2 i_byteena_mask_reg_a_out [1] $end
$var wire 1 j2 i_byteena_mask_reg_a_out [0] $end
$var wire 1 k2 i_byteena_mask_reg_b_out [0] $end
$var wire 1 l2 i_byteena_mask_reg_a_out_b [15] $end
$var wire 1 m2 i_byteena_mask_reg_a_out_b [14] $end
$var wire 1 n2 i_byteena_mask_reg_a_out_b [13] $end
$var wire 1 o2 i_byteena_mask_reg_a_out_b [12] $end
$var wire 1 p2 i_byteena_mask_reg_a_out_b [11] $end
$var wire 1 q2 i_byteena_mask_reg_a_out_b [10] $end
$var wire 1 r2 i_byteena_mask_reg_a_out_b [9] $end
$var wire 1 s2 i_byteena_mask_reg_a_out_b [8] $end
$var wire 1 t2 i_byteena_mask_reg_a_out_b [7] $end
$var wire 1 u2 i_byteena_mask_reg_a_out_b [6] $end
$var wire 1 v2 i_byteena_mask_reg_a_out_b [5] $end
$var wire 1 w2 i_byteena_mask_reg_a_out_b [4] $end
$var wire 1 x2 i_byteena_mask_reg_a_out_b [3] $end
$var wire 1 y2 i_byteena_mask_reg_a_out_b [2] $end
$var wire 1 z2 i_byteena_mask_reg_a_out_b [1] $end
$var wire 1 {2 i_byteena_mask_reg_a_out_b [0] $end
$var wire 1 |2 i_byteena_mask_reg_b_out_a [0] $end
$var wire 1 }2 i_address_reg_a [13] $end
$var wire 1 ~2 i_address_reg_a [12] $end
$var wire 1 !3 i_address_reg_a [11] $end
$var wire 1 "3 i_address_reg_a [10] $end
$var wire 1 #3 i_address_reg_a [9] $end
$var wire 1 $3 i_address_reg_a [8] $end
$var wire 1 %3 i_address_reg_a [7] $end
$var wire 1 &3 i_address_reg_a [6] $end
$var wire 1 '3 i_address_reg_a [5] $end
$var wire 1 (3 i_address_reg_a [4] $end
$var wire 1 )3 i_address_reg_a [3] $end
$var wire 1 *3 i_address_reg_a [2] $end
$var wire 1 +3 i_address_reg_a [1] $end
$var wire 1 ,3 i_address_reg_a [0] $end
$var wire 1 -3 i_address_reg_b [0] $end
$var wire 1 .3 i_wren_reg_a $end
$var wire 1 /3 i_wren_reg_b $end
$var wire 1 03 i_rden_reg_a $end
$var wire 1 13 i_rden_reg_b $end
$var wire 1 23 i_read_flag_a $end
$var wire 1 33 i_read_flag_b $end
$var wire 1 43 i_reread_flag_a $end
$var wire 1 53 i_reread_flag_b $end
$var wire 1 63 i_reread_flag2_a $end
$var wire 1 73 i_reread_flag2_b $end
$var wire 1 83 i_write_flag_a $end
$var wire 1 93 i_write_flag_b $end
$var wire 1 :3 i_nmram_write_a $end
$var wire 1 ;3 i_nmram_write_b $end
$var wire 1 <3 i_indata_aclr_a $end
$var wire 1 =3 i_address_aclr_a $end
$var wire 1 >3 i_wrcontrol_aclr_a $end
$var wire 1 ?3 i_indata_aclr_b $end
$var wire 1 @3 i_address_aclr_b $end
$var wire 1 A3 i_wrcontrol_aclr_b $end
$var wire 1 B3 i_outdata_aclr_a $end
$var wire 1 C3 i_outdata_aclr_b $end
$var wire 1 D3 i_rdcontrol_aclr_b $end
$var wire 1 E3 i_byteena_aclr_a $end
$var wire 1 F3 i_byteena_aclr_b $end
$var wire 1 G3 good_to_go_a $end
$var wire 1 H3 good_to_go_b $end
$var wire 1 I3 i_core_clocken_a $end
$var wire 1 J3 i_core_clocken_b $end
$var wire 1 K3 i_core_clocken_b0 $end
$var wire 1 L3 i_core_clocken_b1 $end
$var wire 1 M3 i_inclocken0 $end
$var wire 1 N3 i_input_clocken_b $end
$var wire 1 O3 i_outdata_clken_b $end
$var wire 1 P3 i_outdata_clken_a $end
$var wire 1 Q3 i_outlatch_clken_a $end
$var wire 1 R3 i_outlatch_clken_b $end
$var wire 1 S3 i_core_clocken_a_reg $end
$var wire 1 T3 i_core_clocken_b_reg $end
$var wire 1 U3 default_val $end
$var wire 1 V3 i_data_zero_a [15] $end
$var wire 1 W3 i_data_zero_a [14] $end
$var wire 1 X3 i_data_zero_a [13] $end
$var wire 1 Y3 i_data_zero_a [12] $end
$var wire 1 Z3 i_data_zero_a [11] $end
$var wire 1 [3 i_data_zero_a [10] $end
$var wire 1 \3 i_data_zero_a [9] $end
$var wire 1 ]3 i_data_zero_a [8] $end
$var wire 1 ^3 i_data_zero_a [7] $end
$var wire 1 _3 i_data_zero_a [6] $end
$var wire 1 `3 i_data_zero_a [5] $end
$var wire 1 a3 i_data_zero_a [4] $end
$var wire 1 b3 i_data_zero_a [3] $end
$var wire 1 c3 i_data_zero_a [2] $end
$var wire 1 d3 i_data_zero_a [1] $end
$var wire 1 e3 i_data_zero_a [0] $end
$var wire 1 f3 i_data_zero_b [0] $end
$var wire 1 g3 i_data_ones_a [15] $end
$var wire 1 h3 i_data_ones_a [14] $end
$var wire 1 i3 i_data_ones_a [13] $end
$var wire 1 j3 i_data_ones_a [12] $end
$var wire 1 k3 i_data_ones_a [11] $end
$var wire 1 l3 i_data_ones_a [10] $end
$var wire 1 m3 i_data_ones_a [9] $end
$var wire 1 n3 i_data_ones_a [8] $end
$var wire 1 o3 i_data_ones_a [7] $end
$var wire 1 p3 i_data_ones_a [6] $end
$var wire 1 q3 i_data_ones_a [5] $end
$var wire 1 r3 i_data_ones_a [4] $end
$var wire 1 s3 i_data_ones_a [3] $end
$var wire 1 t3 i_data_ones_a [2] $end
$var wire 1 u3 i_data_ones_a [1] $end
$var wire 1 v3 i_data_ones_a [0] $end
$var wire 1 w3 i_data_ones_b [0] $end
$var wire 1 x3 same_clock_pulse0 $end
$var wire 1 y3 same_clock_pulse1 $end
$var wire 1 z3 i_force_reread_a $end
$var wire 1 {3 i_force_reread_a1 $end
$var wire 1 |3 i_force_reread_b $end
$var wire 1 }3 i_force_reread_b1 $end
$var wire 1 ~3 i_force_reread_signal_a $end
$var wire 1 !4 i_force_reread_signal_b $end
$var wire 1 "4 i_good_to_write_a $end
$var wire 1 #4 i_good_to_write_b $end

$scope begin IFG02 $end
$upscope $end

$scope begin IFG03a $end
$upscope $end

$scope begin IFG15 $end
$upscope $end

$scope begin IFG172a $end
$upscope $end

$scope begin IFG50a $end
$upscope $end

$scope begin IFG51a $end
$upscope $end

$scope begin IFG52b $end
$upscope $end

$scope begin IFCLR01 $end
$upscope $end

$scope begin IFG53 $end
$upscope $end

$scope begin IFG57 $end
$upscope $end
$upscope $end
$upscope $end

$scope module b2v_inst4 $end
$var wire 1 $4 address [13] $end
$var wire 1 %4 address [12] $end
$var wire 1 &4 address [11] $end
$var wire 1 '4 address [10] $end
$var wire 1 (4 address [9] $end
$var wire 1 )4 address [8] $end
$var wire 1 *4 address [7] $end
$var wire 1 +4 address [6] $end
$var wire 1 ,4 address [5] $end
$var wire 1 -4 address [4] $end
$var wire 1 .4 address [3] $end
$var wire 1 /4 address [2] $end
$var wire 1 04 address [1] $end
$var wire 1 14 address [0] $end
$var wire 1 24 clock $end
$var wire 1 34 q [15] $end
$var wire 1 44 q [14] $end
$var wire 1 54 q [13] $end
$var wire 1 64 q [12] $end
$var wire 1 74 q [11] $end
$var wire 1 84 q [10] $end
$var wire 1 94 q [9] $end
$var wire 1 :4 q [8] $end
$var wire 1 ;4 q [7] $end
$var wire 1 <4 q [6] $end
$var wire 1 =4 q [5] $end
$var wire 1 >4 q [4] $end
$var wire 1 ?4 q [3] $end
$var wire 1 @4 q [2] $end
$var wire 1 A4 q [1] $end
$var wire 1 B4 q [0] $end
$var wire 1 C4 sub_wire0 [15] $end
$var wire 1 D4 sub_wire0 [14] $end
$var wire 1 E4 sub_wire0 [13] $end
$var wire 1 F4 sub_wire0 [12] $end
$var wire 1 G4 sub_wire0 [11] $end
$var wire 1 H4 sub_wire0 [10] $end
$var wire 1 I4 sub_wire0 [9] $end
$var wire 1 J4 sub_wire0 [8] $end
$var wire 1 K4 sub_wire0 [7] $end
$var wire 1 L4 sub_wire0 [6] $end
$var wire 1 M4 sub_wire0 [5] $end
$var wire 1 N4 sub_wire0 [4] $end
$var wire 1 O4 sub_wire0 [3] $end
$var wire 1 P4 sub_wire0 [2] $end
$var wire 1 Q4 sub_wire0 [1] $end
$var wire 1 R4 sub_wire0 [0] $end

$scope module altsyncram_component $end
$var wire 1 S4 wren_a $end
$var wire 1 T4 wren_b $end
$var wire 1 U4 rden_a $end
$var wire 1 V4 rden_b $end
$var wire 1 W4 data_a [15] $end
$var wire 1 X4 data_a [14] $end
$var wire 1 Y4 data_a [13] $end
$var wire 1 Z4 data_a [12] $end
$var wire 1 [4 data_a [11] $end
$var wire 1 \4 data_a [10] $end
$var wire 1 ]4 data_a [9] $end
$var wire 1 ^4 data_a [8] $end
$var wire 1 _4 data_a [7] $end
$var wire 1 `4 data_a [6] $end
$var wire 1 a4 data_a [5] $end
$var wire 1 b4 data_a [4] $end
$var wire 1 c4 data_a [3] $end
$var wire 1 d4 data_a [2] $end
$var wire 1 e4 data_a [1] $end
$var wire 1 f4 data_a [0] $end
$var wire 1 g4 data_b [0] $end
$var wire 1 $4 address_a [13] $end
$var wire 1 %4 address_a [12] $end
$var wire 1 &4 address_a [11] $end
$var wire 1 '4 address_a [10] $end
$var wire 1 (4 address_a [9] $end
$var wire 1 )4 address_a [8] $end
$var wire 1 *4 address_a [7] $end
$var wire 1 +4 address_a [6] $end
$var wire 1 ,4 address_a [5] $end
$var wire 1 -4 address_a [4] $end
$var wire 1 .4 address_a [3] $end
$var wire 1 /4 address_a [2] $end
$var wire 1 04 address_a [1] $end
$var wire 1 14 address_a [0] $end
$var wire 1 h4 address_b [0] $end
$var wire 1 24 clock0 $end
$var wire 1 i4 clock1 $end
$var wire 1 j4 clocken0 $end
$var wire 1 k4 clocken1 $end
$var wire 1 l4 clocken2 $end
$var wire 1 m4 clocken3 $end
$var wire 1 n4 aclr0 $end
$var wire 1 o4 aclr1 $end
$var wire 1 p4 addressstall_a $end
$var wire 1 q4 addressstall_b $end
$var wire 1 r4 byteena_a [0] $end
$var wire 1 s4 byteena_b [0] $end
$var wire 1 C4 q_a [15] $end
$var wire 1 D4 q_a [14] $end
$var wire 1 E4 q_a [13] $end
$var wire 1 F4 q_a [12] $end
$var wire 1 G4 q_a [11] $end
$var wire 1 H4 q_a [10] $end
$var wire 1 I4 q_a [9] $end
$var wire 1 J4 q_a [8] $end
$var wire 1 K4 q_a [7] $end
$var wire 1 L4 q_a [6] $end
$var wire 1 M4 q_a [5] $end
$var wire 1 N4 q_a [4] $end
$var wire 1 O4 q_a [3] $end
$var wire 1 P4 q_a [2] $end
$var wire 1 Q4 q_a [1] $end
$var wire 1 R4 q_a [0] $end
$var wire 1 t4 q_b [0] $end
$var wire 1 u4 eccstatus [2] $end
$var wire 1 v4 eccstatus [1] $end
$var wire 1 w4 eccstatus [0] $end
$var wire 1 x4 i_data_reg_a [15] $end
$var wire 1 y4 i_data_reg_a [14] $end
$var wire 1 z4 i_data_reg_a [13] $end
$var wire 1 {4 i_data_reg_a [12] $end
$var wire 1 |4 i_data_reg_a [11] $end
$var wire 1 }4 i_data_reg_a [10] $end
$var wire 1 ~4 i_data_reg_a [9] $end
$var wire 1 !5 i_data_reg_a [8] $end
$var wire 1 "5 i_data_reg_a [7] $end
$var wire 1 #5 i_data_reg_a [6] $end
$var wire 1 $5 i_data_reg_a [5] $end
$var wire 1 %5 i_data_reg_a [4] $end
$var wire 1 &5 i_data_reg_a [3] $end
$var wire 1 '5 i_data_reg_a [2] $end
$var wire 1 (5 i_data_reg_a [1] $end
$var wire 1 )5 i_data_reg_a [0] $end
$var wire 1 *5 i_data_reg_b [0] $end
$var wire 1 +5 i_q_reg_a [15] $end
$var wire 1 ,5 i_q_reg_a [14] $end
$var wire 1 -5 i_q_reg_a [13] $end
$var wire 1 .5 i_q_reg_a [12] $end
$var wire 1 /5 i_q_reg_a [11] $end
$var wire 1 05 i_q_reg_a [10] $end
$var wire 1 15 i_q_reg_a [9] $end
$var wire 1 25 i_q_reg_a [8] $end
$var wire 1 35 i_q_reg_a [7] $end
$var wire 1 45 i_q_reg_a [6] $end
$var wire 1 55 i_q_reg_a [5] $end
$var wire 1 65 i_q_reg_a [4] $end
$var wire 1 75 i_q_reg_a [3] $end
$var wire 1 85 i_q_reg_a [2] $end
$var wire 1 95 i_q_reg_a [1] $end
$var wire 1 :5 i_q_reg_a [0] $end
$var wire 1 ;5 i_q_tmp_a [15] $end
$var wire 1 <5 i_q_tmp_a [14] $end
$var wire 1 =5 i_q_tmp_a [13] $end
$var wire 1 >5 i_q_tmp_a [12] $end
$var wire 1 ?5 i_q_tmp_a [11] $end
$var wire 1 @5 i_q_tmp_a [10] $end
$var wire 1 A5 i_q_tmp_a [9] $end
$var wire 1 B5 i_q_tmp_a [8] $end
$var wire 1 C5 i_q_tmp_a [7] $end
$var wire 1 D5 i_q_tmp_a [6] $end
$var wire 1 E5 i_q_tmp_a [5] $end
$var wire 1 F5 i_q_tmp_a [4] $end
$var wire 1 G5 i_q_tmp_a [3] $end
$var wire 1 H5 i_q_tmp_a [2] $end
$var wire 1 I5 i_q_tmp_a [1] $end
$var wire 1 J5 i_q_tmp_a [0] $end
$var wire 1 K5 i_q_tmp2_a [15] $end
$var wire 1 L5 i_q_tmp2_a [14] $end
$var wire 1 M5 i_q_tmp2_a [13] $end
$var wire 1 N5 i_q_tmp2_a [12] $end
$var wire 1 O5 i_q_tmp2_a [11] $end
$var wire 1 P5 i_q_tmp2_a [10] $end
$var wire 1 Q5 i_q_tmp2_a [9] $end
$var wire 1 R5 i_q_tmp2_a [8] $end
$var wire 1 S5 i_q_tmp2_a [7] $end
$var wire 1 T5 i_q_tmp2_a [6] $end
$var wire 1 U5 i_q_tmp2_a [5] $end
$var wire 1 V5 i_q_tmp2_a [4] $end
$var wire 1 W5 i_q_tmp2_a [3] $end
$var wire 1 X5 i_q_tmp2_a [2] $end
$var wire 1 Y5 i_q_tmp2_a [1] $end
$var wire 1 Z5 i_q_tmp2_a [0] $end
$var wire 1 [5 i_q_tmp_wren_a [15] $end
$var wire 1 \5 i_q_tmp_wren_a [14] $end
$var wire 1 ]5 i_q_tmp_wren_a [13] $end
$var wire 1 ^5 i_q_tmp_wren_a [12] $end
$var wire 1 _5 i_q_tmp_wren_a [11] $end
$var wire 1 `5 i_q_tmp_wren_a [10] $end
$var wire 1 a5 i_q_tmp_wren_a [9] $end
$var wire 1 b5 i_q_tmp_wren_a [8] $end
$var wire 1 c5 i_q_tmp_wren_a [7] $end
$var wire 1 d5 i_q_tmp_wren_a [6] $end
$var wire 1 e5 i_q_tmp_wren_a [5] $end
$var wire 1 f5 i_q_tmp_wren_a [4] $end
$var wire 1 g5 i_q_tmp_wren_a [3] $end
$var wire 1 h5 i_q_tmp_wren_a [2] $end
$var wire 1 i5 i_q_tmp_wren_a [1] $end
$var wire 1 j5 i_q_tmp_wren_a [0] $end
$var wire 1 k5 i_q_tmp2_wren_a [15] $end
$var wire 1 l5 i_q_tmp2_wren_a [14] $end
$var wire 1 m5 i_q_tmp2_wren_a [13] $end
$var wire 1 n5 i_q_tmp2_wren_a [12] $end
$var wire 1 o5 i_q_tmp2_wren_a [11] $end
$var wire 1 p5 i_q_tmp2_wren_a [10] $end
$var wire 1 q5 i_q_tmp2_wren_a [9] $end
$var wire 1 r5 i_q_tmp2_wren_a [8] $end
$var wire 1 s5 i_q_tmp2_wren_a [7] $end
$var wire 1 t5 i_q_tmp2_wren_a [6] $end
$var wire 1 u5 i_q_tmp2_wren_a [5] $end
$var wire 1 v5 i_q_tmp2_wren_a [4] $end
$var wire 1 w5 i_q_tmp2_wren_a [3] $end
$var wire 1 x5 i_q_tmp2_wren_a [2] $end
$var wire 1 y5 i_q_tmp2_wren_a [1] $end
$var wire 1 z5 i_q_tmp2_wren_a [0] $end
$var wire 1 {5 i_q_tmp_wren_b [0] $end
$var wire 1 |5 i_q_reg_b [0] $end
$var wire 1 }5 i_q_tmp_b [0] $end
$var wire 1 ~5 i_q_tmp2_b [0] $end
$var wire 1 !6 i_q_output_latch [0] $end
$var wire 1 "6 i_q_ecc_reg_b [0] $end
$var wire 1 #6 i_q_ecc_tmp_b [0] $end
$var wire 1 $6 i_current_written_data_a [15] $end
$var wire 1 %6 i_current_written_data_a [14] $end
$var wire 1 &6 i_current_written_data_a [13] $end
$var wire 1 '6 i_current_written_data_a [12] $end
$var wire 1 (6 i_current_written_data_a [11] $end
$var wire 1 )6 i_current_written_data_a [10] $end
$var wire 1 *6 i_current_written_data_a [9] $end
$var wire 1 +6 i_current_written_data_a [8] $end
$var wire 1 ,6 i_current_written_data_a [7] $end
$var wire 1 -6 i_current_written_data_a [6] $end
$var wire 1 .6 i_current_written_data_a [5] $end
$var wire 1 /6 i_current_written_data_a [4] $end
$var wire 1 06 i_current_written_data_a [3] $end
$var wire 1 16 i_current_written_data_a [2] $end
$var wire 1 26 i_current_written_data_a [1] $end
$var wire 1 36 i_current_written_data_a [0] $end
$var wire 1 46 i_original_data_a [15] $end
$var wire 1 56 i_original_data_a [14] $end
$var wire 1 66 i_original_data_a [13] $end
$var wire 1 76 i_original_data_a [12] $end
$var wire 1 86 i_original_data_a [11] $end
$var wire 1 96 i_original_data_a [10] $end
$var wire 1 :6 i_original_data_a [9] $end
$var wire 1 ;6 i_original_data_a [8] $end
$var wire 1 <6 i_original_data_a [7] $end
$var wire 1 =6 i_original_data_a [6] $end
$var wire 1 >6 i_original_data_a [5] $end
$var wire 1 ?6 i_original_data_a [4] $end
$var wire 1 @6 i_original_data_a [3] $end
$var wire 1 A6 i_original_data_a [2] $end
$var wire 1 B6 i_original_data_a [1] $end
$var wire 1 C6 i_original_data_a [0] $end
$var wire 1 D6 i_original_data_b [0] $end
$var wire 1 E6 i_byteena_mask_reg_a_x [15] $end
$var wire 1 F6 i_byteena_mask_reg_a_x [14] $end
$var wire 1 G6 i_byteena_mask_reg_a_x [13] $end
$var wire 1 H6 i_byteena_mask_reg_a_x [12] $end
$var wire 1 I6 i_byteena_mask_reg_a_x [11] $end
$var wire 1 J6 i_byteena_mask_reg_a_x [10] $end
$var wire 1 K6 i_byteena_mask_reg_a_x [9] $end
$var wire 1 L6 i_byteena_mask_reg_a_x [8] $end
$var wire 1 M6 i_byteena_mask_reg_a_x [7] $end
$var wire 1 N6 i_byteena_mask_reg_a_x [6] $end
$var wire 1 O6 i_byteena_mask_reg_a_x [5] $end
$var wire 1 P6 i_byteena_mask_reg_a_x [4] $end
$var wire 1 Q6 i_byteena_mask_reg_a_x [3] $end
$var wire 1 R6 i_byteena_mask_reg_a_x [2] $end
$var wire 1 S6 i_byteena_mask_reg_a_x [1] $end
$var wire 1 T6 i_byteena_mask_reg_a_x [0] $end
$var wire 1 U6 i_byteena_mask_reg_b_x [0] $end
$var wire 1 V6 i_byteena_mask_reg_a [15] $end
$var wire 1 W6 i_byteena_mask_reg_a [14] $end
$var wire 1 X6 i_byteena_mask_reg_a [13] $end
$var wire 1 Y6 i_byteena_mask_reg_a [12] $end
$var wire 1 Z6 i_byteena_mask_reg_a [11] $end
$var wire 1 [6 i_byteena_mask_reg_a [10] $end
$var wire 1 \6 i_byteena_mask_reg_a [9] $end
$var wire 1 ]6 i_byteena_mask_reg_a [8] $end
$var wire 1 ^6 i_byteena_mask_reg_a [7] $end
$var wire 1 _6 i_byteena_mask_reg_a [6] $end
$var wire 1 `6 i_byteena_mask_reg_a [5] $end
$var wire 1 a6 i_byteena_mask_reg_a [4] $end
$var wire 1 b6 i_byteena_mask_reg_a [3] $end
$var wire 1 c6 i_byteena_mask_reg_a [2] $end
$var wire 1 d6 i_byteena_mask_reg_a [1] $end
$var wire 1 e6 i_byteena_mask_reg_a [0] $end
$var wire 1 f6 i_byteena_mask_reg_b [0] $end
$var wire 1 g6 i_byteena_mask_reg_a_out [15] $end
$var wire 1 h6 i_byteena_mask_reg_a_out [14] $end
$var wire 1 i6 i_byteena_mask_reg_a_out [13] $end
$var wire 1 j6 i_byteena_mask_reg_a_out [12] $end
$var wire 1 k6 i_byteena_mask_reg_a_out [11] $end
$var wire 1 l6 i_byteena_mask_reg_a_out [10] $end
$var wire 1 m6 i_byteena_mask_reg_a_out [9] $end
$var wire 1 n6 i_byteena_mask_reg_a_out [8] $end
$var wire 1 o6 i_byteena_mask_reg_a_out [7] $end
$var wire 1 p6 i_byteena_mask_reg_a_out [6] $end
$var wire 1 q6 i_byteena_mask_reg_a_out [5] $end
$var wire 1 r6 i_byteena_mask_reg_a_out [4] $end
$var wire 1 s6 i_byteena_mask_reg_a_out [3] $end
$var wire 1 t6 i_byteena_mask_reg_a_out [2] $end
$var wire 1 u6 i_byteena_mask_reg_a_out [1] $end
$var wire 1 v6 i_byteena_mask_reg_a_out [0] $end
$var wire 1 w6 i_byteena_mask_reg_b_out [0] $end
$var wire 1 x6 i_byteena_mask_reg_a_out_b [15] $end
$var wire 1 y6 i_byteena_mask_reg_a_out_b [14] $end
$var wire 1 z6 i_byteena_mask_reg_a_out_b [13] $end
$var wire 1 {6 i_byteena_mask_reg_a_out_b [12] $end
$var wire 1 |6 i_byteena_mask_reg_a_out_b [11] $end
$var wire 1 }6 i_byteena_mask_reg_a_out_b [10] $end
$var wire 1 ~6 i_byteena_mask_reg_a_out_b [9] $end
$var wire 1 !7 i_byteena_mask_reg_a_out_b [8] $end
$var wire 1 "7 i_byteena_mask_reg_a_out_b [7] $end
$var wire 1 #7 i_byteena_mask_reg_a_out_b [6] $end
$var wire 1 $7 i_byteena_mask_reg_a_out_b [5] $end
$var wire 1 %7 i_byteena_mask_reg_a_out_b [4] $end
$var wire 1 &7 i_byteena_mask_reg_a_out_b [3] $end
$var wire 1 '7 i_byteena_mask_reg_a_out_b [2] $end
$var wire 1 (7 i_byteena_mask_reg_a_out_b [1] $end
$var wire 1 )7 i_byteena_mask_reg_a_out_b [0] $end
$var wire 1 *7 i_byteena_mask_reg_b_out_a [0] $end
$var wire 1 +7 i_address_reg_a [13] $end
$var wire 1 ,7 i_address_reg_a [12] $end
$var wire 1 -7 i_address_reg_a [11] $end
$var wire 1 .7 i_address_reg_a [10] $end
$var wire 1 /7 i_address_reg_a [9] $end
$var wire 1 07 i_address_reg_a [8] $end
$var wire 1 17 i_address_reg_a [7] $end
$var wire 1 27 i_address_reg_a [6] $end
$var wire 1 37 i_address_reg_a [5] $end
$var wire 1 47 i_address_reg_a [4] $end
$var wire 1 57 i_address_reg_a [3] $end
$var wire 1 67 i_address_reg_a [2] $end
$var wire 1 77 i_address_reg_a [1] $end
$var wire 1 87 i_address_reg_a [0] $end
$var wire 1 97 i_address_reg_b [0] $end
$var wire 1 :7 i_wren_reg_a $end
$var wire 1 ;7 i_wren_reg_b $end
$var wire 1 <7 i_rden_reg_a $end
$var wire 1 =7 i_rden_reg_b $end
$var wire 1 >7 i_read_flag_a $end
$var wire 1 ?7 i_read_flag_b $end
$var wire 1 @7 i_reread_flag_a $end
$var wire 1 A7 i_reread_flag_b $end
$var wire 1 B7 i_reread_flag2_a $end
$var wire 1 C7 i_reread_flag2_b $end
$var wire 1 D7 i_write_flag_a $end
$var wire 1 E7 i_write_flag_b $end
$var wire 1 F7 i_nmram_write_a $end
$var wire 1 G7 i_nmram_write_b $end
$var wire 1 H7 i_indata_aclr_a $end
$var wire 1 I7 i_address_aclr_a $end
$var wire 1 J7 i_wrcontrol_aclr_a $end
$var wire 1 K7 i_indata_aclr_b $end
$var wire 1 L7 i_address_aclr_b $end
$var wire 1 M7 i_wrcontrol_aclr_b $end
$var wire 1 N7 i_outdata_aclr_a $end
$var wire 1 O7 i_outdata_aclr_b $end
$var wire 1 P7 i_rdcontrol_aclr_b $end
$var wire 1 Q7 i_byteena_aclr_a $end
$var wire 1 R7 i_byteena_aclr_b $end
$var wire 1 S7 good_to_go_a $end
$var wire 1 T7 good_to_go_b $end
$var wire 1 U7 i_core_clocken_a $end
$var wire 1 V7 i_core_clocken_b $end
$var wire 1 W7 i_core_clocken_b0 $end
$var wire 1 X7 i_core_clocken_b1 $end
$var wire 1 Y7 i_inclocken0 $end
$var wire 1 Z7 i_input_clocken_b $end
$var wire 1 [7 i_outdata_clken_b $end
$var wire 1 \7 i_outdata_clken_a $end
$var wire 1 ]7 i_outlatch_clken_a $end
$var wire 1 ^7 i_outlatch_clken_b $end
$var wire 1 _7 i_core_clocken_a_reg $end
$var wire 1 `7 i_core_clocken_b_reg $end
$var wire 1 a7 default_val $end
$var wire 1 b7 i_data_zero_a [15] $end
$var wire 1 c7 i_data_zero_a [14] $end
$var wire 1 d7 i_data_zero_a [13] $end
$var wire 1 e7 i_data_zero_a [12] $end
$var wire 1 f7 i_data_zero_a [11] $end
$var wire 1 g7 i_data_zero_a [10] $end
$var wire 1 h7 i_data_zero_a [9] $end
$var wire 1 i7 i_data_zero_a [8] $end
$var wire 1 j7 i_data_zero_a [7] $end
$var wire 1 k7 i_data_zero_a [6] $end
$var wire 1 l7 i_data_zero_a [5] $end
$var wire 1 m7 i_data_zero_a [4] $end
$var wire 1 n7 i_data_zero_a [3] $end
$var wire 1 o7 i_data_zero_a [2] $end
$var wire 1 p7 i_data_zero_a [1] $end
$var wire 1 q7 i_data_zero_a [0] $end
$var wire 1 r7 i_data_zero_b [0] $end
$var wire 1 s7 i_data_ones_a [15] $end
$var wire 1 t7 i_data_ones_a [14] $end
$var wire 1 u7 i_data_ones_a [13] $end
$var wire 1 v7 i_data_ones_a [12] $end
$var wire 1 w7 i_data_ones_a [11] $end
$var wire 1 x7 i_data_ones_a [10] $end
$var wire 1 y7 i_data_ones_a [9] $end
$var wire 1 z7 i_data_ones_a [8] $end
$var wire 1 {7 i_data_ones_a [7] $end
$var wire 1 |7 i_data_ones_a [6] $end
$var wire 1 }7 i_data_ones_a [5] $end
$var wire 1 ~7 i_data_ones_a [4] $end
$var wire 1 !8 i_data_ones_a [3] $end
$var wire 1 "8 i_data_ones_a [2] $end
$var wire 1 #8 i_data_ones_a [1] $end
$var wire 1 $8 i_data_ones_a [0] $end
$var wire 1 %8 i_data_ones_b [0] $end
$var wire 1 &8 same_clock_pulse0 $end
$var wire 1 '8 same_clock_pulse1 $end
$var wire 1 (8 i_force_reread_a $end
$var wire 1 )8 i_force_reread_a1 $end
$var wire 1 *8 i_force_reread_b $end
$var wire 1 +8 i_force_reread_b1 $end
$var wire 1 ,8 i_force_reread_signal_a $end
$var wire 1 -8 i_force_reread_signal_b $end
$var wire 1 .8 i_good_to_write_a $end
$var wire 1 /8 i_good_to_write_b $end

$scope begin IFG02 $end
$upscope $end

$scope begin IFG03a $end
$upscope $end

$scope begin IFG15 $end
$upscope $end

$scope begin IFG172a $end
$upscope $end

$scope begin IFG50a $end
$upscope $end

$scope begin IFG51a $end
$upscope $end

$scope begin IFG52b $end
$upscope $end

$scope begin IFCLR01 $end
$upscope $end

$scope begin IFG53 $end
$upscope $end

$scope begin IFG57 $end
$upscope $end
$upscope $end
$upscope $end

$scope module b2v_inst5 $end
$var wire 1 08 address [13] $end
$var wire 1 18 address [12] $end
$var wire 1 28 address [11] $end
$var wire 1 38 address [10] $end
$var wire 1 48 address [9] $end
$var wire 1 58 address [8] $end
$var wire 1 68 address [7] $end
$var wire 1 78 address [6] $end
$var wire 1 88 address [5] $end
$var wire 1 98 address [4] $end
$var wire 1 :8 address [3] $end
$var wire 1 ;8 address [2] $end
$var wire 1 <8 address [1] $end
$var wire 1 =8 address [0] $end
$var wire 1 >8 clock $end
$var wire 1 ?8 q [15] $end
$var wire 1 @8 q [14] $end
$var wire 1 A8 q [13] $end
$var wire 1 B8 q [12] $end
$var wire 1 C8 q [11] $end
$var wire 1 D8 q [10] $end
$var wire 1 E8 q [9] $end
$var wire 1 F8 q [8] $end
$var wire 1 G8 q [7] $end
$var wire 1 H8 q [6] $end
$var wire 1 I8 q [5] $end
$var wire 1 J8 q [4] $end
$var wire 1 K8 q [3] $end
$var wire 1 L8 q [2] $end
$var wire 1 M8 q [1] $end
$var wire 1 N8 q [0] $end
$var wire 1 O8 sub_wire0 [15] $end
$var wire 1 P8 sub_wire0 [14] $end
$var wire 1 Q8 sub_wire0 [13] $end
$var wire 1 R8 sub_wire0 [12] $end
$var wire 1 S8 sub_wire0 [11] $end
$var wire 1 T8 sub_wire0 [10] $end
$var wire 1 U8 sub_wire0 [9] $end
$var wire 1 V8 sub_wire0 [8] $end
$var wire 1 W8 sub_wire0 [7] $end
$var wire 1 X8 sub_wire0 [6] $end
$var wire 1 Y8 sub_wire0 [5] $end
$var wire 1 Z8 sub_wire0 [4] $end
$var wire 1 [8 sub_wire0 [3] $end
$var wire 1 \8 sub_wire0 [2] $end
$var wire 1 ]8 sub_wire0 [1] $end
$var wire 1 ^8 sub_wire0 [0] $end

$scope module altsyncram_component $end
$var wire 1 _8 wren_a $end
$var wire 1 `8 wren_b $end
$var wire 1 a8 rden_a $end
$var wire 1 b8 rden_b $end
$var wire 1 c8 data_a [15] $end
$var wire 1 d8 data_a [14] $end
$var wire 1 e8 data_a [13] $end
$var wire 1 f8 data_a [12] $end
$var wire 1 g8 data_a [11] $end
$var wire 1 h8 data_a [10] $end
$var wire 1 i8 data_a [9] $end
$var wire 1 j8 data_a [8] $end
$var wire 1 k8 data_a [7] $end
$var wire 1 l8 data_a [6] $end
$var wire 1 m8 data_a [5] $end
$var wire 1 n8 data_a [4] $end
$var wire 1 o8 data_a [3] $end
$var wire 1 p8 data_a [2] $end
$var wire 1 q8 data_a [1] $end
$var wire 1 r8 data_a [0] $end
$var wire 1 s8 data_b [0] $end
$var wire 1 08 address_a [13] $end
$var wire 1 18 address_a [12] $end
$var wire 1 28 address_a [11] $end
$var wire 1 38 address_a [10] $end
$var wire 1 48 address_a [9] $end
$var wire 1 58 address_a [8] $end
$var wire 1 68 address_a [7] $end
$var wire 1 78 address_a [6] $end
$var wire 1 88 address_a [5] $end
$var wire 1 98 address_a [4] $end
$var wire 1 :8 address_a [3] $end
$var wire 1 ;8 address_a [2] $end
$var wire 1 <8 address_a [1] $end
$var wire 1 =8 address_a [0] $end
$var wire 1 t8 address_b [0] $end
$var wire 1 >8 clock0 $end
$var wire 1 u8 clock1 $end
$var wire 1 v8 clocken0 $end
$var wire 1 w8 clocken1 $end
$var wire 1 x8 clocken2 $end
$var wire 1 y8 clocken3 $end
$var wire 1 z8 aclr0 $end
$var wire 1 {8 aclr1 $end
$var wire 1 |8 addressstall_a $end
$var wire 1 }8 addressstall_b $end
$var wire 1 ~8 byteena_a [0] $end
$var wire 1 !9 byteena_b [0] $end
$var wire 1 O8 q_a [15] $end
$var wire 1 P8 q_a [14] $end
$var wire 1 Q8 q_a [13] $end
$var wire 1 R8 q_a [12] $end
$var wire 1 S8 q_a [11] $end
$var wire 1 T8 q_a [10] $end
$var wire 1 U8 q_a [9] $end
$var wire 1 V8 q_a [8] $end
$var wire 1 W8 q_a [7] $end
$var wire 1 X8 q_a [6] $end
$var wire 1 Y8 q_a [5] $end
$var wire 1 Z8 q_a [4] $end
$var wire 1 [8 q_a [3] $end
$var wire 1 \8 q_a [2] $end
$var wire 1 ]8 q_a [1] $end
$var wire 1 ^8 q_a [0] $end
$var wire 1 "9 q_b [0] $end
$var wire 1 #9 eccstatus [2] $end
$var wire 1 $9 eccstatus [1] $end
$var wire 1 %9 eccstatus [0] $end
$var wire 1 &9 i_data_reg_a [15] $end
$var wire 1 '9 i_data_reg_a [14] $end
$var wire 1 (9 i_data_reg_a [13] $end
$var wire 1 )9 i_data_reg_a [12] $end
$var wire 1 *9 i_data_reg_a [11] $end
$var wire 1 +9 i_data_reg_a [10] $end
$var wire 1 ,9 i_data_reg_a [9] $end
$var wire 1 -9 i_data_reg_a [8] $end
$var wire 1 .9 i_data_reg_a [7] $end
$var wire 1 /9 i_data_reg_a [6] $end
$var wire 1 09 i_data_reg_a [5] $end
$var wire 1 19 i_data_reg_a [4] $end
$var wire 1 29 i_data_reg_a [3] $end
$var wire 1 39 i_data_reg_a [2] $end
$var wire 1 49 i_data_reg_a [1] $end
$var wire 1 59 i_data_reg_a [0] $end
$var wire 1 69 i_data_reg_b [0] $end
$var wire 1 79 i_q_reg_a [15] $end
$var wire 1 89 i_q_reg_a [14] $end
$var wire 1 99 i_q_reg_a [13] $end
$var wire 1 :9 i_q_reg_a [12] $end
$var wire 1 ;9 i_q_reg_a [11] $end
$var wire 1 <9 i_q_reg_a [10] $end
$var wire 1 =9 i_q_reg_a [9] $end
$var wire 1 >9 i_q_reg_a [8] $end
$var wire 1 ?9 i_q_reg_a [7] $end
$var wire 1 @9 i_q_reg_a [6] $end
$var wire 1 A9 i_q_reg_a [5] $end
$var wire 1 B9 i_q_reg_a [4] $end
$var wire 1 C9 i_q_reg_a [3] $end
$var wire 1 D9 i_q_reg_a [2] $end
$var wire 1 E9 i_q_reg_a [1] $end
$var wire 1 F9 i_q_reg_a [0] $end
$var wire 1 G9 i_q_tmp_a [15] $end
$var wire 1 H9 i_q_tmp_a [14] $end
$var wire 1 I9 i_q_tmp_a [13] $end
$var wire 1 J9 i_q_tmp_a [12] $end
$var wire 1 K9 i_q_tmp_a [11] $end
$var wire 1 L9 i_q_tmp_a [10] $end
$var wire 1 M9 i_q_tmp_a [9] $end
$var wire 1 N9 i_q_tmp_a [8] $end
$var wire 1 O9 i_q_tmp_a [7] $end
$var wire 1 P9 i_q_tmp_a [6] $end
$var wire 1 Q9 i_q_tmp_a [5] $end
$var wire 1 R9 i_q_tmp_a [4] $end
$var wire 1 S9 i_q_tmp_a [3] $end
$var wire 1 T9 i_q_tmp_a [2] $end
$var wire 1 U9 i_q_tmp_a [1] $end
$var wire 1 V9 i_q_tmp_a [0] $end
$var wire 1 W9 i_q_tmp2_a [15] $end
$var wire 1 X9 i_q_tmp2_a [14] $end
$var wire 1 Y9 i_q_tmp2_a [13] $end
$var wire 1 Z9 i_q_tmp2_a [12] $end
$var wire 1 [9 i_q_tmp2_a [11] $end
$var wire 1 \9 i_q_tmp2_a [10] $end
$var wire 1 ]9 i_q_tmp2_a [9] $end
$var wire 1 ^9 i_q_tmp2_a [8] $end
$var wire 1 _9 i_q_tmp2_a [7] $end
$var wire 1 `9 i_q_tmp2_a [6] $end
$var wire 1 a9 i_q_tmp2_a [5] $end
$var wire 1 b9 i_q_tmp2_a [4] $end
$var wire 1 c9 i_q_tmp2_a [3] $end
$var wire 1 d9 i_q_tmp2_a [2] $end
$var wire 1 e9 i_q_tmp2_a [1] $end
$var wire 1 f9 i_q_tmp2_a [0] $end
$var wire 1 g9 i_q_tmp_wren_a [15] $end
$var wire 1 h9 i_q_tmp_wren_a [14] $end
$var wire 1 i9 i_q_tmp_wren_a [13] $end
$var wire 1 j9 i_q_tmp_wren_a [12] $end
$var wire 1 k9 i_q_tmp_wren_a [11] $end
$var wire 1 l9 i_q_tmp_wren_a [10] $end
$var wire 1 m9 i_q_tmp_wren_a [9] $end
$var wire 1 n9 i_q_tmp_wren_a [8] $end
$var wire 1 o9 i_q_tmp_wren_a [7] $end
$var wire 1 p9 i_q_tmp_wren_a [6] $end
$var wire 1 q9 i_q_tmp_wren_a [5] $end
$var wire 1 r9 i_q_tmp_wren_a [4] $end
$var wire 1 s9 i_q_tmp_wren_a [3] $end
$var wire 1 t9 i_q_tmp_wren_a [2] $end
$var wire 1 u9 i_q_tmp_wren_a [1] $end
$var wire 1 v9 i_q_tmp_wren_a [0] $end
$var wire 1 w9 i_q_tmp2_wren_a [15] $end
$var wire 1 x9 i_q_tmp2_wren_a [14] $end
$var wire 1 y9 i_q_tmp2_wren_a [13] $end
$var wire 1 z9 i_q_tmp2_wren_a [12] $end
$var wire 1 {9 i_q_tmp2_wren_a [11] $end
$var wire 1 |9 i_q_tmp2_wren_a [10] $end
$var wire 1 }9 i_q_tmp2_wren_a [9] $end
$var wire 1 ~9 i_q_tmp2_wren_a [8] $end
$var wire 1 !: i_q_tmp2_wren_a [7] $end
$var wire 1 ": i_q_tmp2_wren_a [6] $end
$var wire 1 #: i_q_tmp2_wren_a [5] $end
$var wire 1 $: i_q_tmp2_wren_a [4] $end
$var wire 1 %: i_q_tmp2_wren_a [3] $end
$var wire 1 &: i_q_tmp2_wren_a [2] $end
$var wire 1 ': i_q_tmp2_wren_a [1] $end
$var wire 1 (: i_q_tmp2_wren_a [0] $end
$var wire 1 ): i_q_tmp_wren_b [0] $end
$var wire 1 *: i_q_reg_b [0] $end
$var wire 1 +: i_q_tmp_b [0] $end
$var wire 1 ,: i_q_tmp2_b [0] $end
$var wire 1 -: i_q_output_latch [0] $end
$var wire 1 .: i_q_ecc_reg_b [0] $end
$var wire 1 /: i_q_ecc_tmp_b [0] $end
$var wire 1 0: i_current_written_data_a [15] $end
$var wire 1 1: i_current_written_data_a [14] $end
$var wire 1 2: i_current_written_data_a [13] $end
$var wire 1 3: i_current_written_data_a [12] $end
$var wire 1 4: i_current_written_data_a [11] $end
$var wire 1 5: i_current_written_data_a [10] $end
$var wire 1 6: i_current_written_data_a [9] $end
$var wire 1 7: i_current_written_data_a [8] $end
$var wire 1 8: i_current_written_data_a [7] $end
$var wire 1 9: i_current_written_data_a [6] $end
$var wire 1 :: i_current_written_data_a [5] $end
$var wire 1 ;: i_current_written_data_a [4] $end
$var wire 1 <: i_current_written_data_a [3] $end
$var wire 1 =: i_current_written_data_a [2] $end
$var wire 1 >: i_current_written_data_a [1] $end
$var wire 1 ?: i_current_written_data_a [0] $end
$var wire 1 @: i_original_data_a [15] $end
$var wire 1 A: i_original_data_a [14] $end
$var wire 1 B: i_original_data_a [13] $end
$var wire 1 C: i_original_data_a [12] $end
$var wire 1 D: i_original_data_a [11] $end
$var wire 1 E: i_original_data_a [10] $end
$var wire 1 F: i_original_data_a [9] $end
$var wire 1 G: i_original_data_a [8] $end
$var wire 1 H: i_original_data_a [7] $end
$var wire 1 I: i_original_data_a [6] $end
$var wire 1 J: i_original_data_a [5] $end
$var wire 1 K: i_original_data_a [4] $end
$var wire 1 L: i_original_data_a [3] $end
$var wire 1 M: i_original_data_a [2] $end
$var wire 1 N: i_original_data_a [1] $end
$var wire 1 O: i_original_data_a [0] $end
$var wire 1 P: i_original_data_b [0] $end
$var wire 1 Q: i_byteena_mask_reg_a_x [15] $end
$var wire 1 R: i_byteena_mask_reg_a_x [14] $end
$var wire 1 S: i_byteena_mask_reg_a_x [13] $end
$var wire 1 T: i_byteena_mask_reg_a_x [12] $end
$var wire 1 U: i_byteena_mask_reg_a_x [11] $end
$var wire 1 V: i_byteena_mask_reg_a_x [10] $end
$var wire 1 W: i_byteena_mask_reg_a_x [9] $end
$var wire 1 X: i_byteena_mask_reg_a_x [8] $end
$var wire 1 Y: i_byteena_mask_reg_a_x [7] $end
$var wire 1 Z: i_byteena_mask_reg_a_x [6] $end
$var wire 1 [: i_byteena_mask_reg_a_x [5] $end
$var wire 1 \: i_byteena_mask_reg_a_x [4] $end
$var wire 1 ]: i_byteena_mask_reg_a_x [3] $end
$var wire 1 ^: i_byteena_mask_reg_a_x [2] $end
$var wire 1 _: i_byteena_mask_reg_a_x [1] $end
$var wire 1 `: i_byteena_mask_reg_a_x [0] $end
$var wire 1 a: i_byteena_mask_reg_b_x [0] $end
$var wire 1 b: i_byteena_mask_reg_a [15] $end
$var wire 1 c: i_byteena_mask_reg_a [14] $end
$var wire 1 d: i_byteena_mask_reg_a [13] $end
$var wire 1 e: i_byteena_mask_reg_a [12] $end
$var wire 1 f: i_byteena_mask_reg_a [11] $end
$var wire 1 g: i_byteena_mask_reg_a [10] $end
$var wire 1 h: i_byteena_mask_reg_a [9] $end
$var wire 1 i: i_byteena_mask_reg_a [8] $end
$var wire 1 j: i_byteena_mask_reg_a [7] $end
$var wire 1 k: i_byteena_mask_reg_a [6] $end
$var wire 1 l: i_byteena_mask_reg_a [5] $end
$var wire 1 m: i_byteena_mask_reg_a [4] $end
$var wire 1 n: i_byteena_mask_reg_a [3] $end
$var wire 1 o: i_byteena_mask_reg_a [2] $end
$var wire 1 p: i_byteena_mask_reg_a [1] $end
$var wire 1 q: i_byteena_mask_reg_a [0] $end
$var wire 1 r: i_byteena_mask_reg_b [0] $end
$var wire 1 s: i_byteena_mask_reg_a_out [15] $end
$var wire 1 t: i_byteena_mask_reg_a_out [14] $end
$var wire 1 u: i_byteena_mask_reg_a_out [13] $end
$var wire 1 v: i_byteena_mask_reg_a_out [12] $end
$var wire 1 w: i_byteena_mask_reg_a_out [11] $end
$var wire 1 x: i_byteena_mask_reg_a_out [10] $end
$var wire 1 y: i_byteena_mask_reg_a_out [9] $end
$var wire 1 z: i_byteena_mask_reg_a_out [8] $end
$var wire 1 {: i_byteena_mask_reg_a_out [7] $end
$var wire 1 |: i_byteena_mask_reg_a_out [6] $end
$var wire 1 }: i_byteena_mask_reg_a_out [5] $end
$var wire 1 ~: i_byteena_mask_reg_a_out [4] $end
$var wire 1 !; i_byteena_mask_reg_a_out [3] $end
$var wire 1 "; i_byteena_mask_reg_a_out [2] $end
$var wire 1 #; i_byteena_mask_reg_a_out [1] $end
$var wire 1 $; i_byteena_mask_reg_a_out [0] $end
$var wire 1 %; i_byteena_mask_reg_b_out [0] $end
$var wire 1 &; i_byteena_mask_reg_a_out_b [15] $end
$var wire 1 '; i_byteena_mask_reg_a_out_b [14] $end
$var wire 1 (; i_byteena_mask_reg_a_out_b [13] $end
$var wire 1 ); i_byteena_mask_reg_a_out_b [12] $end
$var wire 1 *; i_byteena_mask_reg_a_out_b [11] $end
$var wire 1 +; i_byteena_mask_reg_a_out_b [10] $end
$var wire 1 ,; i_byteena_mask_reg_a_out_b [9] $end
$var wire 1 -; i_byteena_mask_reg_a_out_b [8] $end
$var wire 1 .; i_byteena_mask_reg_a_out_b [7] $end
$var wire 1 /; i_byteena_mask_reg_a_out_b [6] $end
$var wire 1 0; i_byteena_mask_reg_a_out_b [5] $end
$var wire 1 1; i_byteena_mask_reg_a_out_b [4] $end
$var wire 1 2; i_byteena_mask_reg_a_out_b [3] $end
$var wire 1 3; i_byteena_mask_reg_a_out_b [2] $end
$var wire 1 4; i_byteena_mask_reg_a_out_b [1] $end
$var wire 1 5; i_byteena_mask_reg_a_out_b [0] $end
$var wire 1 6; i_byteena_mask_reg_b_out_a [0] $end
$var wire 1 7; i_address_reg_a [13] $end
$var wire 1 8; i_address_reg_a [12] $end
$var wire 1 9; i_address_reg_a [11] $end
$var wire 1 :; i_address_reg_a [10] $end
$var wire 1 ;; i_address_reg_a [9] $end
$var wire 1 <; i_address_reg_a [8] $end
$var wire 1 =; i_address_reg_a [7] $end
$var wire 1 >; i_address_reg_a [6] $end
$var wire 1 ?; i_address_reg_a [5] $end
$var wire 1 @; i_address_reg_a [4] $end
$var wire 1 A; i_address_reg_a [3] $end
$var wire 1 B; i_address_reg_a [2] $end
$var wire 1 C; i_address_reg_a [1] $end
$var wire 1 D; i_address_reg_a [0] $end
$var wire 1 E; i_address_reg_b [0] $end
$var wire 1 F; i_wren_reg_a $end
$var wire 1 G; i_wren_reg_b $end
$var wire 1 H; i_rden_reg_a $end
$var wire 1 I; i_rden_reg_b $end
$var wire 1 J; i_read_flag_a $end
$var wire 1 K; i_read_flag_b $end
$var wire 1 L; i_reread_flag_a $end
$var wire 1 M; i_reread_flag_b $end
$var wire 1 N; i_reread_flag2_a $end
$var wire 1 O; i_reread_flag2_b $end
$var wire 1 P; i_write_flag_a $end
$var wire 1 Q; i_write_flag_b $end
$var wire 1 R; i_nmram_write_a $end
$var wire 1 S; i_nmram_write_b $end
$var wire 1 T; i_indata_aclr_a $end
$var wire 1 U; i_address_aclr_a $end
$var wire 1 V; i_wrcontrol_aclr_a $end
$var wire 1 W; i_indata_aclr_b $end
$var wire 1 X; i_address_aclr_b $end
$var wire 1 Y; i_wrcontrol_aclr_b $end
$var wire 1 Z; i_outdata_aclr_a $end
$var wire 1 [; i_outdata_aclr_b $end
$var wire 1 \; i_rdcontrol_aclr_b $end
$var wire 1 ]; i_byteena_aclr_a $end
$var wire 1 ^; i_byteena_aclr_b $end
$var wire 1 _; good_to_go_a $end
$var wire 1 `; good_to_go_b $end
$var wire 1 a; i_core_clocken_a $end
$var wire 1 b; i_core_clocken_b $end
$var wire 1 c; i_core_clocken_b0 $end
$var wire 1 d; i_core_clocken_b1 $end
$var wire 1 e; i_inclocken0 $end
$var wire 1 f; i_input_clocken_b $end
$var wire 1 g; i_outdata_clken_b $end
$var wire 1 h; i_outdata_clken_a $end
$var wire 1 i; i_outlatch_clken_a $end
$var wire 1 j; i_outlatch_clken_b $end
$var wire 1 k; i_core_clocken_a_reg $end
$var wire 1 l; i_core_clocken_b_reg $end
$var wire 1 m; default_val $end
$var wire 1 n; i_data_zero_a [15] $end
$var wire 1 o; i_data_zero_a [14] $end
$var wire 1 p; i_data_zero_a [13] $end
$var wire 1 q; i_data_zero_a [12] $end
$var wire 1 r; i_data_zero_a [11] $end
$var wire 1 s; i_data_zero_a [10] $end
$var wire 1 t; i_data_zero_a [9] $end
$var wire 1 u; i_data_zero_a [8] $end
$var wire 1 v; i_data_zero_a [7] $end
$var wire 1 w; i_data_zero_a [6] $end
$var wire 1 x; i_data_zero_a [5] $end
$var wire 1 y; i_data_zero_a [4] $end
$var wire 1 z; i_data_zero_a [3] $end
$var wire 1 {; i_data_zero_a [2] $end
$var wire 1 |; i_data_zero_a [1] $end
$var wire 1 }; i_data_zero_a [0] $end
$var wire 1 ~; i_data_zero_b [0] $end
$var wire 1 !< i_data_ones_a [15] $end
$var wire 1 "< i_data_ones_a [14] $end
$var wire 1 #< i_data_ones_a [13] $end
$var wire 1 $< i_data_ones_a [12] $end
$var wire 1 %< i_data_ones_a [11] $end
$var wire 1 &< i_data_ones_a [10] $end
$var wire 1 '< i_data_ones_a [9] $end
$var wire 1 (< i_data_ones_a [8] $end
$var wire 1 )< i_data_ones_a [7] $end
$var wire 1 *< i_data_ones_a [6] $end
$var wire 1 +< i_data_ones_a [5] $end
$var wire 1 ,< i_data_ones_a [4] $end
$var wire 1 -< i_data_ones_a [3] $end
$var wire 1 .< i_data_ones_a [2] $end
$var wire 1 /< i_data_ones_a [1] $end
$var wire 1 0< i_data_ones_a [0] $end
$var wire 1 1< i_data_ones_b [0] $end
$var wire 1 2< same_clock_pulse0 $end
$var wire 1 3< same_clock_pulse1 $end
$var wire 1 4< i_force_reread_a $end
$var wire 1 5< i_force_reread_a1 $end
$var wire 1 6< i_force_reread_b $end
$var wire 1 7< i_force_reread_b1 $end
$var wire 1 8< i_force_reread_signal_a $end
$var wire 1 9< i_force_reread_signal_b $end
$var wire 1 :< i_good_to_write_a $end
$var wire 1 ;< i_good_to_write_b $end

$scope begin IFG02 $end
$upscope $end

$scope begin IFG03a $end
$upscope $end

$scope begin IFG15 $end
$upscope $end

$scope begin IFG172a $end
$upscope $end

$scope begin IFG50a $end
$upscope $end

$scope begin IFG51a $end
$upscope $end

$scope begin IFG52b $end
$upscope $end

$scope begin IFCLR01 $end
$upscope $end

$scope begin IFG53 $end
$upscope $end

$scope begin IFG57 $end
$upscope $end
$upscope $end
$upscope $end

$scope module b2v_inst6 $end
$var wire 1 << address [13] $end
$var wire 1 =< address [12] $end
$var wire 1 >< address [11] $end
$var wire 1 ?< address [10] $end
$var wire 1 @< address [9] $end
$var wire 1 A< address [8] $end
$var wire 1 B< address [7] $end
$var wire 1 C< address [6] $end
$var wire 1 D< address [5] $end
$var wire 1 E< address [4] $end
$var wire 1 F< address [3] $end
$var wire 1 G< address [2] $end
$var wire 1 H< address [1] $end
$var wire 1 I< address [0] $end
$var wire 1 J< clock $end
$var wire 1 K< q [15] $end
$var wire 1 L< q [14] $end
$var wire 1 M< q [13] $end
$var wire 1 N< q [12] $end
$var wire 1 O< q [11] $end
$var wire 1 P< q [10] $end
$var wire 1 Q< q [9] $end
$var wire 1 R< q [8] $end
$var wire 1 S< q [7] $end
$var wire 1 T< q [6] $end
$var wire 1 U< q [5] $end
$var wire 1 V< q [4] $end
$var wire 1 W< q [3] $end
$var wire 1 X< q [2] $end
$var wire 1 Y< q [1] $end
$var wire 1 Z< q [0] $end
$var wire 1 [< sub_wire0 [15] $end
$var wire 1 \< sub_wire0 [14] $end
$var wire 1 ]< sub_wire0 [13] $end
$var wire 1 ^< sub_wire0 [12] $end
$var wire 1 _< sub_wire0 [11] $end
$var wire 1 `< sub_wire0 [10] $end
$var wire 1 a< sub_wire0 [9] $end
$var wire 1 b< sub_wire0 [8] $end
$var wire 1 c< sub_wire0 [7] $end
$var wire 1 d< sub_wire0 [6] $end
$var wire 1 e< sub_wire0 [5] $end
$var wire 1 f< sub_wire0 [4] $end
$var wire 1 g< sub_wire0 [3] $end
$var wire 1 h< sub_wire0 [2] $end
$var wire 1 i< sub_wire0 [1] $end
$var wire 1 j< sub_wire0 [0] $end

$scope module altsyncram_component $end
$var wire 1 k< wren_a $end
$var wire 1 l< wren_b $end
$var wire 1 m< rden_a $end
$var wire 1 n< rden_b $end
$var wire 1 o< data_a [15] $end
$var wire 1 p< data_a [14] $end
$var wire 1 q< data_a [13] $end
$var wire 1 r< data_a [12] $end
$var wire 1 s< data_a [11] $end
$var wire 1 t< data_a [10] $end
$var wire 1 u< data_a [9] $end
$var wire 1 v< data_a [8] $end
$var wire 1 w< data_a [7] $end
$var wire 1 x< data_a [6] $end
$var wire 1 y< data_a [5] $end
$var wire 1 z< data_a [4] $end
$var wire 1 {< data_a [3] $end
$var wire 1 |< data_a [2] $end
$var wire 1 }< data_a [1] $end
$var wire 1 ~< data_a [0] $end
$var wire 1 != data_b [0] $end
$var wire 1 << address_a [13] $end
$var wire 1 =< address_a [12] $end
$var wire 1 >< address_a [11] $end
$var wire 1 ?< address_a [10] $end
$var wire 1 @< address_a [9] $end
$var wire 1 A< address_a [8] $end
$var wire 1 B< address_a [7] $end
$var wire 1 C< address_a [6] $end
$var wire 1 D< address_a [5] $end
$var wire 1 E< address_a [4] $end
$var wire 1 F< address_a [3] $end
$var wire 1 G< address_a [2] $end
$var wire 1 H< address_a [1] $end
$var wire 1 I< address_a [0] $end
$var wire 1 "= address_b [0] $end
$var wire 1 J< clock0 $end
$var wire 1 #= clock1 $end
$var wire 1 $= clocken0 $end
$var wire 1 %= clocken1 $end
$var wire 1 &= clocken2 $end
$var wire 1 '= clocken3 $end
$var wire 1 (= aclr0 $end
$var wire 1 )= aclr1 $end
$var wire 1 *= addressstall_a $end
$var wire 1 += addressstall_b $end
$var wire 1 ,= byteena_a [0] $end
$var wire 1 -= byteena_b [0] $end
$var wire 1 [< q_a [15] $end
$var wire 1 \< q_a [14] $end
$var wire 1 ]< q_a [13] $end
$var wire 1 ^< q_a [12] $end
$var wire 1 _< q_a [11] $end
$var wire 1 `< q_a [10] $end
$var wire 1 a< q_a [9] $end
$var wire 1 b< q_a [8] $end
$var wire 1 c< q_a [7] $end
$var wire 1 d< q_a [6] $end
$var wire 1 e< q_a [5] $end
$var wire 1 f< q_a [4] $end
$var wire 1 g< q_a [3] $end
$var wire 1 h< q_a [2] $end
$var wire 1 i< q_a [1] $end
$var wire 1 j< q_a [0] $end
$var wire 1 .= q_b [0] $end
$var wire 1 /= eccstatus [2] $end
$var wire 1 0= eccstatus [1] $end
$var wire 1 1= eccstatus [0] $end
$var wire 1 2= i_data_reg_a [15] $end
$var wire 1 3= i_data_reg_a [14] $end
$var wire 1 4= i_data_reg_a [13] $end
$var wire 1 5= i_data_reg_a [12] $end
$var wire 1 6= i_data_reg_a [11] $end
$var wire 1 7= i_data_reg_a [10] $end
$var wire 1 8= i_data_reg_a [9] $end
$var wire 1 9= i_data_reg_a [8] $end
$var wire 1 := i_data_reg_a [7] $end
$var wire 1 ;= i_data_reg_a [6] $end
$var wire 1 <= i_data_reg_a [5] $end
$var wire 1 == i_data_reg_a [4] $end
$var wire 1 >= i_data_reg_a [3] $end
$var wire 1 ?= i_data_reg_a [2] $end
$var wire 1 @= i_data_reg_a [1] $end
$var wire 1 A= i_data_reg_a [0] $end
$var wire 1 B= i_data_reg_b [0] $end
$var wire 1 C= i_q_reg_a [15] $end
$var wire 1 D= i_q_reg_a [14] $end
$var wire 1 E= i_q_reg_a [13] $end
$var wire 1 F= i_q_reg_a [12] $end
$var wire 1 G= i_q_reg_a [11] $end
$var wire 1 H= i_q_reg_a [10] $end
$var wire 1 I= i_q_reg_a [9] $end
$var wire 1 J= i_q_reg_a [8] $end
$var wire 1 K= i_q_reg_a [7] $end
$var wire 1 L= i_q_reg_a [6] $end
$var wire 1 M= i_q_reg_a [5] $end
$var wire 1 N= i_q_reg_a [4] $end
$var wire 1 O= i_q_reg_a [3] $end
$var wire 1 P= i_q_reg_a [2] $end
$var wire 1 Q= i_q_reg_a [1] $end
$var wire 1 R= i_q_reg_a [0] $end
$var wire 1 S= i_q_tmp_a [15] $end
$var wire 1 T= i_q_tmp_a [14] $end
$var wire 1 U= i_q_tmp_a [13] $end
$var wire 1 V= i_q_tmp_a [12] $end
$var wire 1 W= i_q_tmp_a [11] $end
$var wire 1 X= i_q_tmp_a [10] $end
$var wire 1 Y= i_q_tmp_a [9] $end
$var wire 1 Z= i_q_tmp_a [8] $end
$var wire 1 [= i_q_tmp_a [7] $end
$var wire 1 \= i_q_tmp_a [6] $end
$var wire 1 ]= i_q_tmp_a [5] $end
$var wire 1 ^= i_q_tmp_a [4] $end
$var wire 1 _= i_q_tmp_a [3] $end
$var wire 1 `= i_q_tmp_a [2] $end
$var wire 1 a= i_q_tmp_a [1] $end
$var wire 1 b= i_q_tmp_a [0] $end
$var wire 1 c= i_q_tmp2_a [15] $end
$var wire 1 d= i_q_tmp2_a [14] $end
$var wire 1 e= i_q_tmp2_a [13] $end
$var wire 1 f= i_q_tmp2_a [12] $end
$var wire 1 g= i_q_tmp2_a [11] $end
$var wire 1 h= i_q_tmp2_a [10] $end
$var wire 1 i= i_q_tmp2_a [9] $end
$var wire 1 j= i_q_tmp2_a [8] $end
$var wire 1 k= i_q_tmp2_a [7] $end
$var wire 1 l= i_q_tmp2_a [6] $end
$var wire 1 m= i_q_tmp2_a [5] $end
$var wire 1 n= i_q_tmp2_a [4] $end
$var wire 1 o= i_q_tmp2_a [3] $end
$var wire 1 p= i_q_tmp2_a [2] $end
$var wire 1 q= i_q_tmp2_a [1] $end
$var wire 1 r= i_q_tmp2_a [0] $end
$var wire 1 s= i_q_tmp_wren_a [15] $end
$var wire 1 t= i_q_tmp_wren_a [14] $end
$var wire 1 u= i_q_tmp_wren_a [13] $end
$var wire 1 v= i_q_tmp_wren_a [12] $end
$var wire 1 w= i_q_tmp_wren_a [11] $end
$var wire 1 x= i_q_tmp_wren_a [10] $end
$var wire 1 y= i_q_tmp_wren_a [9] $end
$var wire 1 z= i_q_tmp_wren_a [8] $end
$var wire 1 {= i_q_tmp_wren_a [7] $end
$var wire 1 |= i_q_tmp_wren_a [6] $end
$var wire 1 }= i_q_tmp_wren_a [5] $end
$var wire 1 ~= i_q_tmp_wren_a [4] $end
$var wire 1 !> i_q_tmp_wren_a [3] $end
$var wire 1 "> i_q_tmp_wren_a [2] $end
$var wire 1 #> i_q_tmp_wren_a [1] $end
$var wire 1 $> i_q_tmp_wren_a [0] $end
$var wire 1 %> i_q_tmp2_wren_a [15] $end
$var wire 1 &> i_q_tmp2_wren_a [14] $end
$var wire 1 '> i_q_tmp2_wren_a [13] $end
$var wire 1 (> i_q_tmp2_wren_a [12] $end
$var wire 1 )> i_q_tmp2_wren_a [11] $end
$var wire 1 *> i_q_tmp2_wren_a [10] $end
$var wire 1 +> i_q_tmp2_wren_a [9] $end
$var wire 1 ,> i_q_tmp2_wren_a [8] $end
$var wire 1 -> i_q_tmp2_wren_a [7] $end
$var wire 1 .> i_q_tmp2_wren_a [6] $end
$var wire 1 /> i_q_tmp2_wren_a [5] $end
$var wire 1 0> i_q_tmp2_wren_a [4] $end
$var wire 1 1> i_q_tmp2_wren_a [3] $end
$var wire 1 2> i_q_tmp2_wren_a [2] $end
$var wire 1 3> i_q_tmp2_wren_a [1] $end
$var wire 1 4> i_q_tmp2_wren_a [0] $end
$var wire 1 5> i_q_tmp_wren_b [0] $end
$var wire 1 6> i_q_reg_b [0] $end
$var wire 1 7> i_q_tmp_b [0] $end
$var wire 1 8> i_q_tmp2_b [0] $end
$var wire 1 9> i_q_output_latch [0] $end
$var wire 1 :> i_q_ecc_reg_b [0] $end
$var wire 1 ;> i_q_ecc_tmp_b [0] $end
$var wire 1 <> i_current_written_data_a [15] $end
$var wire 1 => i_current_written_data_a [14] $end
$var wire 1 >> i_current_written_data_a [13] $end
$var wire 1 ?> i_current_written_data_a [12] $end
$var wire 1 @> i_current_written_data_a [11] $end
$var wire 1 A> i_current_written_data_a [10] $end
$var wire 1 B> i_current_written_data_a [9] $end
$var wire 1 C> i_current_written_data_a [8] $end
$var wire 1 D> i_current_written_data_a [7] $end
$var wire 1 E> i_current_written_data_a [6] $end
$var wire 1 F> i_current_written_data_a [5] $end
$var wire 1 G> i_current_written_data_a [4] $end
$var wire 1 H> i_current_written_data_a [3] $end
$var wire 1 I> i_current_written_data_a [2] $end
$var wire 1 J> i_current_written_data_a [1] $end
$var wire 1 K> i_current_written_data_a [0] $end
$var wire 1 L> i_original_data_a [15] $end
$var wire 1 M> i_original_data_a [14] $end
$var wire 1 N> i_original_data_a [13] $end
$var wire 1 O> i_original_data_a [12] $end
$var wire 1 P> i_original_data_a [11] $end
$var wire 1 Q> i_original_data_a [10] $end
$var wire 1 R> i_original_data_a [9] $end
$var wire 1 S> i_original_data_a [8] $end
$var wire 1 T> i_original_data_a [7] $end
$var wire 1 U> i_original_data_a [6] $end
$var wire 1 V> i_original_data_a [5] $end
$var wire 1 W> i_original_data_a [4] $end
$var wire 1 X> i_original_data_a [3] $end
$var wire 1 Y> i_original_data_a [2] $end
$var wire 1 Z> i_original_data_a [1] $end
$var wire 1 [> i_original_data_a [0] $end
$var wire 1 \> i_original_data_b [0] $end
$var wire 1 ]> i_byteena_mask_reg_a_x [15] $end
$var wire 1 ^> i_byteena_mask_reg_a_x [14] $end
$var wire 1 _> i_byteena_mask_reg_a_x [13] $end
$var wire 1 `> i_byteena_mask_reg_a_x [12] $end
$var wire 1 a> i_byteena_mask_reg_a_x [11] $end
$var wire 1 b> i_byteena_mask_reg_a_x [10] $end
$var wire 1 c> i_byteena_mask_reg_a_x [9] $end
$var wire 1 d> i_byteena_mask_reg_a_x [8] $end
$var wire 1 e> i_byteena_mask_reg_a_x [7] $end
$var wire 1 f> i_byteena_mask_reg_a_x [6] $end
$var wire 1 g> i_byteena_mask_reg_a_x [5] $end
$var wire 1 h> i_byteena_mask_reg_a_x [4] $end
$var wire 1 i> i_byteena_mask_reg_a_x [3] $end
$var wire 1 j> i_byteena_mask_reg_a_x [2] $end
$var wire 1 k> i_byteena_mask_reg_a_x [1] $end
$var wire 1 l> i_byteena_mask_reg_a_x [0] $end
$var wire 1 m> i_byteena_mask_reg_b_x [0] $end
$var wire 1 n> i_byteena_mask_reg_a [15] $end
$var wire 1 o> i_byteena_mask_reg_a [14] $end
$var wire 1 p> i_byteena_mask_reg_a [13] $end
$var wire 1 q> i_byteena_mask_reg_a [12] $end
$var wire 1 r> i_byteena_mask_reg_a [11] $end
$var wire 1 s> i_byteena_mask_reg_a [10] $end
$var wire 1 t> i_byteena_mask_reg_a [9] $end
$var wire 1 u> i_byteena_mask_reg_a [8] $end
$var wire 1 v> i_byteena_mask_reg_a [7] $end
$var wire 1 w> i_byteena_mask_reg_a [6] $end
$var wire 1 x> i_byteena_mask_reg_a [5] $end
$var wire 1 y> i_byteena_mask_reg_a [4] $end
$var wire 1 z> i_byteena_mask_reg_a [3] $end
$var wire 1 {> i_byteena_mask_reg_a [2] $end
$var wire 1 |> i_byteena_mask_reg_a [1] $end
$var wire 1 }> i_byteena_mask_reg_a [0] $end
$var wire 1 ~> i_byteena_mask_reg_b [0] $end
$var wire 1 !? i_byteena_mask_reg_a_out [15] $end
$var wire 1 "? i_byteena_mask_reg_a_out [14] $end
$var wire 1 #? i_byteena_mask_reg_a_out [13] $end
$var wire 1 $? i_byteena_mask_reg_a_out [12] $end
$var wire 1 %? i_byteena_mask_reg_a_out [11] $end
$var wire 1 &? i_byteena_mask_reg_a_out [10] $end
$var wire 1 '? i_byteena_mask_reg_a_out [9] $end
$var wire 1 (? i_byteena_mask_reg_a_out [8] $end
$var wire 1 )? i_byteena_mask_reg_a_out [7] $end
$var wire 1 *? i_byteena_mask_reg_a_out [6] $end
$var wire 1 +? i_byteena_mask_reg_a_out [5] $end
$var wire 1 ,? i_byteena_mask_reg_a_out [4] $end
$var wire 1 -? i_byteena_mask_reg_a_out [3] $end
$var wire 1 .? i_byteena_mask_reg_a_out [2] $end
$var wire 1 /? i_byteena_mask_reg_a_out [1] $end
$var wire 1 0? i_byteena_mask_reg_a_out [0] $end
$var wire 1 1? i_byteena_mask_reg_b_out [0] $end
$var wire 1 2? i_byteena_mask_reg_a_out_b [15] $end
$var wire 1 3? i_byteena_mask_reg_a_out_b [14] $end
$var wire 1 4? i_byteena_mask_reg_a_out_b [13] $end
$var wire 1 5? i_byteena_mask_reg_a_out_b [12] $end
$var wire 1 6? i_byteena_mask_reg_a_out_b [11] $end
$var wire 1 7? i_byteena_mask_reg_a_out_b [10] $end
$var wire 1 8? i_byteena_mask_reg_a_out_b [9] $end
$var wire 1 9? i_byteena_mask_reg_a_out_b [8] $end
$var wire 1 :? i_byteena_mask_reg_a_out_b [7] $end
$var wire 1 ;? i_byteena_mask_reg_a_out_b [6] $end
$var wire 1 <? i_byteena_mask_reg_a_out_b [5] $end
$var wire 1 =? i_byteena_mask_reg_a_out_b [4] $end
$var wire 1 >? i_byteena_mask_reg_a_out_b [3] $end
$var wire 1 ?? i_byteena_mask_reg_a_out_b [2] $end
$var wire 1 @? i_byteena_mask_reg_a_out_b [1] $end
$var wire 1 A? i_byteena_mask_reg_a_out_b [0] $end
$var wire 1 B? i_byteena_mask_reg_b_out_a [0] $end
$var wire 1 C? i_address_reg_a [13] $end
$var wire 1 D? i_address_reg_a [12] $end
$var wire 1 E? i_address_reg_a [11] $end
$var wire 1 F? i_address_reg_a [10] $end
$var wire 1 G? i_address_reg_a [9] $end
$var wire 1 H? i_address_reg_a [8] $end
$var wire 1 I? i_address_reg_a [7] $end
$var wire 1 J? i_address_reg_a [6] $end
$var wire 1 K? i_address_reg_a [5] $end
$var wire 1 L? i_address_reg_a [4] $end
$var wire 1 M? i_address_reg_a [3] $end
$var wire 1 N? i_address_reg_a [2] $end
$var wire 1 O? i_address_reg_a [1] $end
$var wire 1 P? i_address_reg_a [0] $end
$var wire 1 Q? i_address_reg_b [0] $end
$var wire 1 R? i_wren_reg_a $end
$var wire 1 S? i_wren_reg_b $end
$var wire 1 T? i_rden_reg_a $end
$var wire 1 U? i_rden_reg_b $end
$var wire 1 V? i_read_flag_a $end
$var wire 1 W? i_read_flag_b $end
$var wire 1 X? i_reread_flag_a $end
$var wire 1 Y? i_reread_flag_b $end
$var wire 1 Z? i_reread_flag2_a $end
$var wire 1 [? i_reread_flag2_b $end
$var wire 1 \? i_write_flag_a $end
$var wire 1 ]? i_write_flag_b $end
$var wire 1 ^? i_nmram_write_a $end
$var wire 1 _? i_nmram_write_b $end
$var wire 1 `? i_indata_aclr_a $end
$var wire 1 a? i_address_aclr_a $end
$var wire 1 b? i_wrcontrol_aclr_a $end
$var wire 1 c? i_indata_aclr_b $end
$var wire 1 d? i_address_aclr_b $end
$var wire 1 e? i_wrcontrol_aclr_b $end
$var wire 1 f? i_outdata_aclr_a $end
$var wire 1 g? i_outdata_aclr_b $end
$var wire 1 h? i_rdcontrol_aclr_b $end
$var wire 1 i? i_byteena_aclr_a $end
$var wire 1 j? i_byteena_aclr_b $end
$var wire 1 k? good_to_go_a $end
$var wire 1 l? good_to_go_b $end
$var wire 1 m? i_core_clocken_a $end
$var wire 1 n? i_core_clocken_b $end
$var wire 1 o? i_core_clocken_b0 $end
$var wire 1 p? i_core_clocken_b1 $end
$var wire 1 q? i_inclocken0 $end
$var wire 1 r? i_input_clocken_b $end
$var wire 1 s? i_outdata_clken_b $end
$var wire 1 t? i_outdata_clken_a $end
$var wire 1 u? i_outlatch_clken_a $end
$var wire 1 v? i_outlatch_clken_b $end
$var wire 1 w? i_core_clocken_a_reg $end
$var wire 1 x? i_core_clocken_b_reg $end
$var wire 1 y? default_val $end
$var wire 1 z? i_data_zero_a [15] $end
$var wire 1 {? i_data_zero_a [14] $end
$var wire 1 |? i_data_zero_a [13] $end
$var wire 1 }? i_data_zero_a [12] $end
$var wire 1 ~? i_data_zero_a [11] $end
$var wire 1 !@ i_data_zero_a [10] $end
$var wire 1 "@ i_data_zero_a [9] $end
$var wire 1 #@ i_data_zero_a [8] $end
$var wire 1 $@ i_data_zero_a [7] $end
$var wire 1 %@ i_data_zero_a [6] $end
$var wire 1 &@ i_data_zero_a [5] $end
$var wire 1 '@ i_data_zero_a [4] $end
$var wire 1 (@ i_data_zero_a [3] $end
$var wire 1 )@ i_data_zero_a [2] $end
$var wire 1 *@ i_data_zero_a [1] $end
$var wire 1 +@ i_data_zero_a [0] $end
$var wire 1 ,@ i_data_zero_b [0] $end
$var wire 1 -@ i_data_ones_a [15] $end
$var wire 1 .@ i_data_ones_a [14] $end
$var wire 1 /@ i_data_ones_a [13] $end
$var wire 1 0@ i_data_ones_a [12] $end
$var wire 1 1@ i_data_ones_a [11] $end
$var wire 1 2@ i_data_ones_a [10] $end
$var wire 1 3@ i_data_ones_a [9] $end
$var wire 1 4@ i_data_ones_a [8] $end
$var wire 1 5@ i_data_ones_a [7] $end
$var wire 1 6@ i_data_ones_a [6] $end
$var wire 1 7@ i_data_ones_a [5] $end
$var wire 1 8@ i_data_ones_a [4] $end
$var wire 1 9@ i_data_ones_a [3] $end
$var wire 1 :@ i_data_ones_a [2] $end
$var wire 1 ;@ i_data_ones_a [1] $end
$var wire 1 <@ i_data_ones_a [0] $end
$var wire 1 =@ i_data_ones_b [0] $end
$var wire 1 >@ same_clock_pulse0 $end
$var wire 1 ?@ same_clock_pulse1 $end
$var wire 1 @@ i_force_reread_a $end
$var wire 1 A@ i_force_reread_a1 $end
$var wire 1 B@ i_force_reread_b $end
$var wire 1 C@ i_force_reread_b1 $end
$var wire 1 D@ i_force_reread_signal_a $end
$var wire 1 E@ i_force_reread_signal_b $end
$var wire 1 F@ i_good_to_write_a $end
$var wire 1 G@ i_good_to_write_b $end

$scope begin IFG02 $end
$upscope $end

$scope begin IFG03a $end
$upscope $end

$scope begin IFG15 $end
$upscope $end

$scope begin IFG172a $end
$upscope $end

$scope begin IFG50a $end
$upscope $end

$scope begin IFG51a $end
$upscope $end

$scope begin IFG52b $end
$upscope $end

$scope begin IFCLR01 $end
$upscope $end

$scope begin IFG53 $end
$upscope $end

$scope begin IFG57 $end
$upscope $end
$upscope $end
$upscope $end

$scope module b2v_inst7 $end
$var wire 1 H@ address [14] $end
$var wire 1 I@ address [13] $end
$var wire 1 J@ address [12] $end
$var wire 1 K@ address [11] $end
$var wire 1 L@ address [10] $end
$var wire 1 M@ address [9] $end
$var wire 1 N@ address [8] $end
$var wire 1 O@ address [7] $end
$var wire 1 P@ address [6] $end
$var wire 1 Q@ address [5] $end
$var wire 1 R@ address [4] $end
$var wire 1 S@ address [3] $end
$var wire 1 T@ address [2] $end
$var wire 1 U@ address [1] $end
$var wire 1 V@ address [0] $end
$var wire 1 W@ clock $end
$var wire 1 X@ q [15] $end
$var wire 1 Y@ q [14] $end
$var wire 1 Z@ q [13] $end
$var wire 1 [@ q [12] $end
$var wire 1 \@ q [11] $end
$var wire 1 ]@ q [10] $end
$var wire 1 ^@ q [9] $end
$var wire 1 _@ q [8] $end
$var wire 1 `@ q [7] $end
$var wire 1 a@ q [6] $end
$var wire 1 b@ q [5] $end
$var wire 1 c@ q [4] $end
$var wire 1 d@ q [3] $end
$var wire 1 e@ q [2] $end
$var wire 1 f@ q [1] $end
$var wire 1 g@ q [0] $end
$var wire 1 h@ sub_wire0 [15] $end
$var wire 1 i@ sub_wire0 [14] $end
$var wire 1 j@ sub_wire0 [13] $end
$var wire 1 k@ sub_wire0 [12] $end
$var wire 1 l@ sub_wire0 [11] $end
$var wire 1 m@ sub_wire0 [10] $end
$var wire 1 n@ sub_wire0 [9] $end
$var wire 1 o@ sub_wire0 [8] $end
$var wire 1 p@ sub_wire0 [7] $end
$var wire 1 q@ sub_wire0 [6] $end
$var wire 1 r@ sub_wire0 [5] $end
$var wire 1 s@ sub_wire0 [4] $end
$var wire 1 t@ sub_wire0 [3] $end
$var wire 1 u@ sub_wire0 [2] $end
$var wire 1 v@ sub_wire0 [1] $end
$var wire 1 w@ sub_wire0 [0] $end

$scope module altsyncram_component $end
$var wire 1 x@ wren_a $end
$var wire 1 y@ wren_b $end
$var wire 1 z@ rden_a $end
$var wire 1 {@ rden_b $end
$var wire 1 |@ data_a [15] $end
$var wire 1 }@ data_a [14] $end
$var wire 1 ~@ data_a [13] $end
$var wire 1 !A data_a [12] $end
$var wire 1 "A data_a [11] $end
$var wire 1 #A data_a [10] $end
$var wire 1 $A data_a [9] $end
$var wire 1 %A data_a [8] $end
$var wire 1 &A data_a [7] $end
$var wire 1 'A data_a [6] $end
$var wire 1 (A data_a [5] $end
$var wire 1 )A data_a [4] $end
$var wire 1 *A data_a [3] $end
$var wire 1 +A data_a [2] $end
$var wire 1 ,A data_a [1] $end
$var wire 1 -A data_a [0] $end
$var wire 1 .A data_b [0] $end
$var wire 1 H@ address_a [14] $end
$var wire 1 I@ address_a [13] $end
$var wire 1 J@ address_a [12] $end
$var wire 1 K@ address_a [11] $end
$var wire 1 L@ address_a [10] $end
$var wire 1 M@ address_a [9] $end
$var wire 1 N@ address_a [8] $end
$var wire 1 O@ address_a [7] $end
$var wire 1 P@ address_a [6] $end
$var wire 1 Q@ address_a [5] $end
$var wire 1 R@ address_a [4] $end
$var wire 1 S@ address_a [3] $end
$var wire 1 T@ address_a [2] $end
$var wire 1 U@ address_a [1] $end
$var wire 1 V@ address_a [0] $end
$var wire 1 /A address_b [0] $end
$var wire 1 W@ clock0 $end
$var wire 1 0A clock1 $end
$var wire 1 1A clocken0 $end
$var wire 1 2A clocken1 $end
$var wire 1 3A clocken2 $end
$var wire 1 4A clocken3 $end
$var wire 1 5A aclr0 $end
$var wire 1 6A aclr1 $end
$var wire 1 7A addressstall_a $end
$var wire 1 8A addressstall_b $end
$var wire 1 9A byteena_a [0] $end
$var wire 1 :A byteena_b [0] $end
$var wire 1 h@ q_a [15] $end
$var wire 1 i@ q_a [14] $end
$var wire 1 j@ q_a [13] $end
$var wire 1 k@ q_a [12] $end
$var wire 1 l@ q_a [11] $end
$var wire 1 m@ q_a [10] $end
$var wire 1 n@ q_a [9] $end
$var wire 1 o@ q_a [8] $end
$var wire 1 p@ q_a [7] $end
$var wire 1 q@ q_a [6] $end
$var wire 1 r@ q_a [5] $end
$var wire 1 s@ q_a [4] $end
$var wire 1 t@ q_a [3] $end
$var wire 1 u@ q_a [2] $end
$var wire 1 v@ q_a [1] $end
$var wire 1 w@ q_a [0] $end
$var wire 1 ;A q_b [0] $end
$var wire 1 <A eccstatus [2] $end
$var wire 1 =A eccstatus [1] $end
$var wire 1 >A eccstatus [0] $end
$var wire 1 ?A i_data_reg_a [15] $end
$var wire 1 @A i_data_reg_a [14] $end
$var wire 1 AA i_data_reg_a [13] $end
$var wire 1 BA i_data_reg_a [12] $end
$var wire 1 CA i_data_reg_a [11] $end
$var wire 1 DA i_data_reg_a [10] $end
$var wire 1 EA i_data_reg_a [9] $end
$var wire 1 FA i_data_reg_a [8] $end
$var wire 1 GA i_data_reg_a [7] $end
$var wire 1 HA i_data_reg_a [6] $end
$var wire 1 IA i_data_reg_a [5] $end
$var wire 1 JA i_data_reg_a [4] $end
$var wire 1 KA i_data_reg_a [3] $end
$var wire 1 LA i_data_reg_a [2] $end
$var wire 1 MA i_data_reg_a [1] $end
$var wire 1 NA i_data_reg_a [0] $end
$var wire 1 OA i_data_reg_b [0] $end
$var wire 1 PA i_q_reg_a [15] $end
$var wire 1 QA i_q_reg_a [14] $end
$var wire 1 RA i_q_reg_a [13] $end
$var wire 1 SA i_q_reg_a [12] $end
$var wire 1 TA i_q_reg_a [11] $end
$var wire 1 UA i_q_reg_a [10] $end
$var wire 1 VA i_q_reg_a [9] $end
$var wire 1 WA i_q_reg_a [8] $end
$var wire 1 XA i_q_reg_a [7] $end
$var wire 1 YA i_q_reg_a [6] $end
$var wire 1 ZA i_q_reg_a [5] $end
$var wire 1 [A i_q_reg_a [4] $end
$var wire 1 \A i_q_reg_a [3] $end
$var wire 1 ]A i_q_reg_a [2] $end
$var wire 1 ^A i_q_reg_a [1] $end
$var wire 1 _A i_q_reg_a [0] $end
$var wire 1 `A i_q_tmp_a [15] $end
$var wire 1 aA i_q_tmp_a [14] $end
$var wire 1 bA i_q_tmp_a [13] $end
$var wire 1 cA i_q_tmp_a [12] $end
$var wire 1 dA i_q_tmp_a [11] $end
$var wire 1 eA i_q_tmp_a [10] $end
$var wire 1 fA i_q_tmp_a [9] $end
$var wire 1 gA i_q_tmp_a [8] $end
$var wire 1 hA i_q_tmp_a [7] $end
$var wire 1 iA i_q_tmp_a [6] $end
$var wire 1 jA i_q_tmp_a [5] $end
$var wire 1 kA i_q_tmp_a [4] $end
$var wire 1 lA i_q_tmp_a [3] $end
$var wire 1 mA i_q_tmp_a [2] $end
$var wire 1 nA i_q_tmp_a [1] $end
$var wire 1 oA i_q_tmp_a [0] $end
$var wire 1 pA i_q_tmp2_a [15] $end
$var wire 1 qA i_q_tmp2_a [14] $end
$var wire 1 rA i_q_tmp2_a [13] $end
$var wire 1 sA i_q_tmp2_a [12] $end
$var wire 1 tA i_q_tmp2_a [11] $end
$var wire 1 uA i_q_tmp2_a [10] $end
$var wire 1 vA i_q_tmp2_a [9] $end
$var wire 1 wA i_q_tmp2_a [8] $end
$var wire 1 xA i_q_tmp2_a [7] $end
$var wire 1 yA i_q_tmp2_a [6] $end
$var wire 1 zA i_q_tmp2_a [5] $end
$var wire 1 {A i_q_tmp2_a [4] $end
$var wire 1 |A i_q_tmp2_a [3] $end
$var wire 1 }A i_q_tmp2_a [2] $end
$var wire 1 ~A i_q_tmp2_a [1] $end
$var wire 1 !B i_q_tmp2_a [0] $end
$var wire 1 "B i_q_tmp_wren_a [15] $end
$var wire 1 #B i_q_tmp_wren_a [14] $end
$var wire 1 $B i_q_tmp_wren_a [13] $end
$var wire 1 %B i_q_tmp_wren_a [12] $end
$var wire 1 &B i_q_tmp_wren_a [11] $end
$var wire 1 'B i_q_tmp_wren_a [10] $end
$var wire 1 (B i_q_tmp_wren_a [9] $end
$var wire 1 )B i_q_tmp_wren_a [8] $end
$var wire 1 *B i_q_tmp_wren_a [7] $end
$var wire 1 +B i_q_tmp_wren_a [6] $end
$var wire 1 ,B i_q_tmp_wren_a [5] $end
$var wire 1 -B i_q_tmp_wren_a [4] $end
$var wire 1 .B i_q_tmp_wren_a [3] $end
$var wire 1 /B i_q_tmp_wren_a [2] $end
$var wire 1 0B i_q_tmp_wren_a [1] $end
$var wire 1 1B i_q_tmp_wren_a [0] $end
$var wire 1 2B i_q_tmp2_wren_a [15] $end
$var wire 1 3B i_q_tmp2_wren_a [14] $end
$var wire 1 4B i_q_tmp2_wren_a [13] $end
$var wire 1 5B i_q_tmp2_wren_a [12] $end
$var wire 1 6B i_q_tmp2_wren_a [11] $end
$var wire 1 7B i_q_tmp2_wren_a [10] $end
$var wire 1 8B i_q_tmp2_wren_a [9] $end
$var wire 1 9B i_q_tmp2_wren_a [8] $end
$var wire 1 :B i_q_tmp2_wren_a [7] $end
$var wire 1 ;B i_q_tmp2_wren_a [6] $end
$var wire 1 <B i_q_tmp2_wren_a [5] $end
$var wire 1 =B i_q_tmp2_wren_a [4] $end
$var wire 1 >B i_q_tmp2_wren_a [3] $end
$var wire 1 ?B i_q_tmp2_wren_a [2] $end
$var wire 1 @B i_q_tmp2_wren_a [1] $end
$var wire 1 AB i_q_tmp2_wren_a [0] $end
$var wire 1 BB i_q_tmp_wren_b [0] $end
$var wire 1 CB i_q_reg_b [0] $end
$var wire 1 DB i_q_tmp_b [0] $end
$var wire 1 EB i_q_tmp2_b [0] $end
$var wire 1 FB i_q_output_latch [0] $end
$var wire 1 GB i_q_ecc_reg_b [0] $end
$var wire 1 HB i_q_ecc_tmp_b [0] $end
$var wire 1 IB i_current_written_data_a [15] $end
$var wire 1 JB i_current_written_data_a [14] $end
$var wire 1 KB i_current_written_data_a [13] $end
$var wire 1 LB i_current_written_data_a [12] $end
$var wire 1 MB i_current_written_data_a [11] $end
$var wire 1 NB i_current_written_data_a [10] $end
$var wire 1 OB i_current_written_data_a [9] $end
$var wire 1 PB i_current_written_data_a [8] $end
$var wire 1 QB i_current_written_data_a [7] $end
$var wire 1 RB i_current_written_data_a [6] $end
$var wire 1 SB i_current_written_data_a [5] $end
$var wire 1 TB i_current_written_data_a [4] $end
$var wire 1 UB i_current_written_data_a [3] $end
$var wire 1 VB i_current_written_data_a [2] $end
$var wire 1 WB i_current_written_data_a [1] $end
$var wire 1 XB i_current_written_data_a [0] $end
$var wire 1 YB i_original_data_a [15] $end
$var wire 1 ZB i_original_data_a [14] $end
$var wire 1 [B i_original_data_a [13] $end
$var wire 1 \B i_original_data_a [12] $end
$var wire 1 ]B i_original_data_a [11] $end
$var wire 1 ^B i_original_data_a [10] $end
$var wire 1 _B i_original_data_a [9] $end
$var wire 1 `B i_original_data_a [8] $end
$var wire 1 aB i_original_data_a [7] $end
$var wire 1 bB i_original_data_a [6] $end
$var wire 1 cB i_original_data_a [5] $end
$var wire 1 dB i_original_data_a [4] $end
$var wire 1 eB i_original_data_a [3] $end
$var wire 1 fB i_original_data_a [2] $end
$var wire 1 gB i_original_data_a [1] $end
$var wire 1 hB i_original_data_a [0] $end
$var wire 1 iB i_original_data_b [0] $end
$var wire 1 jB i_byteena_mask_reg_a_x [15] $end
$var wire 1 kB i_byteena_mask_reg_a_x [14] $end
$var wire 1 lB i_byteena_mask_reg_a_x [13] $end
$var wire 1 mB i_byteena_mask_reg_a_x [12] $end
$var wire 1 nB i_byteena_mask_reg_a_x [11] $end
$var wire 1 oB i_byteena_mask_reg_a_x [10] $end
$var wire 1 pB i_byteena_mask_reg_a_x [9] $end
$var wire 1 qB i_byteena_mask_reg_a_x [8] $end
$var wire 1 rB i_byteena_mask_reg_a_x [7] $end
$var wire 1 sB i_byteena_mask_reg_a_x [6] $end
$var wire 1 tB i_byteena_mask_reg_a_x [5] $end
$var wire 1 uB i_byteena_mask_reg_a_x [4] $end
$var wire 1 vB i_byteena_mask_reg_a_x [3] $end
$var wire 1 wB i_byteena_mask_reg_a_x [2] $end
$var wire 1 xB i_byteena_mask_reg_a_x [1] $end
$var wire 1 yB i_byteena_mask_reg_a_x [0] $end
$var wire 1 zB i_byteena_mask_reg_b_x [0] $end
$var wire 1 {B i_byteena_mask_reg_a [15] $end
$var wire 1 |B i_byteena_mask_reg_a [14] $end
$var wire 1 }B i_byteena_mask_reg_a [13] $end
$var wire 1 ~B i_byteena_mask_reg_a [12] $end
$var wire 1 !C i_byteena_mask_reg_a [11] $end
$var wire 1 "C i_byteena_mask_reg_a [10] $end
$var wire 1 #C i_byteena_mask_reg_a [9] $end
$var wire 1 $C i_byteena_mask_reg_a [8] $end
$var wire 1 %C i_byteena_mask_reg_a [7] $end
$var wire 1 &C i_byteena_mask_reg_a [6] $end
$var wire 1 'C i_byteena_mask_reg_a [5] $end
$var wire 1 (C i_byteena_mask_reg_a [4] $end
$var wire 1 )C i_byteena_mask_reg_a [3] $end
$var wire 1 *C i_byteena_mask_reg_a [2] $end
$var wire 1 +C i_byteena_mask_reg_a [1] $end
$var wire 1 ,C i_byteena_mask_reg_a [0] $end
$var wire 1 -C i_byteena_mask_reg_b [0] $end
$var wire 1 .C i_byteena_mask_reg_a_out [15] $end
$var wire 1 /C i_byteena_mask_reg_a_out [14] $end
$var wire 1 0C i_byteena_mask_reg_a_out [13] $end
$var wire 1 1C i_byteena_mask_reg_a_out [12] $end
$var wire 1 2C i_byteena_mask_reg_a_out [11] $end
$var wire 1 3C i_byteena_mask_reg_a_out [10] $end
$var wire 1 4C i_byteena_mask_reg_a_out [9] $end
$var wire 1 5C i_byteena_mask_reg_a_out [8] $end
$var wire 1 6C i_byteena_mask_reg_a_out [7] $end
$var wire 1 7C i_byteena_mask_reg_a_out [6] $end
$var wire 1 8C i_byteena_mask_reg_a_out [5] $end
$var wire 1 9C i_byteena_mask_reg_a_out [4] $end
$var wire 1 :C i_byteena_mask_reg_a_out [3] $end
$var wire 1 ;C i_byteena_mask_reg_a_out [2] $end
$var wire 1 <C i_byteena_mask_reg_a_out [1] $end
$var wire 1 =C i_byteena_mask_reg_a_out [0] $end
$var wire 1 >C i_byteena_mask_reg_b_out [0] $end
$var wire 1 ?C i_byteena_mask_reg_a_out_b [15] $end
$var wire 1 @C i_byteena_mask_reg_a_out_b [14] $end
$var wire 1 AC i_byteena_mask_reg_a_out_b [13] $end
$var wire 1 BC i_byteena_mask_reg_a_out_b [12] $end
$var wire 1 CC i_byteena_mask_reg_a_out_b [11] $end
$var wire 1 DC i_byteena_mask_reg_a_out_b [10] $end
$var wire 1 EC i_byteena_mask_reg_a_out_b [9] $end
$var wire 1 FC i_byteena_mask_reg_a_out_b [8] $end
$var wire 1 GC i_byteena_mask_reg_a_out_b [7] $end
$var wire 1 HC i_byteena_mask_reg_a_out_b [6] $end
$var wire 1 IC i_byteena_mask_reg_a_out_b [5] $end
$var wire 1 JC i_byteena_mask_reg_a_out_b [4] $end
$var wire 1 KC i_byteena_mask_reg_a_out_b [3] $end
$var wire 1 LC i_byteena_mask_reg_a_out_b [2] $end
$var wire 1 MC i_byteena_mask_reg_a_out_b [1] $end
$var wire 1 NC i_byteena_mask_reg_a_out_b [0] $end
$var wire 1 OC i_byteena_mask_reg_b_out_a [0] $end
$var wire 1 PC i_address_reg_a [14] $end
$var wire 1 QC i_address_reg_a [13] $end
$var wire 1 RC i_address_reg_a [12] $end
$var wire 1 SC i_address_reg_a [11] $end
$var wire 1 TC i_address_reg_a [10] $end
$var wire 1 UC i_address_reg_a [9] $end
$var wire 1 VC i_address_reg_a [8] $end
$var wire 1 WC i_address_reg_a [7] $end
$var wire 1 XC i_address_reg_a [6] $end
$var wire 1 YC i_address_reg_a [5] $end
$var wire 1 ZC i_address_reg_a [4] $end
$var wire 1 [C i_address_reg_a [3] $end
$var wire 1 \C i_address_reg_a [2] $end
$var wire 1 ]C i_address_reg_a [1] $end
$var wire 1 ^C i_address_reg_a [0] $end
$var wire 1 _C i_address_reg_b [0] $end
$var wire 1 `C i_wren_reg_a $end
$var wire 1 aC i_wren_reg_b $end
$var wire 1 bC i_rden_reg_a $end
$var wire 1 cC i_rden_reg_b $end
$var wire 1 dC i_read_flag_a $end
$var wire 1 eC i_read_flag_b $end
$var wire 1 fC i_reread_flag_a $end
$var wire 1 gC i_reread_flag_b $end
$var wire 1 hC i_reread_flag2_a $end
$var wire 1 iC i_reread_flag2_b $end
$var wire 1 jC i_write_flag_a $end
$var wire 1 kC i_write_flag_b $end
$var wire 1 lC i_nmram_write_a $end
$var wire 1 mC i_nmram_write_b $end
$var wire 1 nC i_indata_aclr_a $end
$var wire 1 oC i_address_aclr_a $end
$var wire 1 pC i_wrcontrol_aclr_a $end
$var wire 1 qC i_indata_aclr_b $end
$var wire 1 rC i_address_aclr_b $end
$var wire 1 sC i_wrcontrol_aclr_b $end
$var wire 1 tC i_outdata_aclr_a $end
$var wire 1 uC i_outdata_aclr_b $end
$var wire 1 vC i_rdcontrol_aclr_b $end
$var wire 1 wC i_byteena_aclr_a $end
$var wire 1 xC i_byteena_aclr_b $end
$var wire 1 yC good_to_go_a $end
$var wire 1 zC good_to_go_b $end
$var wire 1 {C i_core_clocken_a $end
$var wire 1 |C i_core_clocken_b $end
$var wire 1 }C i_core_clocken_b0 $end
$var wire 1 ~C i_core_clocken_b1 $end
$var wire 1 !D i_inclocken0 $end
$var wire 1 "D i_input_clocken_b $end
$var wire 1 #D i_outdata_clken_b $end
$var wire 1 $D i_outdata_clken_a $end
$var wire 1 %D i_outlatch_clken_a $end
$var wire 1 &D i_outlatch_clken_b $end
$var wire 1 'D i_core_clocken_a_reg $end
$var wire 1 (D i_core_clocken_b_reg $end
$var wire 1 )D default_val $end
$var wire 1 *D i_data_zero_a [15] $end
$var wire 1 +D i_data_zero_a [14] $end
$var wire 1 ,D i_data_zero_a [13] $end
$var wire 1 -D i_data_zero_a [12] $end
$var wire 1 .D i_data_zero_a [11] $end
$var wire 1 /D i_data_zero_a [10] $end
$var wire 1 0D i_data_zero_a [9] $end
$var wire 1 1D i_data_zero_a [8] $end
$var wire 1 2D i_data_zero_a [7] $end
$var wire 1 3D i_data_zero_a [6] $end
$var wire 1 4D i_data_zero_a [5] $end
$var wire 1 5D i_data_zero_a [4] $end
$var wire 1 6D i_data_zero_a [3] $end
$var wire 1 7D i_data_zero_a [2] $end
$var wire 1 8D i_data_zero_a [1] $end
$var wire 1 9D i_data_zero_a [0] $end
$var wire 1 :D i_data_zero_b [0] $end
$var wire 1 ;D i_data_ones_a [15] $end
$var wire 1 <D i_data_ones_a [14] $end
$var wire 1 =D i_data_ones_a [13] $end
$var wire 1 >D i_data_ones_a [12] $end
$var wire 1 ?D i_data_ones_a [11] $end
$var wire 1 @D i_data_ones_a [10] $end
$var wire 1 AD i_data_ones_a [9] $end
$var wire 1 BD i_data_ones_a [8] $end
$var wire 1 CD i_data_ones_a [7] $end
$var wire 1 DD i_data_ones_a [6] $end
$var wire 1 ED i_data_ones_a [5] $end
$var wire 1 FD i_data_ones_a [4] $end
$var wire 1 GD i_data_ones_a [3] $end
$var wire 1 HD i_data_ones_a [2] $end
$var wire 1 ID i_data_ones_a [1] $end
$var wire 1 JD i_data_ones_a [0] $end
$var wire 1 KD i_data_ones_b [0] $end
$var wire 1 LD same_clock_pulse0 $end
$var wire 1 MD same_clock_pulse1 $end
$var wire 1 ND i_force_reread_a $end
$var wire 1 OD i_force_reread_a1 $end
$var wire 1 PD i_force_reread_b $end
$var wire 1 QD i_force_reread_b1 $end
$var wire 1 RD i_force_reread_signal_a $end
$var wire 1 SD i_force_reread_signal_b $end
$var wire 1 TD i_good_to_write_a $end
$var wire 1 UD i_good_to_write_b $end

$scope begin IFG02 $end
$upscope $end

$scope begin IFG03a $end
$upscope $end

$scope begin IFG15 $end
$upscope $end

$scope begin IFG172a $end
$upscope $end

$scope begin IFG50a $end
$upscope $end

$scope begin IFG51a $end
$upscope $end

$scope begin IFG52b $end
$upscope $end

$scope begin IFCLR01 $end
$upscope $end

$scope begin IFG53 $end
$upscope $end

$scope begin IFG57 $end
$upscope $end
$upscope $end
$upscope $end

$scope module b2v_inst8 $end
$var wire 1 VD address [14] $end
$var wire 1 WD address [13] $end
$var wire 1 XD address [12] $end
$var wire 1 YD address [11] $end
$var wire 1 ZD address [10] $end
$var wire 1 [D address [9] $end
$var wire 1 \D address [8] $end
$var wire 1 ]D address [7] $end
$var wire 1 ^D address [6] $end
$var wire 1 _D address [5] $end
$var wire 1 `D address [4] $end
$var wire 1 aD address [3] $end
$var wire 1 bD address [2] $end
$var wire 1 cD address [1] $end
$var wire 1 dD address [0] $end
$var wire 1 eD clock $end
$var wire 1 fD q [15] $end
$var wire 1 gD q [14] $end
$var wire 1 hD q [13] $end
$var wire 1 iD q [12] $end
$var wire 1 jD q [11] $end
$var wire 1 kD q [10] $end
$var wire 1 lD q [9] $end
$var wire 1 mD q [8] $end
$var wire 1 nD q [7] $end
$var wire 1 oD q [6] $end
$var wire 1 pD q [5] $end
$var wire 1 qD q [4] $end
$var wire 1 rD q [3] $end
$var wire 1 sD q [2] $end
$var wire 1 tD q [1] $end
$var wire 1 uD q [0] $end
$var wire 1 vD sub_wire0 [15] $end
$var wire 1 wD sub_wire0 [14] $end
$var wire 1 xD sub_wire0 [13] $end
$var wire 1 yD sub_wire0 [12] $end
$var wire 1 zD sub_wire0 [11] $end
$var wire 1 {D sub_wire0 [10] $end
$var wire 1 |D sub_wire0 [9] $end
$var wire 1 }D sub_wire0 [8] $end
$var wire 1 ~D sub_wire0 [7] $end
$var wire 1 !E sub_wire0 [6] $end
$var wire 1 "E sub_wire0 [5] $end
$var wire 1 #E sub_wire0 [4] $end
$var wire 1 $E sub_wire0 [3] $end
$var wire 1 %E sub_wire0 [2] $end
$var wire 1 &E sub_wire0 [1] $end
$var wire 1 'E sub_wire0 [0] $end

$scope module altsyncram_component $end
$var wire 1 (E wren_a $end
$var wire 1 )E wren_b $end
$var wire 1 *E rden_a $end
$var wire 1 +E rden_b $end
$var wire 1 ,E data_a [15] $end
$var wire 1 -E data_a [14] $end
$var wire 1 .E data_a [13] $end
$var wire 1 /E data_a [12] $end
$var wire 1 0E data_a [11] $end
$var wire 1 1E data_a [10] $end
$var wire 1 2E data_a [9] $end
$var wire 1 3E data_a [8] $end
$var wire 1 4E data_a [7] $end
$var wire 1 5E data_a [6] $end
$var wire 1 6E data_a [5] $end
$var wire 1 7E data_a [4] $end
$var wire 1 8E data_a [3] $end
$var wire 1 9E data_a [2] $end
$var wire 1 :E data_a [1] $end
$var wire 1 ;E data_a [0] $end
$var wire 1 <E data_b [0] $end
$var wire 1 VD address_a [14] $end
$var wire 1 WD address_a [13] $end
$var wire 1 XD address_a [12] $end
$var wire 1 YD address_a [11] $end
$var wire 1 ZD address_a [10] $end
$var wire 1 [D address_a [9] $end
$var wire 1 \D address_a [8] $end
$var wire 1 ]D address_a [7] $end
$var wire 1 ^D address_a [6] $end
$var wire 1 _D address_a [5] $end
$var wire 1 `D address_a [4] $end
$var wire 1 aD address_a [3] $end
$var wire 1 bD address_a [2] $end
$var wire 1 cD address_a [1] $end
$var wire 1 dD address_a [0] $end
$var wire 1 =E address_b [0] $end
$var wire 1 eD clock0 $end
$var wire 1 >E clock1 $end
$var wire 1 ?E clocken0 $end
$var wire 1 @E clocken1 $end
$var wire 1 AE clocken2 $end
$var wire 1 BE clocken3 $end
$var wire 1 CE aclr0 $end
$var wire 1 DE aclr1 $end
$var wire 1 EE addressstall_a $end
$var wire 1 FE addressstall_b $end
$var wire 1 GE byteena_a [0] $end
$var wire 1 HE byteena_b [0] $end
$var wire 1 vD q_a [15] $end
$var wire 1 wD q_a [14] $end
$var wire 1 xD q_a [13] $end
$var wire 1 yD q_a [12] $end
$var wire 1 zD q_a [11] $end
$var wire 1 {D q_a [10] $end
$var wire 1 |D q_a [9] $end
$var wire 1 }D q_a [8] $end
$var wire 1 ~D q_a [7] $end
$var wire 1 !E q_a [6] $end
$var wire 1 "E q_a [5] $end
$var wire 1 #E q_a [4] $end
$var wire 1 $E q_a [3] $end
$var wire 1 %E q_a [2] $end
$var wire 1 &E q_a [1] $end
$var wire 1 'E q_a [0] $end
$var wire 1 IE q_b [0] $end
$var wire 1 JE eccstatus [2] $end
$var wire 1 KE eccstatus [1] $end
$var wire 1 LE eccstatus [0] $end
$var wire 1 ME i_data_reg_a [15] $end
$var wire 1 NE i_data_reg_a [14] $end
$var wire 1 OE i_data_reg_a [13] $end
$var wire 1 PE i_data_reg_a [12] $end
$var wire 1 QE i_data_reg_a [11] $end
$var wire 1 RE i_data_reg_a [10] $end
$var wire 1 SE i_data_reg_a [9] $end
$var wire 1 TE i_data_reg_a [8] $end
$var wire 1 UE i_data_reg_a [7] $end
$var wire 1 VE i_data_reg_a [6] $end
$var wire 1 WE i_data_reg_a [5] $end
$var wire 1 XE i_data_reg_a [4] $end
$var wire 1 YE i_data_reg_a [3] $end
$var wire 1 ZE i_data_reg_a [2] $end
$var wire 1 [E i_data_reg_a [1] $end
$var wire 1 \E i_data_reg_a [0] $end
$var wire 1 ]E i_data_reg_b [0] $end
$var wire 1 ^E i_q_reg_a [15] $end
$var wire 1 _E i_q_reg_a [14] $end
$var wire 1 `E i_q_reg_a [13] $end
$var wire 1 aE i_q_reg_a [12] $end
$var wire 1 bE i_q_reg_a [11] $end
$var wire 1 cE i_q_reg_a [10] $end
$var wire 1 dE i_q_reg_a [9] $end
$var wire 1 eE i_q_reg_a [8] $end
$var wire 1 fE i_q_reg_a [7] $end
$var wire 1 gE i_q_reg_a [6] $end
$var wire 1 hE i_q_reg_a [5] $end
$var wire 1 iE i_q_reg_a [4] $end
$var wire 1 jE i_q_reg_a [3] $end
$var wire 1 kE i_q_reg_a [2] $end
$var wire 1 lE i_q_reg_a [1] $end
$var wire 1 mE i_q_reg_a [0] $end
$var wire 1 nE i_q_tmp_a [15] $end
$var wire 1 oE i_q_tmp_a [14] $end
$var wire 1 pE i_q_tmp_a [13] $end
$var wire 1 qE i_q_tmp_a [12] $end
$var wire 1 rE i_q_tmp_a [11] $end
$var wire 1 sE i_q_tmp_a [10] $end
$var wire 1 tE i_q_tmp_a [9] $end
$var wire 1 uE i_q_tmp_a [8] $end
$var wire 1 vE i_q_tmp_a [7] $end
$var wire 1 wE i_q_tmp_a [6] $end
$var wire 1 xE i_q_tmp_a [5] $end
$var wire 1 yE i_q_tmp_a [4] $end
$var wire 1 zE i_q_tmp_a [3] $end
$var wire 1 {E i_q_tmp_a [2] $end
$var wire 1 |E i_q_tmp_a [1] $end
$var wire 1 }E i_q_tmp_a [0] $end
$var wire 1 ~E i_q_tmp2_a [15] $end
$var wire 1 !F i_q_tmp2_a [14] $end
$var wire 1 "F i_q_tmp2_a [13] $end
$var wire 1 #F i_q_tmp2_a [12] $end
$var wire 1 $F i_q_tmp2_a [11] $end
$var wire 1 %F i_q_tmp2_a [10] $end
$var wire 1 &F i_q_tmp2_a [9] $end
$var wire 1 'F i_q_tmp2_a [8] $end
$var wire 1 (F i_q_tmp2_a [7] $end
$var wire 1 )F i_q_tmp2_a [6] $end
$var wire 1 *F i_q_tmp2_a [5] $end
$var wire 1 +F i_q_tmp2_a [4] $end
$var wire 1 ,F i_q_tmp2_a [3] $end
$var wire 1 -F i_q_tmp2_a [2] $end
$var wire 1 .F i_q_tmp2_a [1] $end
$var wire 1 /F i_q_tmp2_a [0] $end
$var wire 1 0F i_q_tmp_wren_a [15] $end
$var wire 1 1F i_q_tmp_wren_a [14] $end
$var wire 1 2F i_q_tmp_wren_a [13] $end
$var wire 1 3F i_q_tmp_wren_a [12] $end
$var wire 1 4F i_q_tmp_wren_a [11] $end
$var wire 1 5F i_q_tmp_wren_a [10] $end
$var wire 1 6F i_q_tmp_wren_a [9] $end
$var wire 1 7F i_q_tmp_wren_a [8] $end
$var wire 1 8F i_q_tmp_wren_a [7] $end
$var wire 1 9F i_q_tmp_wren_a [6] $end
$var wire 1 :F i_q_tmp_wren_a [5] $end
$var wire 1 ;F i_q_tmp_wren_a [4] $end
$var wire 1 <F i_q_tmp_wren_a [3] $end
$var wire 1 =F i_q_tmp_wren_a [2] $end
$var wire 1 >F i_q_tmp_wren_a [1] $end
$var wire 1 ?F i_q_tmp_wren_a [0] $end
$var wire 1 @F i_q_tmp2_wren_a [15] $end
$var wire 1 AF i_q_tmp2_wren_a [14] $end
$var wire 1 BF i_q_tmp2_wren_a [13] $end
$var wire 1 CF i_q_tmp2_wren_a [12] $end
$var wire 1 DF i_q_tmp2_wren_a [11] $end
$var wire 1 EF i_q_tmp2_wren_a [10] $end
$var wire 1 FF i_q_tmp2_wren_a [9] $end
$var wire 1 GF i_q_tmp2_wren_a [8] $end
$var wire 1 HF i_q_tmp2_wren_a [7] $end
$var wire 1 IF i_q_tmp2_wren_a [6] $end
$var wire 1 JF i_q_tmp2_wren_a [5] $end
$var wire 1 KF i_q_tmp2_wren_a [4] $end
$var wire 1 LF i_q_tmp2_wren_a [3] $end
$var wire 1 MF i_q_tmp2_wren_a [2] $end
$var wire 1 NF i_q_tmp2_wren_a [1] $end
$var wire 1 OF i_q_tmp2_wren_a [0] $end
$var wire 1 PF i_q_tmp_wren_b [0] $end
$var wire 1 QF i_q_reg_b [0] $end
$var wire 1 RF i_q_tmp_b [0] $end
$var wire 1 SF i_q_tmp2_b [0] $end
$var wire 1 TF i_q_output_latch [0] $end
$var wire 1 UF i_q_ecc_reg_b [0] $end
$var wire 1 VF i_q_ecc_tmp_b [0] $end
$var wire 1 WF i_current_written_data_a [15] $end
$var wire 1 XF i_current_written_data_a [14] $end
$var wire 1 YF i_current_written_data_a [13] $end
$var wire 1 ZF i_current_written_data_a [12] $end
$var wire 1 [F i_current_written_data_a [11] $end
$var wire 1 \F i_current_written_data_a [10] $end
$var wire 1 ]F i_current_written_data_a [9] $end
$var wire 1 ^F i_current_written_data_a [8] $end
$var wire 1 _F i_current_written_data_a [7] $end
$var wire 1 `F i_current_written_data_a [6] $end
$var wire 1 aF i_current_written_data_a [5] $end
$var wire 1 bF i_current_written_data_a [4] $end
$var wire 1 cF i_current_written_data_a [3] $end
$var wire 1 dF i_current_written_data_a [2] $end
$var wire 1 eF i_current_written_data_a [1] $end
$var wire 1 fF i_current_written_data_a [0] $end
$var wire 1 gF i_original_data_a [15] $end
$var wire 1 hF i_original_data_a [14] $end
$var wire 1 iF i_original_data_a [13] $end
$var wire 1 jF i_original_data_a [12] $end
$var wire 1 kF i_original_data_a [11] $end
$var wire 1 lF i_original_data_a [10] $end
$var wire 1 mF i_original_data_a [9] $end
$var wire 1 nF i_original_data_a [8] $end
$var wire 1 oF i_original_data_a [7] $end
$var wire 1 pF i_original_data_a [6] $end
$var wire 1 qF i_original_data_a [5] $end
$var wire 1 rF i_original_data_a [4] $end
$var wire 1 sF i_original_data_a [3] $end
$var wire 1 tF i_original_data_a [2] $end
$var wire 1 uF i_original_data_a [1] $end
$var wire 1 vF i_original_data_a [0] $end
$var wire 1 wF i_original_data_b [0] $end
$var wire 1 xF i_byteena_mask_reg_a_x [15] $end
$var wire 1 yF i_byteena_mask_reg_a_x [14] $end
$var wire 1 zF i_byteena_mask_reg_a_x [13] $end
$var wire 1 {F i_byteena_mask_reg_a_x [12] $end
$var wire 1 |F i_byteena_mask_reg_a_x [11] $end
$var wire 1 }F i_byteena_mask_reg_a_x [10] $end
$var wire 1 ~F i_byteena_mask_reg_a_x [9] $end
$var wire 1 !G i_byteena_mask_reg_a_x [8] $end
$var wire 1 "G i_byteena_mask_reg_a_x [7] $end
$var wire 1 #G i_byteena_mask_reg_a_x [6] $end
$var wire 1 $G i_byteena_mask_reg_a_x [5] $end
$var wire 1 %G i_byteena_mask_reg_a_x [4] $end
$var wire 1 &G i_byteena_mask_reg_a_x [3] $end
$var wire 1 'G i_byteena_mask_reg_a_x [2] $end
$var wire 1 (G i_byteena_mask_reg_a_x [1] $end
$var wire 1 )G i_byteena_mask_reg_a_x [0] $end
$var wire 1 *G i_byteena_mask_reg_b_x [0] $end
$var wire 1 +G i_byteena_mask_reg_a [15] $end
$var wire 1 ,G i_byteena_mask_reg_a [14] $end
$var wire 1 -G i_byteena_mask_reg_a [13] $end
$var wire 1 .G i_byteena_mask_reg_a [12] $end
$var wire 1 /G i_byteena_mask_reg_a [11] $end
$var wire 1 0G i_byteena_mask_reg_a [10] $end
$var wire 1 1G i_byteena_mask_reg_a [9] $end
$var wire 1 2G i_byteena_mask_reg_a [8] $end
$var wire 1 3G i_byteena_mask_reg_a [7] $end
$var wire 1 4G i_byteena_mask_reg_a [6] $end
$var wire 1 5G i_byteena_mask_reg_a [5] $end
$var wire 1 6G i_byteena_mask_reg_a [4] $end
$var wire 1 7G i_byteena_mask_reg_a [3] $end
$var wire 1 8G i_byteena_mask_reg_a [2] $end
$var wire 1 9G i_byteena_mask_reg_a [1] $end
$var wire 1 :G i_byteena_mask_reg_a [0] $end
$var wire 1 ;G i_byteena_mask_reg_b [0] $end
$var wire 1 <G i_byteena_mask_reg_a_out [15] $end
$var wire 1 =G i_byteena_mask_reg_a_out [14] $end
$var wire 1 >G i_byteena_mask_reg_a_out [13] $end
$var wire 1 ?G i_byteena_mask_reg_a_out [12] $end
$var wire 1 @G i_byteena_mask_reg_a_out [11] $end
$var wire 1 AG i_byteena_mask_reg_a_out [10] $end
$var wire 1 BG i_byteena_mask_reg_a_out [9] $end
$var wire 1 CG i_byteena_mask_reg_a_out [8] $end
$var wire 1 DG i_byteena_mask_reg_a_out [7] $end
$var wire 1 EG i_byteena_mask_reg_a_out [6] $end
$var wire 1 FG i_byteena_mask_reg_a_out [5] $end
$var wire 1 GG i_byteena_mask_reg_a_out [4] $end
$var wire 1 HG i_byteena_mask_reg_a_out [3] $end
$var wire 1 IG i_byteena_mask_reg_a_out [2] $end
$var wire 1 JG i_byteena_mask_reg_a_out [1] $end
$var wire 1 KG i_byteena_mask_reg_a_out [0] $end
$var wire 1 LG i_byteena_mask_reg_b_out [0] $end
$var wire 1 MG i_byteena_mask_reg_a_out_b [15] $end
$var wire 1 NG i_byteena_mask_reg_a_out_b [14] $end
$var wire 1 OG i_byteena_mask_reg_a_out_b [13] $end
$var wire 1 PG i_byteena_mask_reg_a_out_b [12] $end
$var wire 1 QG i_byteena_mask_reg_a_out_b [11] $end
$var wire 1 RG i_byteena_mask_reg_a_out_b [10] $end
$var wire 1 SG i_byteena_mask_reg_a_out_b [9] $end
$var wire 1 TG i_byteena_mask_reg_a_out_b [8] $end
$var wire 1 UG i_byteena_mask_reg_a_out_b [7] $end
$var wire 1 VG i_byteena_mask_reg_a_out_b [6] $end
$var wire 1 WG i_byteena_mask_reg_a_out_b [5] $end
$var wire 1 XG i_byteena_mask_reg_a_out_b [4] $end
$var wire 1 YG i_byteena_mask_reg_a_out_b [3] $end
$var wire 1 ZG i_byteena_mask_reg_a_out_b [2] $end
$var wire 1 [G i_byteena_mask_reg_a_out_b [1] $end
$var wire 1 \G i_byteena_mask_reg_a_out_b [0] $end
$var wire 1 ]G i_byteena_mask_reg_b_out_a [0] $end
$var wire 1 ^G i_address_reg_a [14] $end
$var wire 1 _G i_address_reg_a [13] $end
$var wire 1 `G i_address_reg_a [12] $end
$var wire 1 aG i_address_reg_a [11] $end
$var wire 1 bG i_address_reg_a [10] $end
$var wire 1 cG i_address_reg_a [9] $end
$var wire 1 dG i_address_reg_a [8] $end
$var wire 1 eG i_address_reg_a [7] $end
$var wire 1 fG i_address_reg_a [6] $end
$var wire 1 gG i_address_reg_a [5] $end
$var wire 1 hG i_address_reg_a [4] $end
$var wire 1 iG i_address_reg_a [3] $end
$var wire 1 jG i_address_reg_a [2] $end
$var wire 1 kG i_address_reg_a [1] $end
$var wire 1 lG i_address_reg_a [0] $end
$var wire 1 mG i_address_reg_b [0] $end
$var wire 1 nG i_wren_reg_a $end
$var wire 1 oG i_wren_reg_b $end
$var wire 1 pG i_rden_reg_a $end
$var wire 1 qG i_rden_reg_b $end
$var wire 1 rG i_read_flag_a $end
$var wire 1 sG i_read_flag_b $end
$var wire 1 tG i_reread_flag_a $end
$var wire 1 uG i_reread_flag_b $end
$var wire 1 vG i_reread_flag2_a $end
$var wire 1 wG i_reread_flag2_b $end
$var wire 1 xG i_write_flag_a $end
$var wire 1 yG i_write_flag_b $end
$var wire 1 zG i_nmram_write_a $end
$var wire 1 {G i_nmram_write_b $end
$var wire 1 |G i_indata_aclr_a $end
$var wire 1 }G i_address_aclr_a $end
$var wire 1 ~G i_wrcontrol_aclr_a $end
$var wire 1 !H i_indata_aclr_b $end
$var wire 1 "H i_address_aclr_b $end
$var wire 1 #H i_wrcontrol_aclr_b $end
$var wire 1 $H i_outdata_aclr_a $end
$var wire 1 %H i_outdata_aclr_b $end
$var wire 1 &H i_rdcontrol_aclr_b $end
$var wire 1 'H i_byteena_aclr_a $end
$var wire 1 (H i_byteena_aclr_b $end
$var wire 1 )H good_to_go_a $end
$var wire 1 *H good_to_go_b $end
$var wire 1 +H i_core_clocken_a $end
$var wire 1 ,H i_core_clocken_b $end
$var wire 1 -H i_core_clocken_b0 $end
$var wire 1 .H i_core_clocken_b1 $end
$var wire 1 /H i_inclocken0 $end
$var wire 1 0H i_input_clocken_b $end
$var wire 1 1H i_outdata_clken_b $end
$var wire 1 2H i_outdata_clken_a $end
$var wire 1 3H i_outlatch_clken_a $end
$var wire 1 4H i_outlatch_clken_b $end
$var wire 1 5H i_core_clocken_a_reg $end
$var wire 1 6H i_core_clocken_b_reg $end
$var wire 1 7H default_val $end
$var wire 1 8H i_data_zero_a [15] $end
$var wire 1 9H i_data_zero_a [14] $end
$var wire 1 :H i_data_zero_a [13] $end
$var wire 1 ;H i_data_zero_a [12] $end
$var wire 1 <H i_data_zero_a [11] $end
$var wire 1 =H i_data_zero_a [10] $end
$var wire 1 >H i_data_zero_a [9] $end
$var wire 1 ?H i_data_zero_a [8] $end
$var wire 1 @H i_data_zero_a [7] $end
$var wire 1 AH i_data_zero_a [6] $end
$var wire 1 BH i_data_zero_a [5] $end
$var wire 1 CH i_data_zero_a [4] $end
$var wire 1 DH i_data_zero_a [3] $end
$var wire 1 EH i_data_zero_a [2] $end
$var wire 1 FH i_data_zero_a [1] $end
$var wire 1 GH i_data_zero_a [0] $end
$var wire 1 HH i_data_zero_b [0] $end
$var wire 1 IH i_data_ones_a [15] $end
$var wire 1 JH i_data_ones_a [14] $end
$var wire 1 KH i_data_ones_a [13] $end
$var wire 1 LH i_data_ones_a [12] $end
$var wire 1 MH i_data_ones_a [11] $end
$var wire 1 NH i_data_ones_a [10] $end
$var wire 1 OH i_data_ones_a [9] $end
$var wire 1 PH i_data_ones_a [8] $end
$var wire 1 QH i_data_ones_a [7] $end
$var wire 1 RH i_data_ones_a [6] $end
$var wire 1 SH i_data_ones_a [5] $end
$var wire 1 TH i_data_ones_a [4] $end
$var wire 1 UH i_data_ones_a [3] $end
$var wire 1 VH i_data_ones_a [2] $end
$var wire 1 WH i_data_ones_a [1] $end
$var wire 1 XH i_data_ones_a [0] $end
$var wire 1 YH i_data_ones_b [0] $end
$var wire 1 ZH same_clock_pulse0 $end
$var wire 1 [H same_clock_pulse1 $end
$var wire 1 \H i_force_reread_a $end
$var wire 1 ]H i_force_reread_a1 $end
$var wire 1 ^H i_force_reread_b $end
$var wire 1 _H i_force_reread_b1 $end
$var wire 1 `H i_force_reread_signal_a $end
$var wire 1 aH i_force_reread_signal_b $end
$var wire 1 bH i_good_to_write_a $end
$var wire 1 cH i_good_to_write_b $end

$scope begin IFG02 $end
$upscope $end

$scope begin IFG03a $end
$upscope $end

$scope begin IFG15 $end
$upscope $end

$scope begin IFG172a $end
$upscope $end

$scope begin IFG50a $end
$upscope $end

$scope begin IFG51a $end
$upscope $end

$scope begin IFG52b $end
$upscope $end

$scope begin IFCLR01 $end
$upscope $end

$scope begin IFG53 $end
$upscope $end

$scope begin IFG57 $end
$upscope $end
$upscope $end
$upscope $end

$scope module b2v_inst9 $end
$var wire 1 dH address [7] $end
$var wire 1 eH address [6] $end
$var wire 1 fH address [5] $end
$var wire 1 gH address [4] $end
$var wire 1 hH address [3] $end
$var wire 1 iH address [2] $end
$var wire 1 jH address [1] $end
$var wire 1 kH address [0] $end
$var wire 1 lH clock $end
$var wire 1 mH q [15] $end
$var wire 1 nH q [14] $end
$var wire 1 oH q [13] $end
$var wire 1 pH q [12] $end
$var wire 1 qH q [11] $end
$var wire 1 rH q [10] $end
$var wire 1 sH q [9] $end
$var wire 1 tH q [8] $end
$var wire 1 uH q [7] $end
$var wire 1 vH q [6] $end
$var wire 1 wH q [5] $end
$var wire 1 xH q [4] $end
$var wire 1 yH q [3] $end
$var wire 1 zH q [2] $end
$var wire 1 {H q [1] $end
$var wire 1 |H q [0] $end
$var wire 1 }H sub_wire0 [15] $end
$var wire 1 ~H sub_wire0 [14] $end
$var wire 1 !I sub_wire0 [13] $end
$var wire 1 "I sub_wire0 [12] $end
$var wire 1 #I sub_wire0 [11] $end
$var wire 1 $I sub_wire0 [10] $end
$var wire 1 %I sub_wire0 [9] $end
$var wire 1 &I sub_wire0 [8] $end
$var wire 1 'I sub_wire0 [7] $end
$var wire 1 (I sub_wire0 [6] $end
$var wire 1 )I sub_wire0 [5] $end
$var wire 1 *I sub_wire0 [4] $end
$var wire 1 +I sub_wire0 [3] $end
$var wire 1 ,I sub_wire0 [2] $end
$var wire 1 -I sub_wire0 [1] $end
$var wire 1 .I sub_wire0 [0] $end

$scope module altsyncram_component $end
$var wire 1 /I wren_a $end
$var wire 1 0I wren_b $end
$var wire 1 1I rden_a $end
$var wire 1 2I rden_b $end
$var wire 1 3I data_a [15] $end
$var wire 1 4I data_a [14] $end
$var wire 1 5I data_a [13] $end
$var wire 1 6I data_a [12] $end
$var wire 1 7I data_a [11] $end
$var wire 1 8I data_a [10] $end
$var wire 1 9I data_a [9] $end
$var wire 1 :I data_a [8] $end
$var wire 1 ;I data_a [7] $end
$var wire 1 <I data_a [6] $end
$var wire 1 =I data_a [5] $end
$var wire 1 >I data_a [4] $end
$var wire 1 ?I data_a [3] $end
$var wire 1 @I data_a [2] $end
$var wire 1 AI data_a [1] $end
$var wire 1 BI data_a [0] $end
$var wire 1 CI data_b [0] $end
$var wire 1 dH address_a [7] $end
$var wire 1 eH address_a [6] $end
$var wire 1 fH address_a [5] $end
$var wire 1 gH address_a [4] $end
$var wire 1 hH address_a [3] $end
$var wire 1 iH address_a [2] $end
$var wire 1 jH address_a [1] $end
$var wire 1 kH address_a [0] $end
$var wire 1 DI address_b [0] $end
$var wire 1 lH clock0 $end
$var wire 1 EI clock1 $end
$var wire 1 FI clocken0 $end
$var wire 1 GI clocken1 $end
$var wire 1 HI clocken2 $end
$var wire 1 II clocken3 $end
$var wire 1 JI aclr0 $end
$var wire 1 KI aclr1 $end
$var wire 1 LI addressstall_a $end
$var wire 1 MI addressstall_b $end
$var wire 1 NI byteena_a [0] $end
$var wire 1 OI byteena_b [0] $end
$var wire 1 }H q_a [15] $end
$var wire 1 ~H q_a [14] $end
$var wire 1 !I q_a [13] $end
$var wire 1 "I q_a [12] $end
$var wire 1 #I q_a [11] $end
$var wire 1 $I q_a [10] $end
$var wire 1 %I q_a [9] $end
$var wire 1 &I q_a [8] $end
$var wire 1 'I q_a [7] $end
$var wire 1 (I q_a [6] $end
$var wire 1 )I q_a [5] $end
$var wire 1 *I q_a [4] $end
$var wire 1 +I q_a [3] $end
$var wire 1 ,I q_a [2] $end
$var wire 1 -I q_a [1] $end
$var wire 1 .I q_a [0] $end
$var wire 1 PI q_b [0] $end
$var wire 1 QI eccstatus [2] $end
$var wire 1 RI eccstatus [1] $end
$var wire 1 SI eccstatus [0] $end
$var wire 1 TI i_data_reg_a [15] $end
$var wire 1 UI i_data_reg_a [14] $end
$var wire 1 VI i_data_reg_a [13] $end
$var wire 1 WI i_data_reg_a [12] $end
$var wire 1 XI i_data_reg_a [11] $end
$var wire 1 YI i_data_reg_a [10] $end
$var wire 1 ZI i_data_reg_a [9] $end
$var wire 1 [I i_data_reg_a [8] $end
$var wire 1 \I i_data_reg_a [7] $end
$var wire 1 ]I i_data_reg_a [6] $end
$var wire 1 ^I i_data_reg_a [5] $end
$var wire 1 _I i_data_reg_a [4] $end
$var wire 1 `I i_data_reg_a [3] $end
$var wire 1 aI i_data_reg_a [2] $end
$var wire 1 bI i_data_reg_a [1] $end
$var wire 1 cI i_data_reg_a [0] $end
$var wire 1 dI i_data_reg_b [0] $end
$var wire 1 eI i_q_reg_a [15] $end
$var wire 1 fI i_q_reg_a [14] $end
$var wire 1 gI i_q_reg_a [13] $end
$var wire 1 hI i_q_reg_a [12] $end
$var wire 1 iI i_q_reg_a [11] $end
$var wire 1 jI i_q_reg_a [10] $end
$var wire 1 kI i_q_reg_a [9] $end
$var wire 1 lI i_q_reg_a [8] $end
$var wire 1 mI i_q_reg_a [7] $end
$var wire 1 nI i_q_reg_a [6] $end
$var wire 1 oI i_q_reg_a [5] $end
$var wire 1 pI i_q_reg_a [4] $end
$var wire 1 qI i_q_reg_a [3] $end
$var wire 1 rI i_q_reg_a [2] $end
$var wire 1 sI i_q_reg_a [1] $end
$var wire 1 tI i_q_reg_a [0] $end
$var wire 1 uI i_q_tmp_a [15] $end
$var wire 1 vI i_q_tmp_a [14] $end
$var wire 1 wI i_q_tmp_a [13] $end
$var wire 1 xI i_q_tmp_a [12] $end
$var wire 1 yI i_q_tmp_a [11] $end
$var wire 1 zI i_q_tmp_a [10] $end
$var wire 1 {I i_q_tmp_a [9] $end
$var wire 1 |I i_q_tmp_a [8] $end
$var wire 1 }I i_q_tmp_a [7] $end
$var wire 1 ~I i_q_tmp_a [6] $end
$var wire 1 !J i_q_tmp_a [5] $end
$var wire 1 "J i_q_tmp_a [4] $end
$var wire 1 #J i_q_tmp_a [3] $end
$var wire 1 $J i_q_tmp_a [2] $end
$var wire 1 %J i_q_tmp_a [1] $end
$var wire 1 &J i_q_tmp_a [0] $end
$var wire 1 'J i_q_tmp2_a [15] $end
$var wire 1 (J i_q_tmp2_a [14] $end
$var wire 1 )J i_q_tmp2_a [13] $end
$var wire 1 *J i_q_tmp2_a [12] $end
$var wire 1 +J i_q_tmp2_a [11] $end
$var wire 1 ,J i_q_tmp2_a [10] $end
$var wire 1 -J i_q_tmp2_a [9] $end
$var wire 1 .J i_q_tmp2_a [8] $end
$var wire 1 /J i_q_tmp2_a [7] $end
$var wire 1 0J i_q_tmp2_a [6] $end
$var wire 1 1J i_q_tmp2_a [5] $end
$var wire 1 2J i_q_tmp2_a [4] $end
$var wire 1 3J i_q_tmp2_a [3] $end
$var wire 1 4J i_q_tmp2_a [2] $end
$var wire 1 5J i_q_tmp2_a [1] $end
$var wire 1 6J i_q_tmp2_a [0] $end
$var wire 1 7J i_q_tmp_wren_a [15] $end
$var wire 1 8J i_q_tmp_wren_a [14] $end
$var wire 1 9J i_q_tmp_wren_a [13] $end
$var wire 1 :J i_q_tmp_wren_a [12] $end
$var wire 1 ;J i_q_tmp_wren_a [11] $end
$var wire 1 <J i_q_tmp_wren_a [10] $end
$var wire 1 =J i_q_tmp_wren_a [9] $end
$var wire 1 >J i_q_tmp_wren_a [8] $end
$var wire 1 ?J i_q_tmp_wren_a [7] $end
$var wire 1 @J i_q_tmp_wren_a [6] $end
$var wire 1 AJ i_q_tmp_wren_a [5] $end
$var wire 1 BJ i_q_tmp_wren_a [4] $end
$var wire 1 CJ i_q_tmp_wren_a [3] $end
$var wire 1 DJ i_q_tmp_wren_a [2] $end
$var wire 1 EJ i_q_tmp_wren_a [1] $end
$var wire 1 FJ i_q_tmp_wren_a [0] $end
$var wire 1 GJ i_q_tmp2_wren_a [15] $end
$var wire 1 HJ i_q_tmp2_wren_a [14] $end
$var wire 1 IJ i_q_tmp2_wren_a [13] $end
$var wire 1 JJ i_q_tmp2_wren_a [12] $end
$var wire 1 KJ i_q_tmp2_wren_a [11] $end
$var wire 1 LJ i_q_tmp2_wren_a [10] $end
$var wire 1 MJ i_q_tmp2_wren_a [9] $end
$var wire 1 NJ i_q_tmp2_wren_a [8] $end
$var wire 1 OJ i_q_tmp2_wren_a [7] $end
$var wire 1 PJ i_q_tmp2_wren_a [6] $end
$var wire 1 QJ i_q_tmp2_wren_a [5] $end
$var wire 1 RJ i_q_tmp2_wren_a [4] $end
$var wire 1 SJ i_q_tmp2_wren_a [3] $end
$var wire 1 TJ i_q_tmp2_wren_a [2] $end
$var wire 1 UJ i_q_tmp2_wren_a [1] $end
$var wire 1 VJ i_q_tmp2_wren_a [0] $end
$var wire 1 WJ i_q_tmp_wren_b [0] $end
$var wire 1 XJ i_q_reg_b [0] $end
$var wire 1 YJ i_q_tmp_b [0] $end
$var wire 1 ZJ i_q_tmp2_b [0] $end
$var wire 1 [J i_q_output_latch [0] $end
$var wire 1 \J i_q_ecc_reg_b [0] $end
$var wire 1 ]J i_q_ecc_tmp_b [0] $end
$var wire 1 ^J i_current_written_data_a [15] $end
$var wire 1 _J i_current_written_data_a [14] $end
$var wire 1 `J i_current_written_data_a [13] $end
$var wire 1 aJ i_current_written_data_a [12] $end
$var wire 1 bJ i_current_written_data_a [11] $end
$var wire 1 cJ i_current_written_data_a [10] $end
$var wire 1 dJ i_current_written_data_a [9] $end
$var wire 1 eJ i_current_written_data_a [8] $end
$var wire 1 fJ i_current_written_data_a [7] $end
$var wire 1 gJ i_current_written_data_a [6] $end
$var wire 1 hJ i_current_written_data_a [5] $end
$var wire 1 iJ i_current_written_data_a [4] $end
$var wire 1 jJ i_current_written_data_a [3] $end
$var wire 1 kJ i_current_written_data_a [2] $end
$var wire 1 lJ i_current_written_data_a [1] $end
$var wire 1 mJ i_current_written_data_a [0] $end
$var wire 1 nJ i_original_data_a [15] $end
$var wire 1 oJ i_original_data_a [14] $end
$var wire 1 pJ i_original_data_a [13] $end
$var wire 1 qJ i_original_data_a [12] $end
$var wire 1 rJ i_original_data_a [11] $end
$var wire 1 sJ i_original_data_a [10] $end
$var wire 1 tJ i_original_data_a [9] $end
$var wire 1 uJ i_original_data_a [8] $end
$var wire 1 vJ i_original_data_a [7] $end
$var wire 1 wJ i_original_data_a [6] $end
$var wire 1 xJ i_original_data_a [5] $end
$var wire 1 yJ i_original_data_a [4] $end
$var wire 1 zJ i_original_data_a [3] $end
$var wire 1 {J i_original_data_a [2] $end
$var wire 1 |J i_original_data_a [1] $end
$var wire 1 }J i_original_data_a [0] $end
$var wire 1 ~J i_original_data_b [0] $end
$var wire 1 !K i_byteena_mask_reg_a_x [15] $end
$var wire 1 "K i_byteena_mask_reg_a_x [14] $end
$var wire 1 #K i_byteena_mask_reg_a_x [13] $end
$var wire 1 $K i_byteena_mask_reg_a_x [12] $end
$var wire 1 %K i_byteena_mask_reg_a_x [11] $end
$var wire 1 &K i_byteena_mask_reg_a_x [10] $end
$var wire 1 'K i_byteena_mask_reg_a_x [9] $end
$var wire 1 (K i_byteena_mask_reg_a_x [8] $end
$var wire 1 )K i_byteena_mask_reg_a_x [7] $end
$var wire 1 *K i_byteena_mask_reg_a_x [6] $end
$var wire 1 +K i_byteena_mask_reg_a_x [5] $end
$var wire 1 ,K i_byteena_mask_reg_a_x [4] $end
$var wire 1 -K i_byteena_mask_reg_a_x [3] $end
$var wire 1 .K i_byteena_mask_reg_a_x [2] $end
$var wire 1 /K i_byteena_mask_reg_a_x [1] $end
$var wire 1 0K i_byteena_mask_reg_a_x [0] $end
$var wire 1 1K i_byteena_mask_reg_b_x [0] $end
$var wire 1 2K i_byteena_mask_reg_a [15] $end
$var wire 1 3K i_byteena_mask_reg_a [14] $end
$var wire 1 4K i_byteena_mask_reg_a [13] $end
$var wire 1 5K i_byteena_mask_reg_a [12] $end
$var wire 1 6K i_byteena_mask_reg_a [11] $end
$var wire 1 7K i_byteena_mask_reg_a [10] $end
$var wire 1 8K i_byteena_mask_reg_a [9] $end
$var wire 1 9K i_byteena_mask_reg_a [8] $end
$var wire 1 :K i_byteena_mask_reg_a [7] $end
$var wire 1 ;K i_byteena_mask_reg_a [6] $end
$var wire 1 <K i_byteena_mask_reg_a [5] $end
$var wire 1 =K i_byteena_mask_reg_a [4] $end
$var wire 1 >K i_byteena_mask_reg_a [3] $end
$var wire 1 ?K i_byteena_mask_reg_a [2] $end
$var wire 1 @K i_byteena_mask_reg_a [1] $end
$var wire 1 AK i_byteena_mask_reg_a [0] $end
$var wire 1 BK i_byteena_mask_reg_b [0] $end
$var wire 1 CK i_byteena_mask_reg_a_out [15] $end
$var wire 1 DK i_byteena_mask_reg_a_out [14] $end
$var wire 1 EK i_byteena_mask_reg_a_out [13] $end
$var wire 1 FK i_byteena_mask_reg_a_out [12] $end
$var wire 1 GK i_byteena_mask_reg_a_out [11] $end
$var wire 1 HK i_byteena_mask_reg_a_out [10] $end
$var wire 1 IK i_byteena_mask_reg_a_out [9] $end
$var wire 1 JK i_byteena_mask_reg_a_out [8] $end
$var wire 1 KK i_byteena_mask_reg_a_out [7] $end
$var wire 1 LK i_byteena_mask_reg_a_out [6] $end
$var wire 1 MK i_byteena_mask_reg_a_out [5] $end
$var wire 1 NK i_byteena_mask_reg_a_out [4] $end
$var wire 1 OK i_byteena_mask_reg_a_out [3] $end
$var wire 1 PK i_byteena_mask_reg_a_out [2] $end
$var wire 1 QK i_byteena_mask_reg_a_out [1] $end
$var wire 1 RK i_byteena_mask_reg_a_out [0] $end
$var wire 1 SK i_byteena_mask_reg_b_out [0] $end
$var wire 1 TK i_byteena_mask_reg_a_out_b [15] $end
$var wire 1 UK i_byteena_mask_reg_a_out_b [14] $end
$var wire 1 VK i_byteena_mask_reg_a_out_b [13] $end
$var wire 1 WK i_byteena_mask_reg_a_out_b [12] $end
$var wire 1 XK i_byteena_mask_reg_a_out_b [11] $end
$var wire 1 YK i_byteena_mask_reg_a_out_b [10] $end
$var wire 1 ZK i_byteena_mask_reg_a_out_b [9] $end
$var wire 1 [K i_byteena_mask_reg_a_out_b [8] $end
$var wire 1 \K i_byteena_mask_reg_a_out_b [7] $end
$var wire 1 ]K i_byteena_mask_reg_a_out_b [6] $end
$var wire 1 ^K i_byteena_mask_reg_a_out_b [5] $end
$var wire 1 _K i_byteena_mask_reg_a_out_b [4] $end
$var wire 1 `K i_byteena_mask_reg_a_out_b [3] $end
$var wire 1 aK i_byteena_mask_reg_a_out_b [2] $end
$var wire 1 bK i_byteena_mask_reg_a_out_b [1] $end
$var wire 1 cK i_byteena_mask_reg_a_out_b [0] $end
$var wire 1 dK i_byteena_mask_reg_b_out_a [0] $end
$var wire 1 eK i_address_reg_a [7] $end
$var wire 1 fK i_address_reg_a [6] $end
$var wire 1 gK i_address_reg_a [5] $end
$var wire 1 hK i_address_reg_a [4] $end
$var wire 1 iK i_address_reg_a [3] $end
$var wire 1 jK i_address_reg_a [2] $end
$var wire 1 kK i_address_reg_a [1] $end
$var wire 1 lK i_address_reg_a [0] $end
$var wire 1 mK i_address_reg_b [0] $end
$var wire 1 nK i_wren_reg_a $end
$var wire 1 oK i_wren_reg_b $end
$var wire 1 pK i_rden_reg_a $end
$var wire 1 qK i_rden_reg_b $end
$var wire 1 rK i_read_flag_a $end
$var wire 1 sK i_read_flag_b $end
$var wire 1 tK i_reread_flag_a $end
$var wire 1 uK i_reread_flag_b $end
$var wire 1 vK i_reread_flag2_a $end
$var wire 1 wK i_reread_flag2_b $end
$var wire 1 xK i_write_flag_a $end
$var wire 1 yK i_write_flag_b $end
$var wire 1 zK i_nmram_write_a $end
$var wire 1 {K i_nmram_write_b $end
$var wire 1 |K i_indata_aclr_a $end
$var wire 1 }K i_address_aclr_a $end
$var wire 1 ~K i_wrcontrol_aclr_a $end
$var wire 1 !L i_indata_aclr_b $end
$var wire 1 "L i_address_aclr_b $end
$var wire 1 #L i_wrcontrol_aclr_b $end
$var wire 1 $L i_outdata_aclr_a $end
$var wire 1 %L i_outdata_aclr_b $end
$var wire 1 &L i_rdcontrol_aclr_b $end
$var wire 1 'L i_byteena_aclr_a $end
$var wire 1 (L i_byteena_aclr_b $end
$var wire 1 )L good_to_go_a $end
$var wire 1 *L good_to_go_b $end
$var wire 1 +L i_core_clocken_a $end
$var wire 1 ,L i_core_clocken_b $end
$var wire 1 -L i_core_clocken_b0 $end
$var wire 1 .L i_core_clocken_b1 $end
$var wire 1 /L i_inclocken0 $end
$var wire 1 0L i_input_clocken_b $end
$var wire 1 1L i_outdata_clken_b $end
$var wire 1 2L i_outdata_clken_a $end
$var wire 1 3L i_outlatch_clken_a $end
$var wire 1 4L i_outlatch_clken_b $end
$var wire 1 5L i_core_clocken_a_reg $end
$var wire 1 6L i_core_clocken_b_reg $end
$var wire 1 7L default_val $end
$var wire 1 8L i_data_zero_a [15] $end
$var wire 1 9L i_data_zero_a [14] $end
$var wire 1 :L i_data_zero_a [13] $end
$var wire 1 ;L i_data_zero_a [12] $end
$var wire 1 <L i_data_zero_a [11] $end
$var wire 1 =L i_data_zero_a [10] $end
$var wire 1 >L i_data_zero_a [9] $end
$var wire 1 ?L i_data_zero_a [8] $end
$var wire 1 @L i_data_zero_a [7] $end
$var wire 1 AL i_data_zero_a [6] $end
$var wire 1 BL i_data_zero_a [5] $end
$var wire 1 CL i_data_zero_a [4] $end
$var wire 1 DL i_data_zero_a [3] $end
$var wire 1 EL i_data_zero_a [2] $end
$var wire 1 FL i_data_zero_a [1] $end
$var wire 1 GL i_data_zero_a [0] $end
$var wire 1 HL i_data_zero_b [0] $end
$var wire 1 IL i_data_ones_a [15] $end
$var wire 1 JL i_data_ones_a [14] $end
$var wire 1 KL i_data_ones_a [13] $end
$var wire 1 LL i_data_ones_a [12] $end
$var wire 1 ML i_data_ones_a [11] $end
$var wire 1 NL i_data_ones_a [10] $end
$var wire 1 OL i_data_ones_a [9] $end
$var wire 1 PL i_data_ones_a [8] $end
$var wire 1 QL i_data_ones_a [7] $end
$var wire 1 RL i_data_ones_a [6] $end
$var wire 1 SL i_data_ones_a [5] $end
$var wire 1 TL i_data_ones_a [4] $end
$var wire 1 UL i_data_ones_a [3] $end
$var wire 1 VL i_data_ones_a [2] $end
$var wire 1 WL i_data_ones_a [1] $end
$var wire 1 XL i_data_ones_a [0] $end
$var wire 1 YL i_data_ones_b [0] $end
$var wire 1 ZL same_clock_pulse0 $end
$var wire 1 [L same_clock_pulse1 $end
$var wire 1 \L i_force_reread_a $end
$var wire 1 ]L i_force_reread_a1 $end
$var wire 1 ^L i_force_reread_b $end
$var wire 1 _L i_force_reread_b1 $end
$var wire 1 `L i_force_reread_signal_a $end
$var wire 1 aL i_force_reread_signal_b $end
$var wire 1 bL i_good_to_write_a $end
$var wire 1 cL i_good_to_write_b $end

$scope begin IFG02 $end
$upscope $end

$scope begin IFG03a $end
$upscope $end

$scope begin IFG15 $end
$upscope $end

$scope begin IFG172a $end
$upscope $end

$scope begin IFG50a $end
$upscope $end

$scope begin IFG51a $end
$upscope $end

$scope begin IFG52b $end
$upscope $end

$scope begin IFCLR01 $end
$upscope $end

$scope begin IFG53 $end
$upscope $end

$scope begin IFG57 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
x"
0#
0$
0%
0&
0'
0(
0)
0*
bx ."
bx /"
0e'
b0 f'
b0 o'
b0 p'
bx q'
b0 r'
bx s'
b1111110100100000 t'
bx u'
bx v'
bx w'
bx x'
bx y'
bx z'
bx {'
bx |'
b111111111110101111101110 K+
b111111111110101111101110 L+
b0 U+
bx V+
b0 W+
b0 X+
b0 Y+
b0 Z+
b0 [+
b0 \+
b0 ]+
0^+
0_+
0`+
0a+
0b+
0c+
0d+
0e+
b1010000000 `!
b10000 a!
b1100000 b!
b110000 c!
b111100000 d!
b1011 e!
b10 f!
b11111 g!
b10100000 h!
b101100 i!
b1100100000 j!
b1000001100 k!
b101101000 l!
b101101000 m!
b1111000 n!
b111100 o!
b10101000 p!
b10100111 q!
b11000000 r!
b11000001 s!
b10101000 t!
b10101000 u!
b0 v!
b0 w!
b10101001 x!
b10101000 y!
b10111111 z!
b0 {!
b10101000 |!
b10100111 }!
b0 ~!
b11000000 !"
b101101000 ""
b10000110 #"
b0 $"
b1110001 %"
b101101000 &"
b1110100 '"
b0 ("
b1111010 )"
b10110 *"
b10101 +"
b10101001 ,"
b11000101 -"
b1111110100100000 O'
b11011011001100 P'
b11011100100000 Q'
b11100001110000 R'
b11011011001100 S'
b101111000111000 T'
b101000110010000 U'
b11111100 V'
b0 W'
b1 X'
b10 Y'
b11 Z'
b100 ['
b101 \'
b110 ]'
b111 ^'
b0 _'
b1 `'
b10 a'
b11 b'
b100 c'
b101 d'
b0 M+
b1 N+
b10 O+
b11 P+
b100 Q+
b101 R+
b110 S+
b111 T+
x+
x,
x-
x.
x/
07
06
05
04
03
02
01
00
0?
0>
0=
0<
0;
0:
09
08
xG
xF
xE
xD
xC
xB
xA
x@
xR
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0<!
1;!
1:!
19!
08!
17!
16!
15!
14!
13!
02!
11!
00!
1/!
1.!
1-!
1,!
1+!
1*!
1)!
1(!
1'!
1&!
1%!
0$!
1#!
1"!
1!!
0~
1}
1|
1{
1z
1y
0x
1w
0v
1u
1t
1s
1r
1q
1p
1o
1n
1m
1l
1k
0D!
0C!
0B!
0A!
0@!
0?!
0>!
x=!
0E!
xU!
xT!
xS!
xR!
xQ!
xP!
xO!
xN!
xM!
xL!
xK!
xJ!
xI!
xH!
xG!
xF!
0X!
0W!
0V!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
xD"
xE"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0g'
0h'
0i'
0j'
0k'
0l'
0m'
xn'
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$(
0#(
0"(
0!(
0~'
0}'
0>(
0=(
0<(
0;(
0:(
09(
08(
07(
06(
05(
04(
03(
02(
01(
00(
0/(
0N(
0M(
0L(
0K(
0J(
0I(
0H(
0G(
0F(
0E(
0D(
0C(
0B(
0A(
0@(
0?(
0^(
0](
0\(
0[(
0Z(
0Y(
0X(
0W(
0V(
0U(
0T(
0S(
0R(
0Q(
0P(
0O(
0n(
0m(
0l(
0k(
0j(
0i(
0h(
0g(
0f(
0e(
0d(
0c(
0b(
0a(
0`(
0_(
0~(
0}(
0|(
0{(
0z(
0y(
0x(
0w(
0v(
0u(
0t(
0s(
0r(
0q(
0p(
0o(
00)
0/)
0.)
0-)
0,)
0+)
0*)
0))
0()
0')
0&)
0%)
0$)
0#)
0")
0!)
0@)
0?)
0>)
0=)
0<)
0;)
0:)
09)
08)
07)
06)
05)
04)
03)
02)
01)
0P)
0O)
0N)
0M)
0L)
0K)
0J)
0I)
0H)
0G)
0F)
0E)
0D)
0C)
0B)
0A)
0Q)
xa)
x`)
x_)
x^)
x])
x\)
x[)
xZ)
xY)
xX)
xW)
xV)
xU)
xT)
xS)
xR)
0b)
0p)
0o)
0n)
0m)
0l)
0k)
0j)
0i)
0h)
0g)
0f)
0e)
0d)
0c)
0q)
0!*
0~)
0})
0|)
0{)
0z)
0y)
0x)
0w)
0v)
0u)
0t)
0s)
0r)
0"*
00*
0/*
0.*
0-*
0,*
0+*
0**
0)*
0(*
0'*
0&*
0%*
0$*
0#*
01*
0?*
0>*
0=*
0<*
0;*
0:*
09*
08*
07*
06*
05*
04*
03*
02*
0@*
0O*
0N*
0M*
0L*
0K*
0J*
0I*
0H*
0G*
0F*
0E*
0D*
0C*
0B*
0A*
0P*
0_*
0^*
0]*
0\*
0[*
0Z*
0Y*
0X*
0W*
0V*
0U*
0T*
0S*
0R*
0Q*
0`*
0h*
0g*
0f*
0e*
0d*
0c*
0b*
0a*
0p*
0o*
0n*
0m*
0l*
0k*
0j*
0i*
0x*
0w*
0v*
0u*
0t*
0s*
0r*
0q*
02+
11+
10+
1/+
0.+
1-+
1,+
1++
1*+
1)+
0(+
1'+
0&+
1%+
1$+
1#+
1"+
1!+
1~*
1}*
1|*
1{*
1z*
1y*
0J+
1I+
1H+
1G+
0F+
1E+
1D+
1C+
1B+
1A+
0@+
1?+
0>+
1=+
1<+
1;+
1:+
19+
18+
17+
16+
15+
14+
13+
0Q
0P
0O
0N
0M
0L
0K
0J
xI
0H
0Z"
0M"
xN"
xO"
xU"
xV"
0W"
0\"
1]"
0^"
0_"
1`"
0k"
1l"
0m"
0n"
0o"
0p"
0q"
0v"
0w"
0x"
1y"
x"#
x##
0$#
0%#
0&#
0'#
0(#
x)#
x*#
0+#
z,#
z-#
x.#
x/#
x0#
01#
09#
1:#
0;#
0<#
1=#
0>#
0?#
0@#
0A#
0B#
0]#
x^#
0_#
0`#
xa#
xb#
0c#
0d#
0i#
0j#
1k#
1l#
zm#
zn#
xo#
xp#
0q#
1r#
1s#
xt#
xu#
1f$
xg$
xh$
0i$
1j$
0n&
0o&
0p&
0q&
0r&
0s&
0t&
0u&
0v&
0w&
0x&
xy&
xz&
x{&
x|&
x}&
x~&
x!'
x"'
0#'
0$'
1%'
0&'
x''
0('
1)'
x*'
0+'
0,'
00'
01'
02'
03'
06'
07'
0;'
x<'
0>'
0?'
0@'
0A'
1B'
0C'
0D'
0E'
xK'
0L'
0M'
0v+
09,
0:,
1;,
1<,
zO,
1P,
1Q,
1R,
1S,
0T,
0U,
0V,
0W,
0"/
0#/
0$/
0%/
0&/
0'/
0(/
0)/
0*/
0+/
0,/
0-/
0./
0//
00/
01/
02/
03/
04/
05/
06/
07/
08/
09/
0:/
0;/
0</
1=/
1>/
1?/
1@/
1A/
1B/
0C/
1D/
1E/
1F/
0G/
0H/
0I/
0l/
0m/
0n/
0o/
0p/
0q/
0r/
0s/
1t/
1u/
0&0
0G0
0H0
1I0
1J0
z]0
1^0
1_0
1`0
1a0
0b0
0c0
0d0
0e0
0.3
0/3
003
013
023
033
043
053
063
073
083
093
0:3
0;3
0<3
0=3
0>3
0?3
0@3
0A3
0B3
0C3
0D3
0E3
0F3
0G3
0H3
1I3
1J3
1K3
1L3
1M3
1N3
0O3
1P3
1Q3
1R3
0S3
0T3
0U3
0x3
0y3
0z3
0{3
0|3
0}3
0~3
0!4
1"4
1#4
024
0S4
0T4
1U4
1V4
zi4
1j4
1k4
1l4
1m4
0n4
0o4
0p4
0q4
0:7
0;7
0<7
0=7
0>7
0?7
0@7
0A7
0B7
0C7
0D7
0E7
0F7
0G7
0H7
0I7
0J7
0K7
0L7
0M7
0N7
0O7
0P7
0Q7
0R7
0S7
0T7
1U7
1V7
1W7
1X7
1Y7
1Z7
0[7
1\7
1]7
1^7
0_7
0`7
0a7
0&8
0'8
0(8
0)8
0*8
0+8
0,8
0-8
1.8
1/8
0>8
0_8
0`8
1a8
1b8
zu8
1v8
1w8
1x8
1y8
0z8
0{8
0|8
0}8
0F;
0G;
0H;
0I;
0J;
0K;
0L;
0M;
0N;
0O;
0P;
0Q;
0R;
0S;
0T;
0U;
0V;
0W;
0X;
0Y;
0Z;
0[;
0\;
0];
0^;
0_;
0`;
1a;
1b;
1c;
1d;
1e;
1f;
0g;
1h;
1i;
1j;
0k;
0l;
0m;
02<
03<
04<
05<
06<
07<
08<
09<
1:<
1;<
0J<
0k<
0l<
1m<
1n<
z#=
1$=
1%=
1&=
1'=
0(=
0)=
0*=
0+=
0R?
0S?
0T?
0U?
0V?
0W?
0X?
0Y?
0Z?
0[?
0\?
0]?
0^?
0_?
0`?
0a?
0b?
0c?
0d?
0e?
0f?
0g?
0h?
0i?
0j?
0k?
0l?
1m?
1n?
1o?
1p?
1q?
1r?
0s?
1t?
1u?
1v?
0w?
0x?
0y?
0>@
0?@
0@@
0A@
0B@
0C@
0D@
0E@
1F@
1G@
0W@
034
044
054
064
074
084
094
0:4
0;4
0<4
0=4
0>4
0?4
0@4
0A4
0B4
0x@
0y@
1z@
1{@
z0A
11A
12A
13A
14A
05A
06A
07A
08A
0`C
0aC
0bC
0cC
0dC
0eC
0fC
0gC
0hC
0iC
0jC
0kC
0lC
0mC
0nC
0oC
0pC
0qC
0rC
0sC
0tC
0uC
0vC
0wC
0xC
0yC
0zC
1{C
1|C
1}C
1~C
1!D
1"D
0#D
1$D
1%D
1&D
0'D
0(D
0)D
0LD
0MD
0ND
0OD
0PD
0QD
0RD
0SD
1TD
1UD
0eD
0(E
0)E
1*E
1+E
z>E
1?E
1@E
1AE
1BE
0CE
0DE
0EE
0FE
0nG
0oG
0pG
0qG
0rG
0sG
0tG
0uG
0vG
0wG
0xG
0yG
0zG
0{G
0|G
0}G
0~G
0!H
0"H
0#H
0$H
0%H
0&H
0'H
0(H
0)H
0*H
1+H
1,H
1-H
1.H
1/H
10H
01H
12H
13H
14H
05H
06H
07H
0ZH
0[H
0\H
0]H
0^H
0_H
0`H
0aH
1bH
1cH
0lH
0/I
00I
11I
12I
zEI
1FI
1GI
1HI
1II
0JI
0KI
0LI
0MI
0nK
0oK
0pK
0qK
0rK
0sK
0tK
0uK
0vK
0wK
0xK
0yK
0zK
0{K
0|K
0}K
0~K
0!L
0"L
0#L
0$L
0%L
0&L
0'L
0(L
0)L
0*L
1+L
1,L
1-L
1.L
1/L
10L
01L
12L
13L
14L
05L
06L
07L
0ZL
0[L
0\L
0]L
0^L
0_L
0`L
0aL
1bL
1cL
0P"
0Q"
0R"
xS"
xT"
1a"
1b"
1c"
1d"
1e"
1f"
1g"
1h"
1i"
1j"
0z"
0{"
0|"
0}"
0~"
0!#
x2#
x3#
x4#
x5#
x6#
x7#
x8#
1C#
1D#
1E#
1F#
1G#
1H#
1I#
1J#
1K#
1L#
xM#
xN#
xO#
xP#
xQ#
xR#
xS#
xT#
xU#
xV#
xW#
xX#
xY#
xZ#
0[#
0\#
0e#
0f#
0g#
0h#
0X"
0Y"
0k$
0l$
0m$
0n$
0o$
0p$
0q$
0r$
0s$
0t$
0u$
0v$
0w$
07%
08%
09%
0:%
0;%
0<%
0=%
0>%
0?%
0@%
0A%
0B%
0C%
0D%
0E%
0F%
0G%
0H%
0I%
0J%
0K%
0L%
0M%
0N%
0O%
0P%
0Q%
0R%
0S%
0T%
0U%
0V%
0W%
0X%
0Y%
0Z%
0[%
0\%
0]%
0^%
0_%
0`%
0a%
0b%
0c%
0d%
0e%
0f%
0g%
0h%
0i%
0j%
0k%
0l%
0m%
0n%
0o%
0p%
0q%
0r%
0s%
0t%
0u%
0v%
0w%
0x%
0y%
0z%
0{%
0|%
0}%
0~%
0!&
0"&
0#&
0$&
0%&
0&&
0'&
0(&
0)&
0*&
0+&
0,&
0-&
0.&
0/&
00&
01&
02&
03&
04&
05&
06&
07&
08&
09&
0:&
0;&
0<&
0=&
0>&
0?&
0@&
0A&
0B&
0C&
0D&
0E&
0F&
0G&
0H&
0I&
0J&
0K&
0L&
0M&
0N&
0O&
0P&
0Q&
0R&
0S&
0T&
0U&
0V&
0W&
0X&
0Y&
0Z&
0[&
0\&
0]&
0^&
0_&
0`&
0a&
0b&
0c&
0d&
0e&
0f&
0g&
0h&
xi&
xj&
xk&
xl&
xm&
0-'
0.'
0/'
xF'
xG'
xH'
xI'
xJ'
xf+
xg+
xh+
xi+
xj+
xk+
xl+
xm+
xn+
xo+
xp+
xq+
xr+
xs+
xt+
xu+
0w+
0x+
0y+
0z+
0{+
0|+
0}+
0~+
0!,
0",
0#,
0$,
0%,
0&,
0',
0(,
0),
0*,
0+,
0,,
0-,
0.,
0/,
00,
01,
02,
03,
04,
05,
06,
07,
08,
0Z,
0n,
0*.
0!/
0v/
0w/
0x/
0y/
0z/
0{/
0|/
0}/
0~/
0!0
0"0
0#0
0$0
0%0
0'0
0(0
0)0
0*0
0+0
0,0
0-0
0.0
0/0
000
010
020
030
040
050
060
070
080
090
0:0
0;0
0<0
0=0
0>0
0?0
0@0
0A0
0B0
0C0
0D0
0E0
0F0
0h0
0|0
082
0-3
0$4
0%4
0&4
0'4
0(4
0)4
0*4
0+4
0,4
0-4
0.4
0/4
004
014
0C4
0D4
0E4
0F4
0G4
0H4
0I4
0J4
0K4
0L4
0M4
0N4
0O4
0P4
0Q4
0R4
0t4
0*5
0D6
097
008
018
028
038
048
058
068
078
088
098
0:8
0;8
0<8
0=8
0?8
0@8
0A8
0B8
0C8
0D8
0E8
0F8
0G8
0H8
0I8
0J8
0K8
0L8
0M8
0N8
0O8
0P8
0Q8
0R8
0S8
0T8
0U8
0V8
0W8
0X8
0Y8
0Z8
0[8
0\8
0]8
0^8
0"9
069
0P:
0E;
0<<
0=<
0><
0?<
0@<
0A<
0B<
0C<
0D<
0E<
0F<
0G<
0H<
0I<
0K<
0L<
0M<
0N<
0O<
0P<
0Q<
0R<
0S<
0T<
0U<
0V<
0W<
0X<
0Y<
0Z<
0[<
0\<
0]<
0^<
0_<
0`<
0a<
0b<
0c<
0d<
0e<
0f<
0g<
0h<
0i<
0j<
0.=
0B=
0\>
0Q?
0H@
0I@
0J@
0K@
0L@
0M@
0N@
0O@
0P@
0Q@
0R@
0S@
0T@
0U@
0V@
0X@
0Y@
0Z@
0[@
0\@
0]@
0^@
0_@
0`@
0a@
0b@
0c@
0d@
0e@
0f@
0g@
0h@
0i@
0j@
0k@
0l@
0m@
0n@
0o@
0p@
0q@
0r@
0s@
0t@
0u@
0v@
0w@
0;A
0OA
0iB
0_C
0VD
0WD
0XD
0YD
0ZD
0[D
0\D
0]D
0^D
0_D
0`D
0aD
0bD
0cD
0dD
0fD
0gD
0hD
0iD
0jD
0kD
0lD
0mD
0nD
0oD
0pD
0qD
0rD
0sD
0tD
0uD
0vD
0wD
0xD
0yD
0zD
0{D
0|D
0}D
0~D
0!E
0"E
0#E
0$E
0%E
0&E
0'E
0IE
0]E
0wF
0mG
0dH
0eH
0fH
0gH
0hH
0iH
0jH
0kH
0mH
0nH
0oH
0pH
0qH
0rH
0sH
0tH
0uH
0vH
0wH
0xH
0yH
0zH
0{H
0|H
0}H
0~H
0!I
0"I
0#I
0$I
0%I
0&I
0'I
0(I
0)I
0*I
0+I
0,I
0-I
0.I
0PI
0dI
0~J
0mK
0["
0r"
0s"
0t"
0u"
0$%
0%%
0&%
0(%
0)%
0*%
0+%
0,%
0.%
0/%
x8'
x9'
x:'
1=,
1>,
1?,
1@,
1A,
1B,
1C,
1D,
1E,
1F,
1G,
1H,
1I,
1J,
1K,
1L,
1M,
1N,
1X,
zY,
0[,
0\,
0],
0^,
0_,
0`,
0a,
0b,
0c,
0d,
0e,
0f,
0g,
0h,
0i,
0j,
0k,
0l,
0m,
0o,
0p,
0q,
0r,
0s,
0t,
0u,
0v,
0w,
0x,
0y,
0z,
0{,
0|,
0},
0~,
0!-
0"-
0#-
0$-
0%-
0&-
0'-
0(-
0)-
0*-
0+-
0,-
0--
0.-
0/-
00-
01-
02-
03-
04-
05-
06-
07-
08-
09-
0:-
0;-
0<-
0=-
0>-
0?-
0@-
0A-
0B-
0C-
0D-
0E-
0F-
0G-
0H-
0I-
0J-
0K-
0L-
0M-
0N-
0O-
0P-
0Q-
0R-
0S-
0T-
0U-
0V-
0W-
0X-
0Y-
0Z-
0[-
0\-
0]-
0^-
0_-
0`-
0a-
0b-
0c-
0d-
0e-
0f-
0g-
0h-
0i-
0j-
0k-
0l-
0m-
0n-
0o-
0p-
0q-
0r-
0s-
0t-
0u-
0v-
0w-
0x-
0y-
0z-
0{-
0|-
0}-
0~-
0!.
0".
0#.
0$.
0%.
0&.
0'.
0(.
0).
0+.
0,.
0-.
0..
0/.
00.
01.
02.
03.
04.
05.
06.
07.
08.
09.
0:.
0;.
1<.
1=.
1>.
1?.
1@.
1A.
1B.
1C.
1D.
1E.
1F.
1G.
1H.
1I.
1J.
1K.
1L.
1M.
1N.
1O.
1P.
1Q.
1R.
1S.
1T.
1U.
1V.
1W.
1X.
1Y.
1Z.
1[.
1\.
1].
1^.
1_.
1`.
1a.
1b.
1c.
1d.
1e.
1f.
1g.
1h.
1i.
1j.
1k.
1l.
1m.
1n.
0o.
0p.
0q.
0r.
0s.
0t.
0u.
0v.
0w.
0x.
0y.
0z.
0{.
0|.
0}.
0~.
0J/
0K/
0L/
0M/
0N/
0O/
0P/
0Q/
0R/
0S/
0T/
0U/
0V/
0W/
0X/
0Y/
0Z/
1[/
1\/
1]/
1^/
1_/
1`/
1a/
1b/
1c/
1d/
1e/
1f/
1g/
1h/
1i/
1j/
1k/
1K0
1L0
1M0
1N0
1O0
1P0
1Q0
1R0
1S0
1T0
1U0
1V0
1W0
1X0
1Y0
1Z0
1[0
1\0
1f0
zg0
0i0
0j0
0k0
0l0
0m0
0n0
0o0
0p0
0q0
0r0
0s0
0t0
0u0
0v0
0w0
0x0
0y0
0z0
0{0
0}0
0~0
0!1
0"1
0#1
0$1
0%1
0&1
0'1
0(1
0)1
0*1
0+1
0,1
0-1
0.1
0/1
001
011
021
031
041
051
061
071
081
091
0:1
0;1
0<1
0=1
0>1
0?1
0@1
0A1
0B1
0C1
0D1
0E1
0F1
0G1
0H1
0I1
0J1
0K1
0L1
0M1
0N1
0O1
0P1
0Q1
0R1
0S1
0T1
0U1
0V1
0W1
0X1
0Y1
0Z1
0[1
0\1
0]1
0^1
0_1
0`1
0a1
0b1
0c1
0d1
0e1
0f1
0g1
0h1
0i1
0j1
0k1
0l1
0m1
0n1
0o1
0p1
0q1
0r1
0s1
0t1
0u1
0v1
0w1
0x1
0y1
0z1
0{1
0|1
0}1
0~1
0!2
0"2
0#2
0$2
0%2
0&2
0'2
0(2
0)2
0*2
0+2
0,2
0-2
0.2
0/2
002
012
022
032
042
052
062
072
092
0:2
0;2
0<2
0=2
0>2
0?2
0@2
0A2
0B2
0C2
0D2
0E2
0F2
0G2
0H2
0I2
1J2
1K2
1L2
1M2
1N2
1O2
1P2
1Q2
1R2
1S2
1T2
1U2
1V2
1W2
1X2
1Y2
1Z2
1[2
1\2
1]2
1^2
1_2
1`2
1a2
1b2
1c2
1d2
1e2
1f2
1g2
1h2
1i2
1j2
1k2
1l2
1m2
1n2
1o2
1p2
1q2
1r2
1s2
1t2
1u2
1v2
1w2
1x2
1y2
1z2
1{2
1|2
0}2
0~2
0!3
0"3
0#3
0$3
0%3
0&3
0'3
0(3
0)3
0*3
0+3
0,3
0V3
0W3
0X3
0Y3
0Z3
0[3
0\3
0]3
0^3
0_3
0`3
0a3
0b3
0c3
0d3
0e3
0f3
1g3
1h3
1i3
1j3
1k3
1l3
1m3
1n3
1o3
1p3
1q3
1r3
1s3
1t3
1u3
1v3
1w3
1W4
1X4
1Y4
1Z4
1[4
1\4
1]4
1^4
1_4
1`4
1a4
1b4
1c4
1d4
1e4
1f4
1g4
1h4
1r4
zs4
0u4
0v4
0w4
0x4
0y4
0z4
0{4
0|4
0}4
0~4
0!5
0"5
0#5
0$5
0%5
0&5
0'5
0(5
0)5
0+5
0,5
0-5
0.5
0/5
005
015
025
035
045
055
065
075
085
095
0:5
0;5
0<5
0=5
0>5
0?5
0@5
0A5
0B5
0C5
0D5
0E5
0F5
0G5
0H5
0I5
0J5
0K5
0L5
0M5
0N5
0O5
0P5
0Q5
0R5
0S5
0T5
0U5
0V5
0W5
0X5
0Y5
0Z5
0[5
0\5
0]5
0^5
0_5
0`5
0a5
0b5
0c5
0d5
0e5
0f5
0g5
0h5
0i5
0j5
0k5
0l5
0m5
0n5
0o5
0p5
0q5
0r5
0s5
0t5
0u5
0v5
0w5
0x5
0y5
0z5
0{5
0|5
0}5
0~5
0!6
0"6
0#6
0$6
0%6
0&6
0'6
0(6
0)6
0*6
0+6
0,6
0-6
0.6
0/6
006
016
026
036
046
056
066
076
086
096
0:6
0;6
0<6
0=6
0>6
0?6
0@6
0A6
0B6
0C6
0E6
0F6
0G6
0H6
0I6
0J6
0K6
0L6
0M6
0N6
0O6
0P6
0Q6
0R6
0S6
0T6
0U6
1V6
1W6
1X6
1Y6
1Z6
1[6
1\6
1]6
1^6
1_6
1`6
1a6
1b6
1c6
1d6
1e6
1f6
1g6
1h6
1i6
1j6
1k6
1l6
1m6
1n6
1o6
1p6
1q6
1r6
1s6
1t6
1u6
1v6
1w6
1x6
1y6
1z6
1{6
1|6
1}6
1~6
1!7
1"7
1#7
1$7
1%7
1&7
1'7
1(7
1)7
1*7
0+7
0,7
0-7
0.7
0/7
007
017
027
037
047
057
067
077
087
0b7
0c7
0d7
0e7
0f7
0g7
0h7
0i7
0j7
0k7
0l7
0m7
0n7
0o7
0p7
0q7
0r7
1s7
1t7
1u7
1v7
1w7
1x7
1y7
1z7
1{7
1|7
1}7
1~7
1!8
1"8
1#8
1$8
1%8
1c8
1d8
1e8
1f8
1g8
1h8
1i8
1j8
1k8
1l8
1m8
1n8
1o8
1p8
1q8
1r8
1s8
1t8
1~8
z!9
0#9
0$9
0%9
0&9
0'9
0(9
0)9
0*9
0+9
0,9
0-9
0.9
0/9
009
019
029
039
049
059
079
089
099
0:9
0;9
0<9
0=9
0>9
0?9
0@9
0A9
0B9
0C9
0D9
0E9
0F9
0G9
0H9
0I9
0J9
0K9
0L9
0M9
0N9
0O9
0P9
0Q9
0R9
0S9
0T9
0U9
0V9
0W9
0X9
0Y9
0Z9
0[9
0\9
0]9
0^9
0_9
0`9
0a9
0b9
0c9
0d9
0e9
0f9
0g9
0h9
0i9
0j9
0k9
0l9
0m9
0n9
0o9
0p9
0q9
0r9
0s9
0t9
0u9
0v9
0w9
0x9
0y9
0z9
0{9
0|9
0}9
0~9
0!:
0":
0#:
0$:
0%:
0&:
0':
0(:
0):
0*:
0+:
0,:
0-:
0.:
0/:
00:
01:
02:
03:
04:
05:
06:
07:
08:
09:
0::
0;:
0<:
0=:
0>:
0?:
0@:
0A:
0B:
0C:
0D:
0E:
0F:
0G:
0H:
0I:
0J:
0K:
0L:
0M:
0N:
0O:
0Q:
0R:
0S:
0T:
0U:
0V:
0W:
0X:
0Y:
0Z:
0[:
0\:
0]:
0^:
0_:
0`:
0a:
1b:
1c:
1d:
1e:
1f:
1g:
1h:
1i:
1j:
1k:
1l:
1m:
1n:
1o:
1p:
1q:
1r:
1s:
1t:
1u:
1v:
1w:
1x:
1y:
1z:
1{:
1|:
1}:
1~:
1!;
1";
1#;
1$;
1%;
1&;
1';
1(;
1);
1*;
1+;
1,;
1-;
1.;
1/;
10;
11;
12;
13;
14;
15;
16;
07;
08;
09;
0:;
0;;
0<;
0=;
0>;
0?;
0@;
0A;
0B;
0C;
0D;
0n;
0o;
0p;
0q;
0r;
0s;
0t;
0u;
0v;
0w;
0x;
0y;
0z;
0{;
0|;
0};
0~;
1!<
1"<
1#<
1$<
1%<
1&<
1'<
1(<
1)<
1*<
1+<
1,<
1-<
1.<
1/<
10<
11<
1o<
1p<
1q<
1r<
1s<
1t<
1u<
1v<
1w<
1x<
1y<
1z<
1{<
1|<
1}<
1~<
1!=
1"=
1,=
z-=
0/=
00=
01=
02=
03=
04=
05=
06=
07=
08=
09=
0:=
0;=
0<=
0==
0>=
0?=
0@=
0A=
0C=
0D=
0E=
0F=
0G=
0H=
0I=
0J=
0K=
0L=
0M=
0N=
0O=
0P=
0Q=
0R=
0S=
0T=
0U=
0V=
0W=
0X=
0Y=
0Z=
0[=
0\=
0]=
0^=
0_=
0`=
0a=
0b=
0c=
0d=
0e=
0f=
0g=
0h=
0i=
0j=
0k=
0l=
0m=
0n=
0o=
0p=
0q=
0r=
0s=
0t=
0u=
0v=
0w=
0x=
0y=
0z=
0{=
0|=
0}=
0~=
0!>
0">
0#>
0$>
0%>
0&>
0'>
0(>
0)>
0*>
0+>
0,>
0->
0.>
0/>
00>
01>
02>
03>
04>
05>
06>
07>
08>
09>
0:>
0;>
0<>
0=>
0>>
0?>
0@>
0A>
0B>
0C>
0D>
0E>
0F>
0G>
0H>
0I>
0J>
0K>
0L>
0M>
0N>
0O>
0P>
0Q>
0R>
0S>
0T>
0U>
0V>
0W>
0X>
0Y>
0Z>
0[>
0]>
0^>
0_>
0`>
0a>
0b>
0c>
0d>
0e>
0f>
0g>
0h>
0i>
0j>
0k>
0l>
0m>
1n>
1o>
1p>
1q>
1r>
1s>
1t>
1u>
1v>
1w>
1x>
1y>
1z>
1{>
1|>
1}>
1~>
1!?
1"?
1#?
1$?
1%?
1&?
1'?
1(?
1)?
1*?
1+?
1,?
1-?
1.?
1/?
10?
11?
12?
13?
14?
15?
16?
17?
18?
19?
1:?
1;?
1<?
1=?
1>?
1??
1@?
1A?
1B?
0C?
0D?
0E?
0F?
0G?
0H?
0I?
0J?
0K?
0L?
0M?
0N?
0O?
0P?
0z?
0{?
0|?
0}?
0~?
0!@
0"@
0#@
0$@
0%@
0&@
0'@
0(@
0)@
0*@
0+@
0,@
1-@
1.@
1/@
10@
11@
12@
13@
14@
15@
16@
17@
18@
19@
1:@
1;@
1<@
1=@
1|@
1}@
1~@
1!A
1"A
1#A
1$A
1%A
1&A
1'A
1(A
1)A
1*A
1+A
1,A
1-A
1.A
1/A
19A
z:A
0<A
0=A
0>A
0?A
0@A
0AA
0BA
0CA
0DA
0EA
0FA
0GA
0HA
0IA
0JA
0KA
0LA
0MA
0NA
0PA
0QA
0RA
0SA
0TA
0UA
0VA
0WA
0XA
0YA
0ZA
0[A
0\A
0]A
0^A
0_A
0`A
0aA
0bA
0cA
0dA
0eA
0fA
0gA
0hA
0iA
0jA
0kA
0lA
0mA
0nA
0oA
0pA
0qA
0rA
0sA
0tA
0uA
0vA
0wA
0xA
0yA
0zA
0{A
0|A
0}A
0~A
0!B
0"B
0#B
0$B
0%B
0&B
0'B
0(B
0)B
0*B
0+B
0,B
0-B
0.B
0/B
00B
01B
02B
03B
04B
05B
06B
07B
08B
09B
0:B
0;B
0<B
0=B
0>B
0?B
0@B
0AB
0BB
0CB
0DB
0EB
0FB
0GB
0HB
0IB
0JB
0KB
0LB
0MB
0NB
0OB
0PB
0QB
0RB
0SB
0TB
0UB
0VB
0WB
0XB
0YB
0ZB
0[B
0\B
0]B
0^B
0_B
0`B
0aB
0bB
0cB
0dB
0eB
0fB
0gB
0hB
0jB
0kB
0lB
0mB
0nB
0oB
0pB
0qB
0rB
0sB
0tB
0uB
0vB
0wB
0xB
0yB
0zB
1{B
1|B
1}B
1~B
1!C
1"C
1#C
1$C
1%C
1&C
1'C
1(C
1)C
1*C
1+C
1,C
1-C
1.C
1/C
10C
11C
12C
13C
14C
15C
16C
17C
18C
19C
1:C
1;C
1<C
1=C
1>C
1?C
1@C
1AC
1BC
1CC
1DC
1EC
1FC
1GC
1HC
1IC
1JC
1KC
1LC
1MC
1NC
1OC
0PC
0QC
0RC
0SC
0TC
0UC
0VC
0WC
0XC
0YC
0ZC
0[C
0\C
0]C
0^C
0*D
0+D
0,D
0-D
0.D
0/D
00D
01D
02D
03D
04D
05D
06D
07D
08D
09D
0:D
1;D
1<D
1=D
1>D
1?D
1@D
1AD
1BD
1CD
1DD
1ED
1FD
1GD
1HD
1ID
1JD
1KD
1,E
1-E
1.E
1/E
10E
11E
12E
13E
14E
15E
16E
17E
18E
19E
1:E
1;E
1<E
1=E
1GE
zHE
0JE
0KE
0LE
0ME
0NE
0OE
0PE
0QE
0RE
0SE
0TE
0UE
0VE
0WE
0XE
0YE
0ZE
0[E
0\E
0^E
0_E
0`E
0aE
0bE
0cE
0dE
0eE
0fE
0gE
0hE
0iE
0jE
0kE
0lE
0mE
0nE
0oE
0pE
0qE
0rE
0sE
0tE
0uE
0vE
0wE
0xE
0yE
0zE
0{E
0|E
0}E
0~E
0!F
0"F
0#F
0$F
0%F
0&F
0'F
0(F
0)F
0*F
0+F
0,F
0-F
0.F
0/F
00F
01F
02F
03F
04F
05F
06F
07F
08F
09F
0:F
0;F
0<F
0=F
0>F
0?F
0@F
0AF
0BF
0CF
0DF
0EF
0FF
0GF
0HF
0IF
0JF
0KF
0LF
0MF
0NF
0OF
0PF
0QF
0RF
0SF
0TF
0UF
0VF
0WF
0XF
0YF
0ZF
0[F
0\F
0]F
0^F
0_F
0`F
0aF
0bF
0cF
0dF
0eF
0fF
0gF
0hF
0iF
0jF
0kF
0lF
0mF
0nF
0oF
0pF
0qF
0rF
0sF
0tF
0uF
0vF
0xF
0yF
0zF
0{F
0|F
0}F
0~F
0!G
0"G
0#G
0$G
0%G
0&G
0'G
0(G
0)G
0*G
1+G
1,G
1-G
1.G
1/G
10G
11G
12G
13G
14G
15G
16G
17G
18G
19G
1:G
1;G
1<G
1=G
1>G
1?G
1@G
1AG
1BG
1CG
1DG
1EG
1FG
1GG
1HG
1IG
1JG
1KG
1LG
1MG
1NG
1OG
1PG
1QG
1RG
1SG
1TG
1UG
1VG
1WG
1XG
1YG
1ZG
1[G
1\G
1]G
0^G
0_G
0`G
0aG
0bG
0cG
0dG
0eG
0fG
0gG
0hG
0iG
0jG
0kG
0lG
08H
09H
0:H
0;H
0<H
0=H
0>H
0?H
0@H
0AH
0BH
0CH
0DH
0EH
0FH
0GH
0HH
1IH
1JH
1KH
1LH
1MH
1NH
1OH
1PH
1QH
1RH
1SH
1TH
1UH
1VH
1WH
1XH
1YH
13I
14I
15I
16I
17I
18I
19I
1:I
1;I
1<I
1=I
1>I
1?I
1@I
1AI
1BI
1CI
1DI
1NI
zOI
0QI
0RI
0SI
0TI
0UI
0VI
0WI
0XI
0YI
0ZI
0[I
0\I
0]I
0^I
0_I
0`I
0aI
0bI
0cI
0eI
0fI
0gI
0hI
0iI
0jI
0kI
0lI
0mI
0nI
0oI
0pI
0qI
0rI
0sI
0tI
0uI
0vI
0wI
0xI
0yI
0zI
0{I
0|I
0}I
0~I
0!J
0"J
0#J
0$J
0%J
0&J
0'J
0(J
0)J
0*J
0+J
0,J
0-J
0.J
0/J
00J
01J
02J
03J
04J
05J
06J
07J
08J
09J
0:J
0;J
0<J
0=J
0>J
0?J
0@J
0AJ
0BJ
0CJ
0DJ
0EJ
0FJ
0GJ
0HJ
0IJ
0JJ
0KJ
0LJ
0MJ
0NJ
0OJ
0PJ
0QJ
0RJ
0SJ
0TJ
0UJ
0VJ
0WJ
0XJ
0YJ
0ZJ
0[J
0\J
0]J
0^J
0_J
0`J
0aJ
0bJ
0cJ
0dJ
0eJ
0fJ
0gJ
0hJ
0iJ
0jJ
0kJ
0lJ
0mJ
0nJ
0oJ
0pJ
0qJ
0rJ
0sJ
0tJ
0uJ
0vJ
0wJ
0xJ
0yJ
0zJ
0{J
0|J
0}J
0!K
0"K
0#K
0$K
0%K
0&K
0'K
0(K
0)K
0*K
0+K
0,K
0-K
0.K
0/K
00K
01K
12K
13K
14K
15K
16K
17K
18K
19K
1:K
1;K
1<K
1=K
1>K
1?K
1@K
1AK
1BK
1CK
1DK
1EK
1FK
1GK
1HK
1IK
1JK
1KK
1LK
1MK
1NK
1OK
1PK
1QK
1RK
1SK
1TK
1UK
1VK
1WK
1XK
1YK
1ZK
1[K
1\K
1]K
1^K
1_K
1`K
1aK
1bK
1cK
1dK
0eK
0fK
0gK
0hK
0iK
0jK
0kK
0lK
08L
09L
0:L
0;L
0<L
0=L
0>L
0?L
0@L
0AL
0BL
0CL
0DL
0EL
0FL
0GL
0HL
1IL
1JL
1KL
1LL
1ML
1NL
1OL
1PL
1QL
1RL
1SL
1TL
1UL
1VL
1WL
1XL
1YL
b0 v#
b0 w#
b10000000000000000000000000000000 x#
b10000000000000000000000000000000 y#
b10000000000000000000000000000000 z#
b0 ^$
b100 _$
b11 `$
b10 a$
b1 b$
b0 c$
b10000000000000000000000000000000 d$
b10000000000000000000000000000000 e$
b1010 x$
b1 y$
b0 z$
b0 {$
b0 |$
b1 }$
b0 ~$
b1 !%
b0 "%
b10011100001111 #%
b10011100001111 '%
b10011100001111 -%
b1 0%
b1 1%
b0 2%
b0 3%
b0 4%
b0 5%
b101 6%
b0 4'
b0 5'
b0 ='
b0 N'
b0 {#
b0 |#
b0 }#
b0 ~#
b0 !$
b0 "$
b0 #$
b0 $$
b0 %$
b0 &$
b1010 '$
b11110100001001000 ($
b101 )$
b101 *$
b101 +$
b1010 ,$
b11110100001001000 -$
b101 .$
b101 /$
b101 0$
b1 1$
b1 2$
b1 3$
b1 4$
b1 5$
b1 6$
b1 7$
b1 8$
b1 9$
b1 :$
b1 ;$
b1 <$
b1 =$
b1 >$
b1 ?$
b0 @$
b0 A$
b0 B$
b0 C$
b0 D$
b1010 E$
b11110100001001000 F$
b101 G$
b101 H$
b101 I$
b1010 J$
b11110100001001000 K$
b101 L$
b101 M$
b101 N$
b0 O$
b0 P$
b0 Q$
b0 R$
b0 S$
b0 T$
b0 U$
b0 V$
b0 W$
b0 X$
b0 Y$
b0 Z$
b0 [$
b0 \$
b0 ]$
$end
#1
1D'
#5
1!
1H
1M"
1W"
1Y"
1#'
1u&
1L'
1h$
b0 q'
b0 u'
b0 v'
b0 w'
b0 x'
b0 y'
b0 z'
b0 {'
b0 |'
b0 s'
b1 r'
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0H!
0G!
0F!
b0 V+
0a)
0u+
0`)
0t+
0_)
0s+
0^)
0r+
0])
0q+
0\)
0p+
0[)
0o+
0Z)
0n+
0Y)
0m+
0X)
0l+
0W)
0k+
0V)
0j+
0U)
0i+
0T)
0h+
0S)
0g+
0R)
0f+
